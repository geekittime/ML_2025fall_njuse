id,user/login,body,submitted_at,pr_number
3208198956,boomanaiden154,,2025-09-10T23:47:34Z,157972
3208275398,vitalybuka,,2025-09-11T00:24:17Z,157972
3208072548,fmayer,,2025-09-10T23:00:57Z,157967
3208097287,cmtice,,2025-09-10T23:06:57Z,157967
3208131927,boomanaiden154,This is way cleaner than the bashisms actually. I forgot about multiplying strings in Python.,2025-09-10T23:16:17Z,157967
3208146034,fmayer,,2025-09-10T23:20:21Z,157967
3208412653,jhuber6,"Ah, sorry, guess I missed that one.",2025-09-11T02:06:21Z,157982
3208133509,boomanaiden154,,2025-09-10T23:16:45Z,157966
3208286446,vitalybuka,,2025-09-11T00:31:48Z,157966
3208226883,llvm-beanz,,2025-09-10T23:56:53Z,157973
3208247591,hekota,,2025-09-11T00:03:56Z,157973
3208228715,lntue,,2025-09-10T23:57:18Z,157960
3207952569,boomanaiden154,,2025-09-10T21:52:01Z,157961
3207739727,wangzpgi,,2025-09-10T20:39:07Z,157952
3207855324,vzakhari,,2025-09-10T21:14:42Z,157957
3207858737,vzakhari,,2025-09-10T21:16:25Z,157957
3207866274,clementval,,2025-09-10T21:20:05Z,157957
3207874412,vzakhari,,2025-09-10T21:23:22Z,157957
3207899739,clementval,,2025-09-10T21:30:21Z,157957
3207915088,vzakhari,,2025-09-10T21:34:03Z,157957
3207916961,vzakhari,,2025-09-10T21:34:36Z,157957
3207927970,clementval,,2025-09-10T21:40:15Z,157957
3207801177,boomanaiden154,"LGTM, assuming the tests pass in CI on Linux+Windows.",2025-09-10T20:55:41Z,157951
3207817566,lenary,,2025-09-10T21:01:21Z,157955
3208028337,preames,LGTM,2025-09-10T22:34:20Z,157955
3207795998,shiltian,,2025-09-10T20:53:27Z,157949
3207800060,rampitec,,2025-09-10T20:55:10Z,157949
3207804748,shiltian,,2025-09-10T20:57:12Z,157949
3207804887,shiltian,,2025-09-10T20:57:16Z,157949
3208018962,uzairnawaz,LGTM,2025-09-10T22:27:57Z,157942
3208026046,preames,LGTM,2025-09-10T22:32:55Z,157943
3208567947,mtrofin,,2025-09-11T03:37:29Z,157939
3208572771,mtrofin,,2025-09-11T03:39:54Z,157939
3207996949,shiltian,,2025-09-10T22:15:58Z,157935
3207520042,MaheshRavishankar,,2025-09-10T19:19:54Z,157932
3207441730,wangzpgi,,2025-09-10T18:55:18Z,157931
3207642207,tblah,LGTM,2025-09-10T20:03:10Z,157926
3207356775,pfusik,LGTM,2025-09-10T18:28:29Z,157921
3207507673,preames,"LGTM

Possibly followup: Is there a way in tablegen to derive a predicate from another instruction?  That is, say ""the predicate for the alias is whatever the predicate for RORI is""?  ",2025-09-10T19:16:51Z,157921
3207642987,efriedma-quic,LGTM,2025-09-10T20:03:28Z,157925
3207308619,pfusik,LGTM,2025-09-10T18:14:03Z,157915
3207501532,preames,LGTM,2025-09-10T19:14:17Z,157915
3207255447,wangzpgi,,2025-09-10T17:58:48Z,157914
3207219384,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR reverts commit #157408 which changed the expand-fp optimization level argument syntax. The change reverts from a simplified ""O{0,1,2,3}"" format back to a more explicit ""opt-level={0,1,2,3}"" format for the expand-fp pass parameter.

- Reverts the parameter syntax for expand-fp pass from `O{level}` to `opt-level={level}`
- Updates all test files and pipeline configurations to use the reverted syntax
- Modifies the parsing logic to handle the `opt-level=N` format instead of `O{N}`

### Reviewed Changes

Copilot reviewed 6 out of 6 changed files in this pull request and generated 1 comment.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| llvm/test/Transforms/ExpandFp/AMDGPU/frem.ll | Updates test RUN command to use `opt-level=1` syntax |
| llvm/test/Transforms/ExpandFp/AMDGPU/frem-inf.ll | Updates test RUN commands to use `opt-level={0,1}` syntax |
| llvm/test/CodeGen/AMDGPU/llc-pipeline-npm.ll | Updates pipeline test expectations to use `opt-level={0,2,3}` syntax |
| llvm/lib/Passes/PassRegistry.def | Updates parameter documentation from `O0;O1;O2;O3` to `opt-level=N` |
| llvm/lib/Passes/PassBuilder.cpp | Modifies parsing logic to handle `opt-level=N` instead of `O{N}` format |
| llvm/lib/CodeGen/ExpandFp.cpp | Updates pipeline printing to output `opt-level=N` format |
</details>




",2025-09-10T17:46:14Z,157912
3207217919,fmayer,Thanks,2025-09-10T17:45:40Z,157910
3207232651,boomanaiden154,,2025-09-10T17:51:10Z,157910
3207860502,shafik,"Now that the original bug report is closed, the problem has not really been ""solved"" just silenced, right? So should there be a follow-up bug report or maybe this fix should have had a `FIXME`?",2025-09-10T21:17:17Z,157906
3207102282,JDevlieghere,,2025-09-10T17:16:07Z,157905
3207121790,bulbazord,,2025-09-10T17:20:55Z,157905
3207111820,pfusik,LGTM,2025-09-10T17:18:31Z,157901
3207120940,preames,LGTM,2025-09-10T17:20:45Z,157901
3207173733,lntue,,2025-09-10T17:32:53Z,157898
3207568960,cmtice,,2025-09-10T19:35:53Z,157884
3206898556,preames,LGTM,2025-09-10T16:21:01Z,157891
3207087943,pfusik,LGTM,2025-09-10T17:12:49Z,157891
3207256652,rampitec,,2025-09-10T17:59:14Z,157877
3206653049,Michael137,,2025-09-10T15:15:16Z,157872
3206588730,Stylie777,LGTM,2025-09-10T14:59:40Z,157871
3206503396,jhuber6,,2025-09-10T14:39:06Z,157870
3207624928,nikic,,2025-09-10T19:56:33Z,157857
3207482903,rampitec,LGTM given that nothing has failed.,2025-09-10T19:07:22Z,157861
3206480501,dtcxzyw,,2025-09-10T14:34:01Z,157865
3206821323,dtcxzyw,LG,2025-09-10T15:56:44Z,157865
3206178598,jhuber6,,2025-09-10T13:29:58Z,157856
3205979563,Pierre-vh,,2025-09-10T12:40:58Z,157845
3206257278,dtcxzyw,LGTM. Thanks.,2025-09-10T13:47:52Z,157851
3205975705,Pierre-vh,,2025-09-10T12:40:11Z,157844
3206167177,s-barannikov,,2025-09-10T13:27:09Z,157847
3206171569,s-barannikov,,2025-09-10T13:28:13Z,157847
3206188943,jurahul,,2025-09-10T13:32:31Z,157847
3206193869,s-barannikov,,2025-09-10T13:33:42Z,157847
3206201472,s-barannikov,,2025-09-10T13:35:34Z,157847
3206411719,jurahul,,2025-09-10T14:18:40Z,157847
3206412604,jurahul,,2025-09-10T14:18:52Z,157847
3206468450,s-barannikov,,2025-09-10T14:31:07Z,157847
3206480635,s-barannikov,,2025-09-10T14:34:03Z,157847
3206488734,s-barannikov,,2025-09-10T14:35:53Z,157847
3206549178,jurahul,,2025-09-10T14:50:01Z,157847
3206551042,jurahul,,2025-09-10T14:50:29Z,157847
3206607458,s-barannikov,,2025-09-10T15:03:50Z,157847
3206669656,jurahul,,2025-09-10T15:18:37Z,157847
3206800987,s-barannikov,,2025-09-10T15:50:31Z,157847
3205721748,joker-eph,"Makes sense to me. While the overall feature is likely desirable, this seems a bit unstable in-tree and probably deserves a bit more testing.",2025-09-10T11:31:52Z,157831
3205729617,jpienaar,"Builds broken, so good to rollback and fix off critical path.",2025-09-10T11:34:36Z,157831
3205681188,s-barannikov,,2025-09-10T11:18:24Z,157833
3205686376,arsenm,Testcase? ,2025-09-10T11:20:02Z,157829
3208131489,arsenm,,2025-09-10T23:22:57Z,157829
3208355696,fzou1,,2025-09-11T01:25:30Z,157829
3208356045,fzou1,,2025-09-11T01:25:47Z,157829
3208356294,fzou1,,2025-09-11T01:26:01Z,157829
3205501162,arsenm,,2025-09-10T10:25:13Z,157827
3205661841,abhishek-kaushik22,,2025-09-10T11:12:14Z,157827
3205740117,arsenm,,2025-09-10T11:38:01Z,157827
3205381069,Xazax-hun,,2025-09-10T09:50:53Z,157820
3205392310,arsenm,,2025-09-10T09:54:10Z,157823
3205396115,jplehr,,2025-09-10T09:55:16Z,157823
3204965792,nikic,LGTM,2025-09-10T08:06:36Z,157807
3205078604,nikic,,2025-09-10T08:35:31Z,157810
3205260963,arsenm,,2025-09-10T09:19:25Z,157810
3205370111,Xazax-hun,,2025-09-10T09:47:53Z,157800
3204558836,arsenm,,2025-09-10T06:10:13Z,157798
3204352900,tgymnich,,2025-09-10T04:13:52Z,157792
3206813556,thurstond,,2025-09-10T15:54:21Z,157793
3204971500,tgymnich,,2025-09-10T08:08:19Z,157791
3206188326,kuhar,,2025-09-10T13:32:21Z,157791
3204466176,tgymnich,,2025-09-10T05:21:09Z,157789
3206130238,kuhar,,2025-09-10T13:18:41Z,157789
3204350555,tgymnich,,2025-09-10T04:12:11Z,157788
3205301481,arsenm,ConstantLog2 name is better though ,2025-09-10T09:29:38Z,157790
3206192570,kuhar,,2025-09-10T13:33:25Z,157790
3203998804,jhuber6,,2025-09-10T01:25:01Z,157773
3204289584,preames,,2025-09-10T03:36:40Z,157777
3204405438,topperc,,2025-09-10T04:47:24Z,157777
3204703588,lukel97,,2025-09-10T07:02:35Z,157777
3206731505,preames,LGTM,2025-09-10T15:31:13Z,157777
3204512300,gysit,"LGTM from my end modulo some style nits.

Did you consider always using an array attribute (even if there is only one tag)? That may simplify to code and the usage of the annotations a bit?",2025-09-10T06:09:29Z,157770
3206844153,krzysz00,,2025-09-10T16:03:50Z,157770
3204406657,carlocab,,2025-09-10T04:48:19Z,157769
3203791049,mtrofin,just nits. thanks!,2025-09-09T23:52:45Z,157768
3203808931,lenary,LGTM,2025-09-09T23:57:23Z,157758
3203810659,lenary,,2025-09-09T23:58:16Z,157766
3204069868,sunshaoce,LGTM,2025-09-10T02:08:26Z,157766
3206661471,JDevlieghere,LGTM,2025-09-10T15:17:28Z,157756
3206705138,adrian-prantl,,2025-09-10T15:24:48Z,157750
3203371475,wangzpgi,,2025-09-09T21:19:36Z,157747
3204023247,frederick-vs-ja,,2025-09-10T01:41:28Z,157744
3203464509,michaelrj-google,LGTM after fixes.,2025-09-09T21:55:51Z,157746
3203480355,jhuber6,,2025-09-09T21:57:03Z,157746
3203486168,jhuber6,,2025-09-09T22:00:24Z,157746
3203486698,SchrodingerZhu,LGTM,2025-09-09T22:00:41Z,157746
3203490424,michaelrj-google,,2025-09-09T22:02:44Z,157746
3203500068,michaelrj-google,,2025-09-09T22:06:36Z,157746
3203534534,michaelrj-google,"LGTM, thanks for getting these tested!",2025-09-09T22:21:45Z,157746
3203213262,SchrodingerZhu,,2025-09-09T20:38:29Z,157739
3203372715,michaelrj-google,,2025-09-09T21:20:07Z,157739
3203376380,jhuber6,,2025-09-09T21:21:18Z,157739
3203460354,michaelrj-google,LGTM,2025-09-09T21:48:43Z,157739
3203130668,sarnex,,2025-09-09T20:13:19Z,157741
3206570586,boomanaiden154,"Seems reasonable enough to me. I might try a more principled fix in `clang/lib/Basic/Builtins.cpp` again at some point, but that needs some more thinking and this works well for now.",2025-09-10T14:55:06Z,157741
3204083170,hstk30-hw,,2025-09-10T02:18:15Z,157735
3204234272,lukel97,,2025-09-10T03:19:25Z,157735
3202812719,vzakhari,"Thank you, Valentin! LGTM!",2025-09-09T18:38:34Z,157731
3202797110,klausler,,2025-09-09T18:42:43Z,157731
3202656500,AmrDeveloper,"LGTM, Thanks",2025-09-09T17:45:51Z,157724
3202704518,mmha,,2025-09-09T18:02:08Z,157724
3202715861,cmtice,,2025-09-09T18:05:54Z,157728
3202742395,boomanaiden154,,2025-09-09T18:14:07Z,157728
3202623298,jhuber6,,2025-09-09T17:36:33Z,157722
3205527814,jryans,Looks good! :slightly_smiling_face: ,2025-09-10T10:33:39Z,157716
3203476188,artagnon,,2025-09-09T21:55:15Z,157720
3203497610,preames,LGTM,2025-09-09T22:05:46Z,157720
3205187991,matthias-springer,,2025-09-10T09:03:45Z,157711
3202503698,andykaylor,,2025-09-09T17:03:11Z,157713
3202505631,AmrDeveloper,LGTM,2025-09-09T17:04:10Z,157713
3202512198,erichkeane,,2025-09-09T17:05:38Z,157713
3202517642,AmrDeveloper,,2025-09-09T17:07:35Z,157713
3202520975,erichkeane,,2025-09-09T17:08:46Z,157713
3202669843,andykaylor,,2025-09-09T17:50:15Z,157713
3202591797,clementval,LGTM,2025-09-09T17:26:32Z,157708
3205519848,jryans,Seems reasonable to me! :smile: ,2025-09-10T10:30:59Z,157707
3202414788,artagnon,"LGTM, thanks!",2025-09-09T16:33:23Z,157702
3202769334,fhahn,"LGTM, thanks",2025-09-09T18:23:47Z,157702
3202362109,jhuber6,,2025-09-09T16:18:02Z,157701
3202312732,EricWF,,2025-09-09T16:04:26Z,157699
3202328711,philnik777,,2025-09-09T16:08:59Z,157699
3208020704,t-rasmud,LGTM!,2025-09-10T22:29:11Z,157700
3202322507,joker-eph,Thanks for the quick fix!,2025-09-09T16:07:12Z,157697
3202237375,Icohedron,,2025-09-09T15:43:15Z,157690
3202258166,inbelic,,2025-09-09T15:48:39Z,157690
3202377654,farzonl,,2025-09-09T16:23:01Z,157690
3202420076,inbelic,,2025-09-09T16:35:12Z,157690
3202082589,Xazax-hun,,2025-09-09T15:08:22Z,157685
3202252188,lenary,LGTM thanks ,2025-09-09T15:46:53Z,157686
3202300573,topperc,LGTM,2025-09-09T16:00:56Z,157686
3206897159,OCHyams,"Makes sense to me, LGTM! The comments in the test are appreciated",2025-09-10T16:20:31Z,157683
3202064155,boomanaiden154,"If this passes locally (and failed locally before), you can just merge without waiting for CI.",2025-09-09T15:04:38Z,157684
3202249762,tbaederr,,2025-09-09T15:46:08Z,157681
3202021473,nikic,LGTM,2025-09-09T15:00:08Z,157682
3202055987,jhuber6,"Appreciate you fixing this, the `libc` tests are very unorthodox as far as GPU targets go but they tend to hit weird behavior.",2025-09-09T15:03:02Z,157682
3203795573,perlfu,LGTM,2025-09-09T23:51:14Z,157682
3205076991,ritter-x2a,,2025-09-10T08:35:01Z,157682
3205935415,jayfoad,,2025-09-10T12:32:07Z,157682
3206434701,ritter-x2a,,2025-09-10T14:23:49Z,157682
3206436941,ritter-x2a,,2025-09-10T14:24:20Z,157682
3201784628,jplehr,lgtm,2025-09-09T13:59:28Z,157673
3203072139,dschuff,,2025-09-09T19:54:28Z,157669
3201718450,Xazax-hun,,2025-09-09T13:49:20Z,157670
3201816108,steakhal,,2025-09-09T14:06:25Z,157670
3201839056,Xazax-hun,,2025-09-09T14:11:12Z,157670
3201562707,artagnon,"LGTM modulo one error, thanks!",2025-09-09T13:25:59Z,157664
3205374314,fhahn,,2025-09-10T09:49:08Z,157664
3201714540,SLTozer,"LGTM to fix the buildbots and remove the temp code, though a clearer idea of why we don't have the modules available (and more importantly whether Dexter can fix that) would be good in the longer term.",2025-09-09T13:46:41Z,157663
3201400073,Xazax-hun,,2025-09-09T12:51:21Z,157661
3201409537,alexfh,Thank you for the fix!,2025-09-09T12:53:09Z,157662
3201429580,kadircet,"ugh this looks quite fragile (not your fix but rather having multiple ways to call profile), i am worried we might have divergences in other places as well :(

i think it would be nice to handle that in a more principled way for the future. thanks for the fix!",2025-09-09T12:56:54Z,157662
3201437526,cor3ntin,,2025-09-09T12:58:30Z,157662
3201272082,arsenm,,2025-09-09T12:26:11Z,157658
3202421648,RKSimon,LGTM,2025-09-09T16:35:43Z,157658
3201216541,Xazax-hun,,2025-09-09T12:14:39Z,157657
3201274891,NagyDonat,,2025-09-09T12:26:48Z,157657
3202146167,adrian-prantl,,2025-09-09T15:22:53Z,157649
3203312255,dmpots,I tested locally with this PR and no longer see the segmentation fault from #137046.,2025-09-09T20:59:25Z,157649
3200972262,arsenm,,2025-09-09T11:12:24Z,157647
3200965249,Xazax-hun,,2025-09-09T11:10:14Z,157645
3202583396,rampitec,,2025-09-09T17:23:50Z,157641
3202579583,rampitec,,2025-09-09T17:22:36Z,157640
3202466780,rampitec,,2025-09-09T16:51:06Z,157639
3200446962,Xazax-hun,,2025-09-09T09:35:06Z,157630
3200089535,lukel97,LGTM. And it looks like simplifyBlends calls recursivelyDeleteDeadRecipes after itself so we shouldn't need to run removeDeadRecipes after it.,2025-09-09T08:33:27Z,157622
3200545618,paulwalker-arm,,2025-09-09T09:51:39Z,157622
3200614866,fhahn,"LGTM, thanks",2025-09-09T10:03:16Z,157622
3200623150,david-arm,LGTM!,2025-09-09T10:04:36Z,157622
3199489046,topperc,,2025-09-09T06:12:16Z,157617
3199556091,wangpc-pp,,2025-09-09T06:27:30Z,157617
3199556637,wangpc-pp,LGTM.,2025-09-09T06:27:41Z,157617
3199673031,pfusik,,2025-09-09T06:54:41Z,157617
3199700620,pfusik,,2025-09-09T07:05:08Z,157617
3202210665,topperc,,2025-09-09T15:38:36Z,157617
3204728006,pfusik,LGTM,2025-09-10T07:08:38Z,157617
3201934958,dtcxzyw,,2025-09-09T14:34:00Z,157614
3202333635,dtcxzyw,"Changes w/o freeze look good.
",2025-09-09T16:10:19Z,157614
3202747881,andjo403,,2025-09-09T18:16:04Z,157614
3202951955,nikic,LGTM,2025-09-09T19:20:05Z,157614
3201944407,makslevental,LGTM!,2025-09-09T14:36:20Z,157613
3199776536,philnik777,,2025-09-09T07:23:16Z,157610
3201088143,ldionne,,2025-09-09T11:46:35Z,157610
3199085830,boomanaiden154,,2025-09-09T03:45:36Z,157605
3202362315,s-barannikov,,2025-09-09T16:18:07Z,157600
3202713207,topperc,LGTM,2025-09-09T18:04:55Z,157600
3198867770,boomanaiden154,"What's the main purpose of doing this? This doesn't seem super relevant to the profcheck stuff, because that's catching places where the metadata was just completely ignored.

This also adds a bit of overhead (presumably only in an asserts build when profcheck is enabled) when this data could be obtained by bisecting the pass pipeline/in a debugger, although both of those are much less convenient.",2025-09-09T03:03:09Z,157594
3202769883,boomanaiden154,"Optimization remarks seems like good enough motivation to me.

I can't imagine the overhead of this is that high.",2025-09-09T18:23:59Z,157594
3202895741,snehasish,,2025-09-09T19:03:10Z,157594
3202961135,mtrofin,,2025-09-09T19:22:51Z,157594
3203124219,david-xl,,2025-09-09T20:13:19Z,157594
3203154850,david-xl,,2025-09-09T20:21:08Z,157594
3203160453,mtrofin,,2025-09-09T20:22:58Z,157594
3203165719,mtrofin,,2025-09-09T20:24:31Z,157594
3203487207,david-xl,,2025-09-09T22:01:19Z,157594
3203514543,snehasish,lgtm,2025-09-09T22:12:55Z,157594
3199804356,nikic,,2025-09-09T07:30:53Z,157591
3200550771,nikic,LGTM,2025-09-09T09:53:36Z,157593
3202264887,labrinea,,2025-09-09T15:50:36Z,157593
3203676748,Arghnews,,2025-09-09T23:03:45Z,157593
3204117107,hstk30-hw,,2025-09-10T02:32:35Z,157593
3203429732,rkayaith,"I don't fully follow the cmake-fu, but I've tried this out and it does indeed fix the issues I hit downstream.",2025-09-09T21:38:01Z,157589
3198708830,compnerd,,2025-09-09T01:31:11Z,157588
3198717344,boomanaiden154,,2025-09-09T01:38:08Z,157588
3198845990,ilovepi,,2025-09-09T02:50:04Z,157588
3198640875,rkayaith,,2025-09-09T01:03:52Z,157583
3198643235,krzysz00,"Seems fine, I'm trusting this is a reasonable emergency fix",2025-09-09T01:05:52Z,157583
3198666958,makslevental,,2025-09-09T01:11:30Z,157583
3198681540,rkayaith,,2025-09-09T01:14:39Z,157583
3203382804,JDevlieghere,LGTM modulo formatting and [no-else-after-return](https://clang.llvm.org/extra/clang-tidy/checks/readability/else-after-return.html). ,2025-09-09T21:25:12Z,157577
3200208314,DavidSpickett,"LGTM, thanks.",2025-09-09T08:56:19Z,157566
3198421157,eugeneepshteyn,,2025-09-08T22:50:46Z,157571
3201746033,akuhlens,,2025-09-09T13:51:32Z,157571
3202361672,DanielCChen,"LGTM.
It fixed the test cases marked against this issue.
Thanks.",2025-09-09T16:17:54Z,157571
3199931833,jeanPerier,"Thanks, this looks great! A few comments inline.

>   is much more efficient in a case of presence of the 'kind' intrinsic parameter.

Indeed, the INDEX lowering code in IntrinsicCall.cpp is needlessly complex when KIND is present while KIND does not matter at all as far as lowering is concerned (semantics did the work). INDEX seems to be one of the first ""non trivial"" intrinsic that was implemented...

While an hlfir.index was not needed just to fix this (just always using fir::runtime::genIndex would have work), I like adding an hlfir.index operation given there are other INDEX related optimizations that will be a lot easier to do at that level.",2025-09-09T09:17:01Z,157575
3203332712,vzakhari,LGTM! Thank you!,2025-09-09T21:10:38Z,157575
3203703926,valerydmit,,2025-09-09T23:12:25Z,157575
3206928469,jeanPerier,"Looks great, thanks",2025-09-10T16:30:42Z,157575
3198483684,boomanaiden154,,2025-09-08T23:37:24Z,157572
3198489982,cmtice,,2025-09-08T23:42:53Z,157572
3198499681,boomanaiden154,,2025-09-08T23:48:36Z,157572
3199132025,vbvictor,,2025-09-09T04:09:59Z,157572
3201501575,makslevental,Thanks!,2025-09-09T13:10:30Z,157562
3201990939,lntue,,2025-09-09T14:47:27Z,157565
3198301280,JDevlieghere,,2025-09-08T21:49:41Z,157561
3198303888,ilovepi,"This seems fine to me, especially since it follows our written policy on version support.

Does this need any kind of release note? It's a pure dev dependency, so I'd say ""no"", but I could also see how a consumer would have wanted to know about it. ",2025-09-08T21:51:15Z,157558
3201895555,philnik777,Basically LGTM.,2025-09-09T14:24:49Z,157556
3201970359,ldionne,,2025-09-09T14:42:19Z,157556
3202181282,preames,,2025-09-09T15:32:04Z,157555
3202182863,preames,LGTM w/prior comment addressed.,2025-09-09T15:32:30Z,157555
3203345715,fhahn,,2025-09-09T21:13:12Z,157555
3205122925,nikic,,2025-09-10T08:46:58Z,157555
3205124889,nikic,,2025-09-10T08:47:31Z,157555
3205273450,fhahn,,2025-09-10T09:22:56Z,157555
3206155421,fhahn,,2025-09-10T13:24:16Z,157555
3203502055,michaelrj-google,LGTM,2025-09-09T22:07:37Z,157551
3198273399,Jianhui-Li,,2025-09-08T21:40:48Z,157550
3198293085,Jianhui-Li,,2025-09-08T21:45:41Z,157550
3198293842,Jianhui-Li,LGTM with minor comments,2025-09-08T21:45:49Z,157550
3207772750,charithaintc,,2025-09-10T20:47:59Z,157550
3207790715,nbpatel,LGTM,2025-09-10T20:51:49Z,157550
3198153759,shiltian,,2025-09-08T20:54:11Z,157549
3198113125,shiltian,,2025-09-08T20:44:36Z,157547
3198118949,jdenny-ornl,,2025-09-08T20:46:28Z,157547
3198125914,shiltian,,2025-09-08T20:48:18Z,157547
3198128064,jhuber6,,2025-09-08T20:48:42Z,157547
3198132822,jhuber6,,2025-09-08T20:49:35Z,157547
3198151330,jdenny-ornl,,2025-09-08T20:53:33Z,157547
3198153066,shiltian,,2025-09-08T20:53:56Z,157547
3198155716,jhuber6,,2025-09-08T20:54:59Z,157547
3198157882,jdenny-ornl,,2025-09-08T20:55:54Z,157547
3198182059,jhuber6,,2025-09-08T21:04:18Z,157547
3198223474,jdenny-ornl,,2025-09-08T21:19:50Z,157547
3198384798,jhuber6,,2025-09-08T22:27:47Z,157547
3202565576,jdenny-ornl,,2025-09-09T17:19:28Z,157547
3199597261,wangpc-pp,LGTM.,2025-09-09T06:37:02Z,157544
3198113692,shiltian,,2025-09-08T20:44:51Z,157540
3199160152,MaskRay,"Having upstream GCC bug filed would be nice if someone is willing to do the work, and then add a comment to this PR or the linked issues.",2025-09-09T04:29:41Z,157541
3198212258,topperc,,2025-09-08T21:16:25Z,157539
3201725575,preames,,2025-09-09T13:48:31Z,157539
3202981906,topperc,LGTM,2025-09-09T19:28:07Z,157539
3202944820,michaelrj-google,"given that these SIMD utilities are getting more complex, it would be best to add unit tests to ensure that they work. It'd probably be best to do that in a separate patch to avoid having one massive patch.",2025-09-09T19:18:06Z,157537
3202950453,jhuber6,,2025-09-09T19:18:50Z,157537
3203080057,lntue,,2025-09-09T19:57:15Z,157537
3203090646,jhuber6,,2025-09-09T20:00:39Z,157537
3207007546,michaelrj-google,,2025-09-10T16:55:38Z,157537
3207014748,jhuber6,,2025-09-10T16:56:57Z,157537
3207102537,michaelrj-google,,2025-09-10T20:32:46Z,157537
3207722391,jhuber6,,2025-09-10T20:34:19Z,157537
3207725037,jhuber6,,2025-09-10T20:35:36Z,157537
3207743139,michaelrj-google,,2025-09-10T20:40:14Z,157537
3207752745,jhuber6,,2025-09-10T20:43:06Z,157537
3207762862,jhuber6,,2025-09-10T20:46:11Z,157537
3207813927,michaelrj-google,LGTM after minor fixes,2025-09-10T21:03:56Z,157537
3197814461,changpeng,,2025-09-08T19:12:23Z,157534
3201917923,jvoung,"Thanks!

Were you also able to test this against several ""real"" inputs?",2025-09-09T14:39:13Z,157535
3202804908,jvoung,,2025-09-09T18:35:59Z,157535
3197820186,changpeng,,2025-09-08T19:13:41Z,157533
3197918228,Max191,,2025-09-08T19:49:36Z,157532
3198046498,fmayer,Please fix the build error ,2025-09-08T20:24:34Z,157528
3198080997,fmayer,,2025-09-08T20:34:10Z,157528
3198081379,fmayer,,2025-09-08T20:34:16Z,157528
3197822654,changpeng,,2025-09-08T19:14:35Z,157531
3197827043,changpeng,,2025-09-08T19:16:11Z,157526
3198482646,arsenm,,2025-09-08T23:36:27Z,157520
3197505321,lntue,,2025-09-08T17:48:13Z,157517
3200596984,nikic,LGTM,2025-09-09T10:00:16Z,157518
3200609781,fhahn,"LGTM, should be good to go now that the changed has been re-landed as 9b1b93766dfa34ee94859d91a5fcfef853b95265",2025-09-09T10:02:17Z,157518
3197456940,Sisyph,,2025-09-08T17:30:46Z,157516
3197525928,rampitec,,2025-09-08T17:56:15Z,157516
3197558116,Sisyph,,2025-09-08T18:04:54Z,157516
3197563517,rampitec,"LGTM, thanks.",2025-09-08T18:06:58Z,157516
3198479113,arsenm,,2025-09-08T23:33:26Z,157516
3197826365,rolfmorel,LGTM - thanks for the clean-up!,2025-09-08T19:15:56Z,157519
3199874302,fhahn,do we have other tests covering the same case with constant trip counts or should we keep the original test and add a new one with variable trip count?,2025-09-09T07:49:32Z,157512
3201390220,david-arm,"LGTM! I realised now that `@main_vf_vscale_x_16` already exists in sve-epilog-vect.ll for the default case where we prefer the fixed-width epilogue, so it seems fine to simply change this test to use a variable trip count.",2025-09-09T12:49:30Z,157512
3205261157,fhahn,"> LGTM! I realised now that `@main_vf_vscale_x_16` already exists in sve-epilog-vect.ll for the default case where we prefer the fixed-width epilogue, so it seems fine to simply change this test to use a variable trip count.

Sounds good to me, LG!",2025-09-10T09:19:28Z,157512
3197416081,eugeneepshteyn,,2025-09-08T17:15:57Z,157513
3197363371,spall,lgtm,2025-09-08T16:59:09Z,157505
3197347677,Icohedron,,2025-09-08T17:01:35Z,157505
3197393434,farzonl,,2025-09-08T17:08:11Z,157505
3197408580,Icohedron,,2025-09-08T17:13:13Z,157505
3198236633,JDevlieghere,,2025-09-08T21:28:12Z,157503
3202456073,ashgti,,2025-09-09T16:47:36Z,157503
3202456402,ashgti,,2025-09-09T16:47:43Z,157503
3202456689,ashgti,,2025-09-09T16:47:49Z,157503
3202457095,ashgti,,2025-09-09T16:47:59Z,157503
3202474260,JDevlieghere,🛫,2025-09-09T16:53:44Z,157503
3197079793,zero9178,,2025-09-08T15:36:36Z,157491
3197214620,cor3ntin,,2025-09-08T16:10:20Z,157501
3197688820,ZequanWu,,2025-09-08T18:34:52Z,157493
3203137234,shafik,,2025-09-09T20:15:29Z,157490
3204573637,tbaederr,,2025-09-10T06:16:38Z,157490
3200688389,paulwalker-arm,,2025-09-09T10:15:21Z,157489
3196937603,Michael137,,2025-09-08T14:59:41Z,157483
3196939142,Michael137,LGTM,2025-09-08T15:00:00Z,157483
3197140790,makslevental,LGTM! Let me know when you're ready to merge,2025-09-08T15:52:32Z,157487
3198283601,efriedma-quic,"I think organizing like this makes sense.  LGTM.  (Note this conflicts with #156467.)
",2025-09-08T21:44:00Z,157485
3196949228,pfusik,,2025-09-08T15:02:11Z,157482
3197104298,pfusik,LGTM,2025-09-08T15:44:00Z,157482
3196858067,xlauko,lgtm,2025-09-08T14:39:49Z,157477
3196869580,mmha,LGTM,2025-09-08T14:42:49Z,157477
3196928556,pfusik,LGTM,2025-09-08T14:57:34Z,157479
3198060785,mstorsjo,"LGTM, thanks!",2025-09-08T20:27:44Z,157476
3199498145,tru,,2025-09-09T06:14:06Z,157476
3197201084,vzakhari,LGTM. Thank you!,2025-09-08T16:06:35Z,157472
3198256786,JDevlieghere,,2025-09-08T21:32:28Z,157474
3198292527,Michael137,,2025-09-08T21:45:34Z,157474
3201014047,Michael137,,2025-09-09T11:25:01Z,157474
3206449585,Michael137,"LGTM if this works for your use-case, thanks! I'd give @JDevlieghere some time to look at this before merging",2025-09-10T14:26:48Z,157474
3206702288,JDevlieghere,,2025-09-10T15:24:00Z,157474
3196750583,flovent,,2025-09-08T14:13:17Z,157468
3196798842,vbvictor,,2025-09-08T14:25:47Z,157468
3196800023,vbvictor,"LGTM, thank you",2025-09-08T14:26:05Z,157468
3197471388,andykaylor,"This looks good, but it isn't clear to me why the crashes were occurring. I see from the description of #155244 that replaceAllUsesWith now has a delayed effect in some circumstances. Was the fact that we were erasing the replaced op causing a problem?",2025-09-08T17:36:08Z,157471
3196552376,nikic,,2025-09-08T13:28:58Z,157461
3196576479,apach301,,2025-09-08T13:34:39Z,157461
3197259048,XChy,Nice catch. LGTM.,2025-09-08T16:24:14Z,157461
3202621397,artagnon,"Kindly add a test, showing that this bug can actually be hit.",2025-09-09T17:35:50Z,157458
3202763030,artagnon,"I don't think DISubprogram::getSubprogram can return null:

```cpp
DISubprogram *DILocalScope::getSubprogram() const {
  if (auto *Block = dyn_cast<DILexicalBlockBase>(this))
    return Block->getScope()->getSubprogram();
  return const_cast<DISubprogram *>(cast<DISubprogram>(this));
}
```

So, the check `SP &&` preceding your patch should probably be stripped, as it is dead?",2025-09-09T18:21:34Z,157458
3203149933,artagnon,"Please update the PR title/description. Suffix the title with ""(NFC)"" to make it clear that the change is non-functional.",2025-09-09T20:19:24Z,157458
3203237375,artagnon,"LGTM, thanks!",2025-09-09T20:46:37Z,157458
3201822006,XChy,LGTM,2025-09-09T14:07:44Z,157447
3197014282,RKSimon,,2025-09-08T15:19:31Z,157464
3197518490,markbhasawut,,2025-09-08T17:52:53Z,157464
3197715447,RKSimon,,2025-09-08T18:43:04Z,157464
3197765881,markbhasawut,,2025-09-08T18:58:38Z,157464
3197784246,markbhasawut,,2025-09-08T19:03:31Z,157464
3197944256,RKSimon,,2025-09-08T19:58:15Z,157464
3200195200,RKSimon,,2025-09-09T08:53:43Z,157464
3200201778,RKSimon,,2025-09-09T08:54:57Z,157464
3200249972,markbhasawut,,2025-09-09T09:03:53Z,157464
3200251161,markbhasawut,,2025-09-09T09:04:04Z,157464
3200778150,markbhasawut,,2025-09-09T10:31:18Z,157464
3202412941,RKSimon,LGTM - cheers!,2025-09-09T16:32:47Z,157464
3196548674,sdesmalen-arm,,2025-09-08T13:28:09Z,157454
3196680831,kuhar,"I don't understand when this could happen. Could you add a lit test? If the value is an integer attr, the type must be either bool or int, no?",2025-09-08T13:58:52Z,157457
3197131681,kuhar,LGTM if the CI passes,2025-09-08T15:51:02Z,157457
3198675034,CoTinker,,2025-09-09T01:13:31Z,157457
3198687533,kuhar,,2025-09-09T01:18:31Z,157457
3198692234,kuhar,,2025-09-09T01:20:08Z,157457
3198708054,CoTinker,,2025-09-09T01:30:24Z,157457
3198714558,kuhar,,2025-09-09T01:35:39Z,157457
3205935770,apach301,,2025-09-10T12:29:56Z,157457
3206194827,kuhar,,2025-09-10T13:33:54Z,157457
3206200880,CoTinker,,2025-09-10T13:35:25Z,157457
3206203117,CoTinker,,2025-09-10T13:35:58Z,157457
3198664455,CoTinker,"LGTM, thanks.",2025-09-09T01:11:03Z,157455
3200291506,fschlimb,Thanks for the fix!,2025-09-09T09:11:05Z,157455
3205073500,joker-eph,,2025-09-10T08:34:04Z,157455
3198323947,s-barannikov,"Perhaps those should not be features after all.
",2025-09-08T22:06:31Z,157446
3198600427,topperc,LGTM,2025-09-09T00:28:21Z,157446
3196868410,jyknight,"Seems reasonable.

And yes, a 32-bit sparc target with a v9 cpu is nearly untested -- which is not too surprising since last I knew it was also not fully implemented.",2025-09-08T14:42:30Z,157445
3196576430,s-barannikov,,2025-09-08T14:58:12Z,157445
3196419131,labath,"would `runCmd(""platform select remote-linux"")` have the same effect?

That would make the test more realistic, as that's how you would debug a non-local process. The problem right now is that lldb selects the host platform by default (you could argue that it shouldn't do that for ""gdb-remote"" connections, but that's what it is right now), and unless that platform rejects it (which happens when there's a host-binary architecture mismatch), it will bind the target to that platform. remote-linux (or maybe `remote-gdb-server` ?) is what would get selected then, so this will also make sure the behavior of the test is consistent between aarch64 and non-aarch64 runs.",2025-09-08T12:55:23Z,157432
3196811415,labath,,2025-09-08T14:29:05Z,157432
3197695593,tstellar,Passes for me now: https://github.com/llvm/llvm-project/actions/runs/17554582247/job/49855285540?pr=155274,2025-09-08T18:36:41Z,157432
3196331969,phoebewang,LGTM.,2025-09-08T12:38:01Z,157425
3196078350,jayfoad,,2025-09-08T11:19:43Z,157427
3196104195,Shoreshen,,2025-09-08T11:26:26Z,157427
3196114395,arsenm,,2025-09-08T11:29:58Z,157427
3195961014,davemgreen,"I think it should be something like `if (N->getOperand(2).getValueType().getVectorElementType() == MVT::i64)`

Can you add a test case from #157122?",2025-09-08T10:40:01Z,157418
3196397508,davemgreen,Thanks for putting together a fix for this. LGTM,2025-09-08T19:23:45Z,157418
3196261735,mgorny,"Thanks for doing this. It's a bit verbose, but as long as the tests pass, I'm happy with it. Just one small comment.",2025-09-08T12:18:33Z,157417
3196408174,RossBrunton,,2025-09-08T12:53:47Z,157417
3196456914,mgorny,"Yeah, still works for me, so I guess it's good for the GPU case as well.",2025-09-08T13:05:52Z,157417
3196520801,callumfare,,2025-09-08T13:21:48Z,157417
3196312835,rscottmanley,"LGTM, thanks!",2025-09-08T12:32:24Z,157413
3195816893,fhahn,"LGTM,thanks",2025-09-08T09:54:32Z,157410
3196232871,jplehr,Should `O2` and `O3` also show up in some test?,2025-09-08T12:08:49Z,157408
3200937091,jplehr,"lgtm
feel free to wait for other feedback",2025-09-09T11:04:04Z,157408
3203435100,thetruestblue,,2025-09-09T21:39:59Z,157407
3196588100,kuhar,,2025-09-08T13:38:52Z,157402
3196609559,joker-eph,,2025-09-08T13:41:29Z,157402
3196879491,pabloantoniom,,2025-09-08T14:45:28Z,157402
3196890261,fabianmcg,,2025-09-08T14:48:27Z,157402
3197211703,pabloantoniom,,2025-09-08T16:09:38Z,157402
3197244658,fabianmcg,,2025-09-08T16:20:00Z,157402
3197251218,kuhar,,2025-09-08T16:21:36Z,157402
3197267790,fabianmcg,"Preemptively blocking while these get addressed:

Please remove the username from the description:
https://discourse.llvm.org/t/forbidding-username-in-commits/86997

Fix description, and the PR title.

And see my other comment.",2025-09-08T16:26:45Z,157402
3197485822,joker-eph,,2025-09-08T17:41:35Z,157402
3199703289,pabloantoniom,,2025-09-09T07:03:38Z,157402
3199817398,pabloantoniom,,2025-09-09T07:34:02Z,157402
3199821606,pabloantoniom,,2025-09-09T07:35:03Z,157402
3199823118,pabloantoniom,,2025-09-09T07:35:27Z,157402
3200900730,fabianmcg,"LGTM, thanks for the cleanup!",2025-09-09T10:56:49Z,157402
3202138556,joker-eph,,2025-09-09T15:20:49Z,157402
3203830117,krzysz00,LGTM here too,2025-09-10T00:09:55Z,157402
3195710547,arsenm,LGTM as long as there are no codegen changes. If there are codegen changes they should be in a separate PR. This one is too big to go through all the individual changes ,2025-09-08T09:26:22Z,157396
3197058991,topperc,LGTM,2025-09-08T15:30:26Z,157396
3197255869,lukel97,"I grepped the diff and there were no check line changes, LGTM",2025-09-08T16:23:07Z,157396
3195271920,tgymnich,,2025-09-08T07:21:46Z,157393
3196170778,s-barannikov,"Remove `VERegisterInfo::getPointerRegClass` as well?
",2025-09-08T11:49:18Z,157394
3196186373,arsenm,,2025-09-08T11:53:52Z,157394
3196189076,s-barannikov,,2025-09-08T11:54:48Z,157394
3195237759,arsenm,,2025-09-08T07:10:49Z,157392
3199692892,kazutakahirata,,2025-09-09T07:01:09Z,157392
3195221190,arsenm,,2025-09-08T07:04:29Z,157390
3196580088,kuhar,,2025-09-08T13:35:34Z,157390
3197438256,kazutakahirata,,2025-09-08T17:24:06Z,157390
3196572116,kuhar,This looks OK as long  as it doesn't make compilation times worse -- could you check that?,2025-09-08T13:33:35Z,157389
3203847541,kuhar,,2025-09-10T00:22:07Z,157389
3195407387,pfusik,LGTM,2025-09-08T08:04:53Z,157388
3195401561,vbvictor,,2025-09-08T08:03:00Z,157384
3195127212,lukel97,,2025-09-08T06:36:16Z,157387
3195172789,ElvisWang123,,2025-09-08T06:55:33Z,157387
3195205827,lukel97,,2025-09-08T06:59:20Z,157387
3195330015,ElvisWang123,,2025-09-08T07:41:29Z,157387
3195369879,fhahn,,2025-09-08T07:53:05Z,157387
3198741099,lukel97,,2025-09-09T01:56:13Z,157387
3199513676,ElvisWang123,,2025-09-09T06:17:42Z,157387
3200142738,fhahn,,2025-09-09T08:44:30Z,157387
3200270546,lukel97,,2025-09-09T09:07:42Z,157387
3201050907,ElvisWang123,,2025-09-09T11:38:48Z,157387
3201058779,lukel97,,2025-09-09T11:41:21Z,157387
3201095225,ElvisWang123,,2025-09-09T11:47:58Z,157387
3205279164,fhahn,"LGTM, with comment still to be updated",2025-09-10T09:24:55Z,157387
3205375023,ElvisWang123,,2025-09-10T09:49:18Z,157387
3205964876,lukel97,LGTM,2025-09-10T12:37:22Z,157387
3194697473,preames,,2025-09-08T00:59:42Z,157376
3197934069,topperc,,2025-09-08T19:55:45Z,157376
3197949876,topperc,LGTM,2025-09-08T20:00:20Z,157376
3207700356,pcc,,2025-09-10T20:25:41Z,157386
3208330117,vitalybuka,,2025-09-11T01:05:37Z,157386
3208342454,pcc,,2025-09-11T01:15:09Z,157386
3194695659,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR makes the `buildBitSet` function a static function by removing it from the `LowerTypeTestsModule` class and changing the `createByteArray` parameter to accept a const reference instead of a non-const reference.

- Converts `buildBitSet` from a member function to a static function
- Updates `createByteArray` to accept a const reference parameter



",2025-09-08T00:51:43Z,157375
3194740016,makslevental,Thanks - I meant to do like weekly audits but have fallen behind.,2025-09-08T01:41:59Z,157374
3194653183,makslevental,,2025-09-07T23:40:04Z,157369
3194784398,PragmaTwice,"The patch sounds good to me and definitely much cleaner and simpler than mine! I'll try to merge it into my PR. Just left a few minor comments to discuss some details.

",2025-09-08T03:04:46Z,157369
3194839769,makslevental,,2025-09-08T03:13:04Z,157369
3194844253,makslevental,,2025-09-08T03:17:50Z,157369
3194847419,makslevental,,2025-09-08T03:21:07Z,157369
3199184027,lhames,"Thank you very much for spotting this @MrAnno , and taking the time to write up a fix.

Looks good to me!",2025-09-09T04:42:27Z,157366
3199264699,lhames,,2025-09-09T05:25:01Z,157366
3199850785,lhames,,2025-09-09T07:43:04Z,157366
3194625068,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR fixes a crash in mlir-tblgen when mixing properties with InferType traits. The issue occurred because the argument-to-operand/attribute mapping didn't account for properties, causing index mismatches during type inference.

Key changes:
- Expand the argument mapping to include properties alongside operands and attributes
- Update the enum and data structures to handle three kinds of arguments instead of two
- Add proper error handling for unsupported property-based type inference

### Reviewed Changes

Copilot reviewed 4 out of 4 changed files in this pull request and generated no comments.

| File | Description |
| ---- | ----------- |
| mlir/include/mlir/TableGen/Operator.h | Updates data structures and enums to support properties in argument mapping |
| mlir/lib/TableGen/Operator.cpp | Implements the expanded mapping logic and updates method signatures |
| mlir/tools/mlir-tblgen/OpDefinitionsGen.cpp | Updates type inference code to use new mapping and adds error handling |
| mlir/test/mlir-tblgen/op-decl-and-defs.td | Adds test case for the previously crashing scenario |



",2025-09-07T22:12:47Z,157367
3196321236,zero9178,Look good to me overall! Just one comment regarding error handling,2025-09-08T12:41:49Z,157367
3196442956,fabianmcg,,2025-09-08T13:01:55Z,157367
3196450888,zero9178,,2025-09-08T13:04:07Z,157367
3194579556,Nerixyz,,2025-09-07T20:28:58Z,157362
3195695427,Nerixyz,,2025-09-08T09:23:09Z,157362
3201362085,aganea,,2025-09-09T12:44:55Z,157362
3206109914,aganea,LGTM.,2025-09-10T13:13:51Z,157362
3194485207,jhuber6,,2025-09-07T15:10:50Z,157346
3194573930,Nerixyz,,2025-09-07T20:06:08Z,157361
3194580311,Nerixyz,,2025-09-07T20:32:17Z,157361
3194648642,aganea,,2025-09-07T23:32:27Z,157361
3195651255,Nerixyz,,2025-09-08T09:10:03Z,157361
3201300373,aganea,,2025-09-09T12:40:38Z,157361
3202122653,Nerixyz,,2025-09-09T15:16:40Z,157361
3206119993,aganea,"LGTM, thanks for all the changes!",2025-09-10T13:16:19Z,157361
3197904318,xlauko,lgtm,2025-09-08T19:44:12Z,157350
3198055004,xlauko,,2025-09-08T20:26:32Z,157350
3203261183,andykaylor,lgtm,2025-09-09T20:51:46Z,157350
3198438465,eddyz87,Tested this with kernel bpf selftests.,2025-09-08T23:04:32Z,157344
3194517913,davemgreen,Thanks. LGTM.,2025-09-07T16:40:00Z,157342
3194500395,arsenm,,2025-09-07T15:51:10Z,157341
3194425064,s-barannikov,few nits,2025-09-07T12:33:36Z,157337
3194483644,s-barannikov,LGTM,2025-09-07T15:06:10Z,157336
3194422804,arsenm,,2025-09-07T12:20:29Z,157326
3194531376,kuhar,,2025-09-07T17:28:48Z,157326
3194424717,tgymnich,,2025-09-07T12:25:11Z,157325
3194424885,tgymnich,,2025-09-07T12:25:38Z,157325
3194531422,kuhar,,2025-09-07T17:29:00Z,157325
3194425346,tgymnich,,2025-09-07T12:26:50Z,157324
3194531475,kuhar,,2025-09-07T17:29:12Z,157324
3194628277,MaskRay,,2025-09-07T22:24:45Z,157321
3194318292,artagnon,Makes sense to me.,2025-09-07T08:56:06Z,157323
3194320538,artagnon,,2025-09-07T08:58:47Z,157323
3194441677,lukel97,,2025-09-07T13:11:17Z,157323
3194441786,lukel97,,2025-09-07T13:11:36Z,157323
3195396940,fhahn,,2025-09-08T08:01:27Z,157323
3195476002,fhahn,"LGTM, thanks",2025-09-08T08:25:00Z,157323
3193960456,tgymnich,,2025-09-06T23:02:25Z,157313
3193961189,tgymnich,,2025-09-06T23:03:54Z,157312
3194530924,kuhar,,2025-09-07T17:27:12Z,157311
3194535221,kazutakahirata,,2025-09-07T17:38:14Z,157311
3194536957,kuhar,,2025-09-07T17:43:35Z,157311
3194530519,kuhar,,2025-09-07T17:25:41Z,157310
3193890918,nikic,LLVM.Transforms/LoopVectorize/pr34681.ll is failing.,2025-09-06T20:43:02Z,157308
3194563944,nikic,LGTM,2025-09-07T19:26:36Z,157308
3194541955,fhahn,,2025-09-08T08:26:23Z,157308
3193959968,tgymnich,,2025-09-06T23:01:30Z,157309
3194531074,kuhar,,2025-09-07T17:27:45Z,157309
3195807080,mstorsjo,"Looks reasonable to me.

Binutils did have some support for MIPS PE/COFF, which is being removed these days. Does this choice of name, `mipspe`, match what they used here? (The naming aspect here should ideally be synchronized, to allow for interoperability.)",2025-09-08T09:52:32Z,157305
3198065036,mstorsjo,LGTM,2025-09-08T20:28:45Z,157305
3193888260,nikic,,2025-09-06T20:35:53Z,157307
3194347797,fhahn,,2025-09-07T10:03:38Z,157307
3194389876,nikic,"LGTM. This has obvious generalizations, but not sure they're worth adding (given the more generic handling in InstCombine).",2025-09-07T10:59:11Z,157307
3194467884,dtcxzyw,,2025-09-07T14:23:34Z,157307
3194714197,frederick-vs-ja,"LGTM now.

@philnik777 If #152989 won't be resolved soon, I think we should at least merge this.",2025-09-08T01:15:10Z,157304
3195460070,philnik777,,2025-09-08T08:20:56Z,157304
3202324290,topperc,,2025-09-09T16:07:40Z,157295
3206867557,sunshaoce,,2025-09-10T16:11:08Z,157295
3207536973,topperc,LGTM,2025-09-10T19:24:28Z,157295
3208290566,ppenzin,,2025-09-11T00:34:47Z,157295
3193275408,vbvictor,,2025-09-06T16:38:39Z,157285
3193278355,vbvictor,,2025-09-06T16:39:41Z,157285
3193303524,EugeneZelenko,,2025-09-06T16:49:47Z,157285
3193564882,vbvictor,,2025-09-06T18:12:44Z,157285
3194552088,carlosgalvezp,"LGTM, thank you!",2025-09-07T18:38:53Z,157285
3201120195,vbvictor,,2025-09-09T11:53:10Z,157285
3202011429,EugeneZelenko,,2025-09-09T14:52:30Z,157285
3195859360,mstorsjo,"LGTM, this looks straightforward enough.

I'm somewhat surprised to see a seemingly general feature like `/summary` (even if many of the numbers may be related to debug info) be implemented in the PDB writer (which obviously is a preexisting design). What if the user doesn't do any PDB output at all (or e.g. links with `-debug:dwarf`) - does the `/summary` option still have an effect?",2025-09-08T10:06:48Z,157284
3194343378,RKSimon,LGTM,2025-09-07T09:58:30Z,157260
3196485730,jhuber6,"The handling here is weird because offload used to live in OpenMP, a lot of this needs to be cleaned up.",2025-09-08T13:13:28Z,157253
3194503573,arsenm,,2025-09-07T16:03:30Z,157247
3194342633,RKSimon,,2025-09-07T09:56:14Z,157246
3194532621,RKSimon,LGTM,2025-09-07T17:33:50Z,157246
3194330297,RKSimon,LGTM with one minor,2025-09-07T09:28:11Z,157245
3194532451,RKSimon,,2025-09-07T17:33:04Z,157245
3191665917,MaskRay,,2025-09-06T07:11:19Z,157236
3193970200,ilovepi,,2025-09-06T23:20:46Z,157237
3199613225,petrhosek,,2025-09-09T06:40:19Z,157237
3193969876,ilovepi,LGTM,2025-09-06T23:20:08Z,157234
3199605774,petrhosek,,2025-09-09T06:38:37Z,157234
3197248001,ilovepi,LGTM. IMO this is a much nicer way to test a property on `stdin`'s positioning. Lets get a bit more consensus from other maintainers before landing though.,2025-09-08T16:22:36Z,157232
3197408713,petrhosek,,2025-09-08T17:13:17Z,157232
3197419719,boomanaiden154,,2025-09-08T17:17:14Z,157232
3197483601,petrhosek,,2025-09-08T17:40:47Z,157232
3197501986,boomanaiden154,,2025-09-08T17:46:58Z,157232
3197524797,petrhosek,,2025-09-08T17:54:55Z,157232
3192226586,arsenm,,2025-09-06T10:57:52Z,157230
3192822111,tgymnich,,2025-09-06T14:02:21Z,157230
3192231045,arsenm,,2025-09-06T10:58:47Z,157231
3192352414,kuhar,"In addition to the concern about an extra include, I haven't seen `std::variant` used in llvm/mlir but heard that some implementations are not very peformant. I think we'd want to proceed with caution in case this doesn't end up being just an NFC.",2025-09-06T11:38:36Z,157229
3192834883,tgymnich,,2025-09-06T14:07:45Z,157229
3192900541,nikic,"https://llvm-compile-time-tracker.com/compare.php?from=e0f00bd645bfd75a6717242cc42d63eeebb1db68&to=22587d6d1a9ae5a4e6805fa1dc964818bbbc6cb5&stat=instructions:u

std::variant should never be used in performance sensitive code.",2025-09-06T14:31:35Z,157229
3193046068,tgymnich,for the curious: https://godbolt.org/z/c9sMMn665. Could the overhead be caused by`std::visit` on some toolchains?,2025-09-06T15:19:57Z,157229
3192386969,arsenm,,2025-09-06T11:46:52Z,157228
3192709216,kuhar,,2025-09-06T13:17:54Z,157228
3192725313,kuhar,,2025-09-06T13:24:14Z,157227
3194994669,arsenm,,2025-09-08T05:20:18Z,157226
3191511894,teresajohnson,,2025-09-06T04:29:07Z,157222
3193994157,snehasish,Lgtm,2025-09-07T00:02:23Z,157222
3191607762,petrhosek,,2025-09-06T05:50:41Z,157223
3193962803,ilovepi,LGTM other than the `cat` bit. ,2025-09-06T23:07:45Z,157223
3194536978,boomanaiden154,,2025-09-07T17:43:41Z,157223
3194803901,mylai-mtk,,2025-09-08T02:50:38Z,157220
3194883822,wangpc-pp,,2025-09-08T03:54:23Z,157220
3195699433,mylai-mtk,,2025-09-08T09:24:16Z,157220
3196293226,jaidTw,,2025-09-08T12:26:53Z,157220
3198832007,mylai-mtk,,2025-09-09T02:45:14Z,157220
3198841154,mylai-mtk,,2025-09-09T02:45:51Z,157220
3199361039,mylai-mtk,LGTM,2025-09-09T05:53:13Z,157220
3199576891,wangpc-pp,LGTM.,2025-09-09T06:32:46Z,157220
3195215049,kito-cheng,,2025-09-08T07:02:36Z,157221
3195446309,cdevadas,,2025-09-08T08:17:21Z,157216
3191256039,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR fixes a performance regression in IRMover by properly managing a cache for linking named metadata nodes. The cache is moved from the IRLinker class (created per module) to the IRMover class (used for entire LTO), ensuring the optimization data persists across all module linking operations.

- Moves the NamedMDNodes cache from IRLinker to IRMover for proper lifetime management
- Updates the cache key from string names to NamedMDNode pointers for better performance
- Passes the cache reference through the IRLinker constructor

### Reviewed Changes

Copilot reviewed 2 out of 2 changed files in this pull request and generated 2 comments.

| File | Description |
| ---- | ----------- |
| llvm/include/llvm/Linker/IRMover.h | Adds NamedMDNodesT typedef and NamedMDNodes member to IRMover class |
| llvm/lib/Linker/IRMover.cpp | Changes NamedMDNodes from local member to reference, updates constructor and usage |



",2025-09-06T01:53:34Z,157218
3191257534,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR fixes a performance regression in the IRMover class by moving the NamedMDNodes cache from the IRLinker level to the IRMover level. The issue was that IRLinker objects are created per module during LTO, but the IRMover object persists for the entire LTO process, causing the cache to be rebuilt repeatedly.

### Key Changes
- Moved NamedMDNodes cache from IRLinker to IRMover class
- Updated function signature to pass the cache by reference
- Changed cache key from StringRef to const NamedMDNode*

### Reviewed Changes

Copilot reviewed 2 out of 2 changed files in this pull request and generated 1 comment.

| File | Description |
| ---- | ----------- |
| llvm/include/llvm/Linker/IRMover.h | Added NamedMDNodesT type definition and cache member to IRMover class |
| llvm/lib/Linker/IRMover.cpp | Moved NamedMDNodes cache from IRLinker to IRMover and updated references |



",2025-09-06T01:56:28Z,157218
3191287832,pcc,,2025-09-06T02:18:22Z,157218
3195438277,cdevadas,,2025-09-08T08:14:53Z,157215
3194077035,PiJoules,,2025-09-07T01:59:13Z,157207
3194979037,ChiaHungDuan,,2025-09-08T05:09:48Z,157207
3191224865,arsenm,,2025-09-06T01:17:45Z,157210
3191152049,snehasish,lgtm,2025-09-06T00:13:07Z,157204
3191200799,teresajohnson,,2025-09-06T00:59:39Z,157204
3194077458,PiJoules,,2025-09-07T01:59:49Z,157205
3191132584,vonosmas,,2025-09-05T23:53:47Z,157202
3191136154,vonosmas,,2025-09-05T23:55:04Z,157203
3193098217,aaronmondal,"Do keep in mind that the wide globs could lead to accidentally ""overincluding"" files in the future which might lead to bugs that are harder to track down than more obvious ""missing file"" bugs which can fairly easily be fixed via visual comparison to the CMake sources. Not sure what the better tradeoff is.",2025-09-06T15:58:26Z,157200
3194005445,chandlerc,"Thanks for the review!

Note that in testing I discovered I needed to do something similar for the header-only SipHash used by some of the builtins. PTAL if you can?

> Do keep in mind that the wide globs could lead to accidentally ""overincluding"" files in the future which might lead to bugs that are harder to track down than more obvious ""missing file"" bugs which can fairly easily be fixed via visual comparison to the CMake sources. Not sure what the better tradeoff is.

Well, in working with an explicit list for a few years downstream, we have definitely ended up with missing files that went unnoticed. So I think at least initially that motivates using the globs.

When initially building this version, I ended up on several cases having overly broad globs and most (but not all) were easily caught due to failing to build for the relevant target platform. So I'm hopeful that this tradeoff works well in practice, but certainly happy for us to revisit if over-inclusion becomes a problem.",2025-09-07T00:27:28Z,157200
3194139077,aaronmondal,LGTM 👍,2025-09-07T03:32:58Z,157200
3191224632,preames,LGTM,2025-09-06T01:17:18Z,157199
3191429041,lukel97,"LGTM. I presume the original intention was to use the return values to cache expansions, but I don't think that ever got implemented. We can probably also rename CachingVPExpander -> VPExpander",2025-09-06T03:48:16Z,157199
3194345938,Michael137,,2025-09-07T10:01:57Z,157196
3191226986,preames,LGTM,2025-09-06T01:21:20Z,157195
3191452121,lukel97,,2025-09-06T03:58:11Z,157195
3191498036,topperc,,2025-09-06T04:22:01Z,157195
3190985027,JDevlieghere,🚢,2025-09-05T22:41:54Z,157192
3194543205,eugeneepshteyn,,2025-09-07T18:06:50Z,157191
3196731741,kkwli,LG. Thanks for the quick fix.,2025-09-08T14:09:15Z,157191
3195976443,tblah,Thanks for the bug fix,2025-09-08T10:54:13Z,157186
3196993769,ceseo,,2025-09-08T15:13:53Z,157186
3196994607,ceseo,,2025-09-08T15:14:07Z,157186
3197245962,tblah,,2025-09-08T16:20:52Z,157186
3197392111,ceseo,,2025-09-08T17:07:52Z,157186
3200725077,tblah,,2025-09-09T10:22:06Z,157186
3200726607,tblah,Thank you for the bug fix,2025-09-09T10:22:22Z,157186
3201713028,ceseo,,2025-09-09T13:46:25Z,157186
3191304543,wangpc-pp,LGTM.,2025-09-06T02:32:36Z,157188
3191314001,wangzpgi,,2025-09-06T02:47:26Z,157189
3191329614,vzakhari,,2025-09-06T02:58:58Z,157189
3191330917,vzakhari,,2025-09-06T03:00:32Z,157189
3192946706,clementval,,2025-09-06T14:46:08Z,157189
3192950883,clementval,,2025-09-06T14:47:45Z,157189
3197274571,clementval,,2025-09-08T16:28:29Z,157189
3191302884,wangpc-pp,,2025-09-06T02:30:58Z,157185
3196313961,jplehr,,2025-09-08T12:33:22Z,157182
3196321712,jhuber6,,2025-09-08T12:35:02Z,157182
3196376703,jplehr,lgtm,2025-09-08T12:47:20Z,157182
3195430475,philnik777,Thanks!,2025-09-08T08:12:28Z,157183
3192427203,zwuis,,2025-09-06T11:58:00Z,157174
3194060258,zwuis,,2025-09-07T01:39:14Z,157174
3194425678,cor3ntin,,2025-09-07T12:27:45Z,157174
3190991929,joker-eph,,2025-09-05T22:48:22Z,157176
3190996355,joker-eph,,2025-09-05T22:52:52Z,157176
3191255356,makslevental,,2025-09-06T01:52:12Z,157176
3191260631,makslevental,,2025-09-06T02:02:17Z,157176
3191492071,christopherbate,"The change makes sense to me. IIUC, it only affects the generation of ""convenience targets"" for subfolders, but ""check-mlir"" will still run the Python tests. The only comment I have is that we should start adding documentation to the affected functions in AddLLVM.cmake.",2025-09-06T04:18:20Z,157176
3191753918,joker-eph,,2025-09-06T08:12:41Z,157176
3191763267,joker-eph,,2025-09-06T08:15:19Z,157176
3191817736,makslevental,,2025-09-06T08:31:09Z,157176
3191924490,joker-eph,,2025-09-06T09:20:23Z,157176
3197725077,sarnex,,2025-09-08T18:46:36Z,157172
3198206801,jhuber6,,2025-09-08T21:13:28Z,157172
3201983455,sarnex,,2025-09-09T14:45:29Z,157172
3201989716,sarnex,,2025-09-09T14:47:08Z,157172
3201996350,jhuber6,,2025-09-09T14:48:52Z,157172
3202016589,sarnex,,2025-09-09T14:53:50Z,157172
3190921550,PiJoules,LGTM and can confirm this fixes https://github.com/llvm/llvm-project/issues/156760. Could you add that repro as a regression test here.,2025-09-05T22:10:48Z,157171
3194578536,aaronpuchert,It looks like there is some confusion around the concepts here: `unique_lock` is not a `lockable` but a [`scoped_lockable`](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#scoped-capability). The latter should be automatically released if you annotate the destructor. The former should in my view be manually released before they're destroyed. I'll comment on the original issue.,2025-09-07T20:44:02Z,157171
3194596891,aaronpuchert,,2025-09-07T21:08:29Z,157171
3190657644,xlauko,lgtm,2025-09-05T20:12:05Z,157169
3195716507,Michael137,,2025-09-08T09:28:04Z,157167
3190652169,shiltian,,2025-09-05T20:09:49Z,157168
3203154455,dmpots,,2025-09-09T20:39:04Z,157170
3207269884,GeorgeHuyubo,,2025-09-10T18:02:53Z,157170
3207859486,dmpots,Can we get a test case for this?,2025-09-10T21:24:54Z,157170
3207890806,dmpots,,2025-09-10T21:28:15Z,157170
3207993211,dmpots,LGTM,2025-09-10T22:13:58Z,157170
3190749251,shiltian,,2025-09-05T20:46:21Z,157166
3190579118,preames,LGTM,2025-09-05T19:39:43Z,157164
3190576291,efriedma-quic,,2025-09-05T19:38:21Z,157159
3197002312,fhahn,,2025-09-08T15:16:22Z,157159
3197968569,efriedma-quic,,2025-09-08T20:11:57Z,157159
3198201990,fhahn,,2025-09-08T21:10:34Z,157159
3198211002,efriedma-quic,LGTM.  Also a couple minor suggestions; accept or reject if you want.,2025-09-08T21:15:57Z,157159
3200233551,fhahn,,2025-09-09T09:01:15Z,157159
3200521850,nikic,,2025-09-09T09:49:14Z,157159
3200792334,fhahn,,2025-09-09T10:34:02Z,157159
3200792458,fhahn,,2025-09-09T10:34:04Z,157159
3201544107,RoboTux,,2025-09-09T13:17:32Z,157158
3201632002,Clipi-12,,2025-09-09T13:32:34Z,157158
3201810595,RoboTux,,2025-09-09T14:08:17Z,157158
3202832354,RoboTux,LGTM,2025-09-09T18:44:42Z,157158
3190658901,michaelrj-google,,2025-09-05T20:12:33Z,157157
3190599164,nikalra,,2025-09-05T19:48:58Z,157156
3190713788,jakubtuchol,,2025-09-05T20:30:49Z,157156
3190378937,cyndyishida,,2025-09-05T18:19:38Z,157154
3190326514,JDevlieghere,,2025-09-05T17:59:02Z,157150
3190389730,JDevlieghere,LGTM!,2025-09-05T18:23:47Z,157150
3190316472,rupprecht,,2025-09-05T17:53:48Z,157149
3190328728,ymand,,2025-09-05T17:59:06Z,157148
3190250802,rupprecht,,2025-09-05T17:25:54Z,157143
3190476365,wangpc-pp,LGTM!,2025-09-05T18:59:58Z,157147
3190267034,ChiaHungDuan,,2025-09-05T17:32:34Z,157146
3190358278,PiJoules,,2025-09-05T18:11:39Z,157146
3195605649,SLTozer,"Seems like the most robust way to get information on the ongoing intermittent failures, SGTM.",2025-09-08T08:58:41Z,157145
3192471192,kuhar,Thanks ,2025-09-06T12:07:11Z,157141
3190246717,AmrDeveloper,"LGTM, Thanks for updating GenExprComplex",2025-09-05T17:24:07Z,157140
3190599814,bcardosolopes,,2025-09-05T19:49:19Z,157140
3197495779,shafik,LGTM but we need a release note.,2025-09-08T17:44:35Z,157139
3197534878,erichkeane,"Release note + bug number is a good idea, else LGTM.",2025-09-08T17:57:50Z,157139
3191498378,tbaederr,,2025-09-06T04:22:18Z,157137
3190469150,wangpc-pp,LGTM. Thanks!,2025-09-05T18:56:46Z,157133
3195897362,SLTozer,"It's rather unfortunate that there's not a better way of getting useful output here, but it is a finicky error, and this should provide the necessary output to diagnose the issue without affecting normal output.",2025-09-08T10:40:18Z,157130
3190275211,svkeerthy,"Yes, makes sense. Thanks!",2025-09-05T17:36:05Z,157132
3190316648,boomanaiden154,,2025-09-05T17:53:52Z,157132
3189858667,makslevental,Thanks!,2025-09-05T15:38:48Z,157127
3189918290,tbaederr,,2025-09-05T15:57:04Z,157126
3190001868,RKSimon,,2025-09-05T16:23:15Z,157126
3190285736,tbaederr,Bytecode part LGTM,2025-09-05T17:40:41Z,157126
3189821342,vbvictor,"LGTM, thank you",2025-09-05T15:27:20Z,157123
3190440111,carlosgalvezp,LGTM!,2025-09-05T18:43:59Z,157123
3189780510,klausler,,2025-09-05T15:16:27Z,157120
3189921530,vzakhari,"Thank you, Jean!",2025-09-05T15:57:41Z,157120
3198456812,charithaintc,"overall this looks great to me. awesome work.

I added some comments. I will do another pass after your response. ",2025-09-09T00:00:07Z,157119
3200717987,akroviakov,,2025-09-09T10:20:40Z,157119
3200718121,akroviakov,,2025-09-09T10:20:43Z,157119
3200718236,akroviakov,,2025-09-09T10:20:45Z,157119
3200718750,akroviakov,,2025-09-09T10:20:50Z,157119
3200719226,akroviakov,,2025-09-09T10:20:54Z,157119
3204525148,charithaintc,LGTM. please address the remainnig comments before merge.,2025-09-10T05:59:04Z,157119
3204538603,charithaintc,,2025-09-10T06:00:32Z,157119
3204540502,charithaintc,,2025-09-10T06:01:31Z,157119
3205013312,akroviakov,,2025-09-10T08:18:37Z,157119
3205014985,akroviakov,,2025-09-10T08:19:06Z,157119
3205015191,akroviakov,,2025-09-10T08:19:09Z,157119
3205015768,akroviakov,,2025-09-10T08:19:17Z,157119
3206865247,charithaintc,,2025-09-10T16:10:26Z,157119
3207597850,charithaintc,,2025-09-10T19:46:00Z,157119
3190344514,andykaylor,,2025-09-05T18:17:45Z,157116
3190598825,bcardosolopes,LGTM once existing comments are addressed ,2025-09-05T19:48:47Z,157116
3196437230,mmha,,2025-09-08T13:00:19Z,157116
3196905336,mmha,,2025-09-08T14:52:22Z,157116
3196955613,mmha,,2025-09-08T15:03:55Z,157116
3197078534,mmha,,2025-09-08T15:36:14Z,157116
3189485056,tbaederr,,2025-09-05T13:56:03Z,157109
3189640407,nikic,LG,2025-09-05T14:39:15Z,157112
3189694475,c-rhodes,,2025-09-05T14:52:32Z,157112
3189735393,nikic,,2025-09-05T15:04:29Z,157112
3200504484,frederick-vs-ja,,2025-09-09T09:44:23Z,157114
3201207306,ldionne,,2025-09-09T12:12:43Z,157114
3189552513,s-barannikov,,2025-09-05T14:13:12Z,157107
3189522172,tbaederr,,2025-09-05T14:05:39Z,157106
3189547460,RKSimon,,2025-09-05T14:12:09Z,157106
3189578626,tbaederr,,2025-09-05T14:20:24Z,157106
3201106651,ldionne,"Just curious, how do you apply these cherry-picks? Do you generate a patch and then change the name of the files it applies to?",2025-09-09T11:50:25Z,157104
3189505503,phoebewang,,2025-09-05T14:01:33Z,157100
3189522690,phoebewang,LGTM with one nit.,2025-09-05T14:05:49Z,157100
3189275158,lntue,,2025-09-05T13:01:22Z,157096
3189303452,c8ef,,2025-09-05T13:07:09Z,157096
3189507201,lntue,,2025-09-05T14:02:02Z,157096
3189310143,gysit,LGTM,2025-09-05T13:08:19Z,157099
3189280295,frederick-vs-ja,,2025-09-05T13:02:46Z,157095
3189238056,frederick-vs-ja,Thanks for fixing the typo!,2025-09-05T12:48:57Z,157093
3190172281,XChy,"The implementation LGTM.
The original logic for the state machines remains complicated. If possible, can you import some testcases from #67093?",2025-09-05T16:58:08Z,157089
3195826670,XChy,Thanks. LGTM.,2025-09-08T09:56:50Z,157089
3189137629,nikic,,2025-09-05T12:15:06Z,157088
3190033138,mshockwave,LGTM,2025-09-05T16:35:10Z,157071
3189973417,topperc,LGTM,2025-09-05T16:12:26Z,157070
3188867274,wangpc-pp,LGTM.,2025-09-05T10:43:00Z,157068
3189355399,erichkeane,,2025-09-05T13:21:19Z,157062
3188841904,jayfoad,"It is intuitively obvious to me that AVGFLOORU/AVGCEILU/AVGFLOORS/AVGCEILS have a well defined result for all (non-undef non-poison) inputs, so I think this is fine even without Alive2 proofs.",2025-09-05T10:33:07Z,157056
3188610248,arsenm,"At some point we should split Support into ""ReallySupport"" and ""RandomStuffThatIRAndCodeGenUse""",2025-09-05T09:16:55Z,157057
3188742379,sdesmalen-arm,"This OptimizationClass class is pretty trivial. I think it makes sense to move `OptimizationLevel` to Support to avoid an unnecessary dependence on `Passes` when needing to reference `OptimizationLevel::O0`, for example.",2025-09-05T10:03:41Z,157057
3188552127,jayfoad,"This is great if it works, but I am surprised. I didn't work when I tried a few months ago. And bz30254 (#29602) is still open.",2025-09-05T08:57:19Z,157054
3189379625,Sisyph,,2025-09-05T13:28:09Z,157053
3189395886,arsenm,,2025-09-05T13:32:11Z,157053
3190360242,vbvictor,LGTM,2025-09-05T18:13:05Z,157049
3191543207,PiotrZSL,,2025-09-06T04:52:24Z,157049
3189269627,Sirraide,,2025-09-05T13:02:55Z,157046
3189320902,tbaederr,,2025-09-05T13:10:41Z,157046
3189346243,Sirraide,,2025-09-05T13:18:41Z,157046
3188536295,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR optimizes the erf and erfc vector functions in libclc by switching from scalarization to a loop-based implementation. The change aims to reduce binary size by 3-4% for AMD and NVIDIA targets while maintaining functionality.

- Replaces scalarized vector implementations with loop-based ones for erf/erfc functions
- Introduces a new shared header for loop-based unary function scalarization
- Allows backend compilers to decide on loop unrolling for optimal performance

### Reviewed Changes

Copilot reviewed 3 out of 3 changed files in this pull request and generated 1 comment.

| File | Description |
| ---- | ----------- |
| libclc/clc/lib/generic/math/clc_erfc.cl | Switches from scalarized to loop-based vector implementation |
| libclc/clc/lib/generic/math/clc_erf.cl | Switches from scalarized to loop-based vector implementation |
| libclc/clc/include/clc/shared/unary_def_scalarize_loop.inc | New shared header implementing loop-based vector scalarization |



",2025-09-05T08:51:43Z,157055
3188627627,arsenm,,2025-09-05T09:23:13Z,157055
3188452298,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR optimizes the IRLinker to avoid quadratic behavior during ThinLTO linking by replacing a linear search with a hash-based lookup. The change addresses performance issues where `is_contained` performs linear searches through previously inserted operands, causing up to 30% overhead on large binaries with CFI metadata.

Key changes:
- Introduces a `DenseMap<StringRef, DenseSet<MDNode *>>` lookup table to track inserted operands
- Replaces `is_contained` linear search with O(1) hash-based duplicate detection
- Adds initialization logic to populate the lookup table from existing destination operands



",2025-09-05T08:22:22Z,157045
3188489689,arsenm,,2025-09-05T08:35:52Z,157045
3190167306,shiltian,,2025-09-05T16:56:21Z,157037
3190170577,shiltian,,2025-09-05T16:57:29Z,157037
3190595851,rampitec,,2025-09-05T19:47:23Z,157037
3191175436,arsenm,,2025-09-06T00:28:16Z,157037
3191176883,arsenm,,2025-09-06T00:29:46Z,157037
3188501302,steakhal,"I'm happy to see that you didn't give up.
Thank you!",2025-09-05T08:40:34Z,157038
3189739865,tblah,,2025-09-05T15:05:50Z,157036
3194455351,tblah,Thank you for the update. Would you like me to merge this?,2025-09-07T13:49:32Z,157036
3188631236,RKSimon,Do we have any test coverage of the error messages if people use the old args and does it explain how they can fix it? Not sure how important it is given its still early days for avx10 but I imagine someone has already started using it......,2025-09-05T09:24:32Z,157034
3188842398,RKSimon,LGTM,2025-09-05T10:33:17Z,157034
3194472638,dtcxzyw,,2025-09-07T14:36:40Z,157030
3194572330,kper,,2025-09-07T20:00:53Z,157030
3194604207,andjo403,,2025-09-07T21:23:15Z,157030
3198229686,andjo403,Looks good to me but wait for an other review,2025-09-08T21:22:00Z,157030
3206511811,dtcxzyw,,2025-09-10T14:43:09Z,157030
3206655811,dtcxzyw,"LGTM. Thanks.

As a follow-up, are you interested in folding `trunc (shr C=0b11111...0000, %x) to i1 -> icmp ugt %x, cttz(C) - 1` as well? Not sure if it is profitable in real-world programs.
",2025-09-10T15:19:17Z,157030
3206698867,kper,,2025-09-10T15:23:08Z,157030
3189048364,labath,:ship: ,2025-09-05T11:43:35Z,157048
3190016214,adrian-prantl,,2025-09-05T16:29:07Z,157048
3189110174,arsenm,,2025-09-05T12:07:14Z,157027
3189214507,RKSimon,,2025-09-05T12:40:49Z,157027
3188300405,arsenm,,2025-09-05T07:28:30Z,157024
3188138296,arsenm,,2025-09-05T06:19:49Z,157023
3188603504,tgymnich,,2025-09-05T09:14:29Z,157022
3189414328,kuhar,,2025-09-05T13:37:36Z,157022
3189871477,kazutakahirata,,2025-09-05T15:42:53Z,157022
3188065170,ChuanqiXu9,The change itself looks good and makes sense.,2025-09-05T05:39:09Z,157019
3188066317,ChuanqiXu9,,2025-09-05T05:39:58Z,157019
3188123050,mizvekov,,2025-09-05T06:12:14Z,157019
3188137672,ChuanqiXu9,,2025-09-05T06:19:29Z,157019
3188138955,arsenm,,2025-09-05T06:20:11Z,157020
3189460867,kuhar,,2025-09-05T13:50:29Z,157020
3188125039,wangpc-pp,,2025-09-05T06:13:22Z,157011
3189460321,s-barannikov,,2025-09-05T13:50:41Z,157012
3189475345,jurahul,,2025-09-05T13:54:09Z,157012
3196978781,luporl,"LGTM, thanks for adding a test.",2025-09-08T15:09:52Z,157009
3197857193,luporl,,2025-09-08T19:26:58Z,157009
3198125993,luporl,,2025-09-08T20:48:19Z,157009
3200502697,agozillon,,2025-09-09T09:44:01Z,157009
3187958836,frederick-vs-ja,,2025-09-05T04:41:34Z,157010
3187981648,c8ef,Thanks for the quick fix!,2025-09-05T04:56:10Z,157010
3188021746,frederick-vs-ja,,2025-09-05T05:12:03Z,157010
3187981925,tonykuttai,LGTM,2025-09-05T04:56:19Z,157007
3188425884,philnik777,LGTM assuming the CI is happy.,2025-09-05T08:13:04Z,157006
3187863482,makslevental,,2025-09-05T03:07:39Z,157004
3187863906,makslevental,,2025-09-05T03:08:03Z,157004
3187864684,makslevental,,2025-09-05T03:08:53Z,157004
3187865756,makslevental,,2025-09-05T03:09:58Z,157004
3187869630,makslevental,LGTM modulo (mostly optional) nits.,2025-09-05T03:13:55Z,157004
3187875053,makslevental,,2025-09-05T03:19:23Z,157004
3188019833,nikalra,,2025-09-05T05:10:33Z,157004
3188871134,joker-eph,,2025-09-05T11:15:08Z,157004
3190014848,nikalra,,2025-09-05T16:28:33Z,157004
3190015932,nikalra,,2025-09-05T16:29:01Z,157004
3190016999,nikalra,,2025-09-05T16:29:27Z,157004
3190021168,nikalra,,2025-09-05T16:31:10Z,157004
3190026305,nikalra,,2025-09-05T16:32:52Z,157004
3191943619,joker-eph,,2025-09-06T09:30:45Z,157004
3197641308,nikalra,,2025-09-08T18:23:22Z,157004
3197255338,frasercrmck,,2025-09-08T16:22:56Z,157002
3187853135,lntue,,2025-09-05T02:57:15Z,157003
3190229877,shiltian,,2025-09-05T17:17:52Z,156998
3190544657,rampitec,,2025-09-05T19:29:03Z,157001
3190541900,rampitec,,2025-09-05T19:28:23Z,156997
3187901107,shiltian,seems like a NFC,2025-09-05T03:46:50Z,156993
3187612985,kuhar,,2025-09-05T00:39:52Z,156992
3188479544,Groverkss,This needs to be implemented the same way https://github.com/llvm/llvm-project/pull/151175 is implemented. We should be implementing a unrolling pattern for this. The rest of the ops do unrolling by default and we should keep it consistent.,2025-09-05T08:32:02Z,156992
3190539835,rampitec,,2025-09-05T19:27:51Z,156991
3190461157,rampitec,,2025-09-05T18:53:21Z,156990
3190211989,shiltian,,2025-09-05T17:12:40Z,156989
3190457894,rampitec,,2025-09-05T18:51:53Z,156989
3187579565,jasonmolenda,These all look correct.,2025-09-05T00:04:12Z,156987
3188538009,s-barannikov,,2025-09-05T08:56:35Z,156986
3189455709,jurahul,,2025-09-05T13:49:12Z,156986
3189456456,jurahul,,2025-09-05T13:49:19Z,156986
3187724315,mtrofin,Thanks!,2025-09-05T01:21:06Z,156985
3187729198,boomanaiden154,,2025-09-05T01:24:58Z,156985
3187554113,cmtice,,2025-09-04T23:45:01Z,156983
3187564332,cmtice,,2025-09-04T23:53:35Z,156983
3189786054,klausler,,2025-09-05T15:18:09Z,156982
3187534923,jasonmolenda,"thanks for straightening those out, look good to me.",2025-09-04T23:27:16Z,156981
3188735765,cjacek,"LGTM, thanks!",2025-09-05T10:01:12Z,156979
3187763533,jeffreytan81,,2025-09-05T01:42:38Z,156980
3191188716,dmpots,,2025-09-06T00:44:54Z,156980
3198690822,dmpots,LGTM!,2025-09-09T01:19:34Z,156980
3191171569,topperc,LGTM,2025-09-06T00:25:20Z,156974
3187394852,topperc,,2025-09-04T22:06:35Z,156973
3187437462,jurahul,,2025-09-04T22:24:51Z,156973
3187908060,topperc,LGTM,2025-09-05T03:54:17Z,156973
3187328877,erichkeane,,2025-09-04T21:38:19Z,156970
3187359111,mmha,,2025-09-04T21:50:45Z,156970
3187457324,andykaylor,,2025-09-04T22:35:32Z,156970
3187523436,erichkeane,,2025-09-04T23:17:18Z,156970
3190303058,andykaylor,,2025-09-05T17:48:06Z,156970
3190311247,erichkeane,,2025-09-05T17:51:36Z,156970
3190591509,bcardosolopes,,2025-09-05T19:45:26Z,156970
3187508312,kuhar,,2025-09-04T23:04:32Z,156972
3187513958,amd-eochoalo,"Hey @hanhanW , this looks like a better fix than what I was looking at.

I saw on `LowerGPUOpsToNVVMOps` and `GPUToLLVMConversion` that these passes will first run the `vector::populateVectorFromElementsLoweringPatterns(patterns);` patterns which will also flatten N-dimensional `vector.from_elements` operations. 

I agree that using the `adaptor` makes sense here, but I wonder if one should also apply these patterns before lowering to SPIR-V as n-dimensional vectors are illegal in SPIR-V. See for example: https://github.com/llvm/llvm-project/pull/155499/files

EDIT: Probably makes sense to have both. This change makes sure that the types are valid in SPIR-V while the draft PR makes sure that the shapes are valid.",2025-09-04T23:09:16Z,156972
3187298078,cmtice,,2025-09-04T21:23:34Z,156969
3187489081,arsenm,,2025-09-04T22:54:16Z,156968
3187495011,arsenm,,2025-09-04T22:57:09Z,156971
3187507300,rampitec,,2025-09-04T23:03:40Z,156971
3187517960,arsenm,,2025-09-04T23:12:38Z,156971
3187526097,rampitec,,2025-09-04T23:19:36Z,156971
3187647872,arsenm,,2025-09-05T01:03:59Z,156971
3187220885,michaelrj-google,,2025-09-04T20:53:54Z,156967
3187524040,shiltian,,2025-09-04T23:17:47Z,156966
3187524377,shiltian,,2025-09-04T23:18:04Z,156965
3187235070,andykaylor,,2025-09-04T21:00:07Z,156963
3190235665,AmrDeveloper,,2025-09-05T17:19:59Z,156963
3190377819,andykaylor,,2025-09-05T18:19:13Z,156963
3187763053,hstk30-hw,,2025-09-05T01:42:06Z,156962
3187221744,eugeneepshteyn,,2025-09-04T20:54:18Z,156961
3187317979,kparzysz,,2025-09-04T21:33:35Z,156961
3189215920,tblah,Clever stuff,2025-09-05T12:41:11Z,156961
3187017379,kuhar,,2025-09-04T20:04:50Z,156958
3187530293,kuhar,,2025-09-04T23:23:13Z,156958
3186976392,s-barannikov,LGTM,2025-09-04T19:54:07Z,156960
3186990417,jurahul,,2025-09-04T19:57:42Z,156960
3187137411,topperc,,2025-09-04T20:29:31Z,156957
3187246171,preames,,2025-09-04T21:05:12Z,156957
3187357191,topperc,LGTM,2025-09-04T21:49:48Z,156957
3188402752,philnik777,"I'm not sure I understand the reasoning here. `-Wthread-safety` inherently has false-positives, so false-positives don't seem like a reason to remove the annotations again. If anything, we should expand them. If you can't deal with false-postives, don't enable a warning that has them.",2025-09-05T08:04:39Z,156964
3186936937,ashgti,,2025-09-04T19:44:18Z,156956
3188380872,philnik777,,2025-09-05T08:00:17Z,156953
3189244319,ldionne,,2025-09-05T12:51:10Z,156953
3186711663,rupprecht,Thanks! Can you please run buildifier to format the file before merging?,2025-09-04T18:49:44Z,156946
3187622291,zwuis,,2025-09-05T00:44:51Z,156950
3187626184,boomanaiden154,,2025-09-05T00:48:53Z,156950
3197624913,vbvictor,,2025-09-08T18:20:27Z,156950
3197629167,cmtice,,2025-09-08T18:21:09Z,156950
3197631461,cmtice,,2025-09-08T18:21:33Z,156950
3197676351,vbvictor,,2025-09-08T18:31:09Z,156950
3197679829,vbvictor,,2025-09-08T18:32:21Z,156950
3197682072,vbvictor,,2025-09-08T18:33:14Z,156950
3197706374,cmtice,,2025-09-08T18:40:02Z,156950
3197720187,vbvictor,,2025-09-08T18:44:40Z,156950
3188680924,david-arm,Seems like a sensible fix. Just one request to add another variant of the test!,2025-09-05T09:42:58Z,156945
3188878026,sjoerdmeijer,,2025-09-05T10:47:33Z,156945
3189156044,david-arm,LGTM!,2025-09-05T12:21:51Z,156945
3186657671,cmtice,,2025-09-04T18:37:14Z,156939
3186711368,tbaederr,,2025-09-04T18:49:38Z,156944
3186807188,RKSimon,,2025-09-04T19:14:18Z,156944
3188395497,tbaederr,,2025-09-05T08:02:03Z,156944
3187075847,andykaylor,lgtm,2025-09-04T20:16:59Z,156938
3189646956,qiongsiwu,LGTM! Thanks! ,2025-09-05T14:39:10Z,156934
3190350837,ian-twilightcoder,,2025-09-05T18:08:27Z,156934
3186339601,boomanaiden154,"`lldb/test/Shell/Host/TestCustomShell.test` will still fail after this, but this change is still necessary either way. It does fix the other two tests and enables implementing `env -i` within lit's internal shell to fix `lldb/test/Shell/Host/TestCustomShell.test`.

I'm hoping to get to implementing `env -i` within the next hour or two.",2025-09-04T17:26:38Z,156931
3186343764,boomanaiden154,,2025-09-04T17:26:46Z,156931
3189899092,spall,,2025-09-05T16:07:27Z,156932
3189967087,farzonl,,2025-09-05T16:10:01Z,156932
3189971917,farzonl,,2025-09-05T16:11:51Z,156932
3189997859,farzonl,,2025-09-05T16:21:39Z,156932
3190005971,Icohedron,LGTM,2025-09-05T16:24:57Z,156932
3187880842,benshi001,LGTM,2025-09-05T03:25:01Z,156928
3186466458,llvm-beanz,,2025-09-04T17:58:15Z,156930
3186647463,bob80905,LGTM,2025-09-04T18:35:34Z,156930
3186323100,erichkeane,,2025-09-04T17:21:43Z,156929
3186363540,rjmccall,,2025-09-04T17:32:04Z,156929
3189598227,fhahn,,2025-09-05T14:25:41Z,156929
3186830432,topperc,LGTM,2025-09-04T19:20:40Z,156927
3186859292,s-barannikov,,2025-09-04T19:28:16Z,156927
3186994313,jurahul,,2025-09-04T19:58:53Z,156927
3187040105,jurahul,,2025-09-04T20:10:02Z,156927
3187217327,s-barannikov,,2025-09-04T20:52:47Z,156927
3187319772,jurahul,,2025-09-04T21:34:11Z,156927
3186375141,kuhar,Thanks,2025-09-04T17:35:12Z,156926
3187770981,ChuanqiXu9,,2025-09-05T01:49:59Z,156925
3186223629,charithaintc,,2025-09-04T16:57:08Z,156924
3187289818,SamTebbs33,Nice one.,2025-09-04T21:20:07Z,156923
3194564491,davemgreen,LGTM,2025-09-07T19:29:01Z,156920
3203177929,jhuber6,,2025-09-09T20:28:44Z,156922
3186235848,gysit,"Thanks for the fix!

LGTM",2025-09-04T17:01:15Z,156917
3186000961,david-arm,,2025-09-04T15:54:49Z,156916
3186011563,fhahn,,2025-09-04T15:56:24Z,156916
3195846194,davemgreen,,2025-09-08T10:31:59Z,156916
3200317086,david-arm,LGTM!,2025-09-09T09:15:50Z,156916
3200496237,fhahn,"LGTM, thannks",2025-09-09T09:42:56Z,156916
3188939174,nikic,"LGTM

Now that SCEVExpander is using InstSimplify folder, I wonder whether it would be sufficient to only do the willNotOverflow() check before emitting umul_with_overflow, and otherwise let InstSimplifyFolder remove the redundant checks? That would make sure nothing goes out of sync.",2025-09-05T11:08:57Z,156910
3195847752,CarlosAndresRamirez,"Looks good to me, it is a simple change - but I do not have the rights to approve.
Can anyone help us review/approve this?
Thank you.
",2025-09-08T10:02:58Z,156897
3197517090,evodius96,LGTM - do you need help merging this?,2025-09-08T17:52:26Z,156897
3185795039,carlocab,"Seems worth investigating adding support for `unset` in `lit`'s internal shell given how much repetition it would save here, TBH.",2025-09-04T15:07:11Z,156904
3186123240,ilovepi,LGTM,2025-09-04T16:23:43Z,156904
3186139396,ilovepi,,2025-09-04T16:28:45Z,156904
3186145575,boomanaiden154,,2025-09-04T16:30:30Z,156904
3186174027,rnk,,2025-09-04T16:39:57Z,156904
3186290077,boomanaiden154,,2025-09-04T17:13:36Z,156904
3188572198,RKSimon,we still need to handle the mask/maskz variants in avx512vlintrin.h + avx512vlbwintrin.h,2025-09-05T09:03:38Z,156901
3192438523,RKSimon,LGTM - cheers,2025-09-06T11:59:24Z,156901
3185748808,arsenm,,2025-09-04T14:55:24Z,156900
3185840465,frederik-h,,2025-09-04T15:19:25Z,156900
3187034651,bjope,,2025-09-04T20:13:33Z,156900
3187565964,arsenm,,2025-09-04T23:55:36Z,156900
3188176471,bjope,,2025-09-05T06:38:31Z,156900
3188180386,frederik-h,,2025-09-05T06:39:54Z,156900
3188200566,arsenm,,2025-09-05T06:48:00Z,156900
3188418001,frederik-h,,2025-09-05T08:10:10Z,156900
3188501585,bjope,,2025-09-05T08:39:55Z,156900
3188823533,frederik-h,,2025-09-05T10:28:48Z,156900
3188846808,frederik-h,,2025-09-05T10:34:39Z,156900
3188942600,bjope,,2025-09-05T11:10:27Z,156900
3189374587,mikaelholmen,"I've verified that this solves the problems we saw.
Thanks!",2025-09-05T13:26:29Z,156900
3185703700,arsenm,,2025-09-04T14:44:23Z,156895
3189209402,frederik-h,,2025-09-05T12:39:15Z,156895
3200575720,frederik-h,,2025-09-09T09:56:53Z,156895
3185592855,s-barannikov,LGTM,2025-09-04T14:20:20Z,156893
3189546884,CarolineConcatto,,2025-09-05T14:12:01Z,156892
3196222934,CarolineConcatto,,2025-09-08T13:29:24Z,156892
3197067919,Lukacma,,2025-09-08T15:33:04Z,156892
3197081376,Lukacma,,2025-09-08T16:04:45Z,156892
3197864051,davemgreen,"This looks like a nice improvement. RegBankSelect needs some improvement but this looks in line with what I would expect. I have been looking into it a bit recently, to see if we can come up with a better algorithm for it (maybe using mincuts). That will take some time though.

There is quite a bit in this one patch and with all the variants it can be difficult to follow, it might be easier to review if it was split up a little. ",2025-09-08T19:38:20Z,156892
3201886825,Lukacma,,2025-09-09T14:22:20Z,156892
3186839724,rampitec,,2025-09-04T19:22:54Z,156890
3185434956,sdesmalen-arm,,2025-09-04T13:51:03Z,156881
3185526786,paulwalker-arm,,2025-09-04T14:07:55Z,156881
3185448646,MacDue,LGTM,2025-09-04T13:53:40Z,156884
3204956881,lukel97,,2025-09-10T08:04:07Z,156875
3205239119,fhahn,"LGTM, thanks for clarifying the current behavior! ",2025-09-10T09:15:44Z,156875
3185553526,sdesmalen-arm,Is there still any test remaining that covers streaming-compatible -> non-streaming without `+sme`?,2025-09-04T14:13:00Z,156878
3185734102,sdesmalen-arm,,2025-09-04T14:51:49Z,156878
3185262784,RKSimon,LGTM,2025-09-04T13:21:25Z,156880
3187651624,KanRobert,,2025-09-05T01:04:49Z,156880
3202010273,rnk,,2025-09-09T14:53:27Z,156880
3202450561,rnk,,2025-09-09T16:45:42Z,156880
3203632614,arsenm,,2025-09-09T22:51:31Z,156880
3203642596,arsenm,,2025-09-09T22:56:56Z,156880
3203695560,rnk,Looks good assuming the tests are green,2025-09-09T23:08:29Z,156880
3187906661,benshi001,,2025-09-05T03:52:58Z,156876
3188451075,s-barannikov,,2025-09-05T08:21:57Z,156876
3188713356,benshi001,,2025-09-05T09:53:47Z,156876
3188771914,s-barannikov,,2025-09-05T10:13:16Z,156876
3188780481,benshi001,LGTM,2025-09-05T10:16:06Z,156876
3185733541,EugeneZelenko,,2025-09-04T14:52:15Z,156873
3186177657,localspook,,2025-09-04T16:41:23Z,156873
3190369782,vbvictor,LGTM,2025-09-05T18:15:56Z,156873
3185491356,cdevadas,The contents of the test files are huge and I'm unable to view the changes in the testcase llvm/test/CodeGen/AMDGPU/a-v-flat-atomicrmw.ll. There is a suggestion to use a local Git Client to view the changes. Do others see a similar recommendation?,2025-09-04T14:09:19Z,156874
3185549847,arsenm,,2025-09-04T14:12:14Z,156874
3186593336,rampitec,The files better be named like flat-atomicrmw-a-v.ll etc. So they do not popup at the top of the directory sort order but close to other flat/global stuff.,2025-09-04T18:22:55Z,156874
3187509079,rampitec,,2025-09-04T23:05:10Z,156874
3185001337,jhuber6,,2025-09-04T12:30:07Z,156872
3188705864,benshi001,,2025-09-05T09:56:01Z,156862
3188773828,s-barannikov,,2025-09-05T10:13:49Z,156862
3188770241,benshi001,LGTM,2025-09-05T10:28:32Z,156862
3185103353,DeinAlptraum,"Re: Python bindings (`clang/bindings/python/clang/cindex.py`)
We `from __future__ import annotations` at the start of `cindex.py` which lets us use the PEP 585 features (among others) even in Pyhon 3.8.
We have a CI job that runs the libclang-python tests against 3.8 and 3.13, see here:
https://github.com/llvm/llvm-project/actions/workflows/libclang-python-tests.yml
which has always been green with those annotations.

I have also tested this locally, and I can successfully run both the cindex tests and the mypy type checker on it with Python 3.8. (removing the future import produces the problems your PR would have resolved)

Besides, I see no reference to the libclang python tests in the build log you've linked.
I'd thus like to ask you to remove the changes to `cindex.py` from this PR.

Sidenote regarding the other files (which I'm not maintainer for, so cannot say much about them): consider doing the same thing there, to similarly import from future, instead of changing all generic collection types.",2025-09-04T12:51:01Z,156868
3185211346,boomanaiden154,"If you have bots for this, please address specific failures rather than grepping through the entire monorepo for these constructs. A bunch of the files you have hit here (like the ones related to CI) will never be run as part of an LLVM build and are always run with python 3.10+ and thus don't need to be fixed.",2025-09-04T13:11:27Z,156868
3185292666,boomanaiden154,LGTM. Please wait for one of the LLDB reviewers to stamp before merging.,2025-09-04T13:26:37Z,156868
3189961303,JDevlieghere,LGTM,2025-09-05T16:08:13Z,156868
3184924779,arsenm,,2025-09-04T12:14:50Z,156865
3185028323,woruyu,,2025-09-04T12:35:34Z,156865
3197114061,topperc,,2025-09-08T15:47:02Z,156865
3201133960,woruyu,,2025-09-09T11:56:14Z,156865
3202278306,topperc,,2025-09-09T15:54:35Z,156865
3204166197,woruyu,,2025-09-10T02:50:40Z,156865
3206968966,topperc,LGTM,2025-09-10T16:43:25Z,156865
3207007983,topperc,,2025-09-10T16:55:00Z,156865
3207036563,topperc,,2025-09-10T17:01:58Z,156865
3207036830,topperc,LGTM,2025-09-10T17:02:02Z,156865
3208362755,woruyu,,2025-09-11T01:31:43Z,156865
3187660375,shafik,"I am a surprised there are not changed tests nor additional test given the problem description. It would seem we are avoiding output in a specific format. 

We should have a test in which the output would differ w/o this change.",2025-09-05T01:06:33Z,156858
3184755101,arsenm,,2025-09-04T11:37:51Z,156860
3185570941,shiltian,,2025-09-04T14:16:28Z,156860
3185698912,arsenm,,2025-09-04T14:43:08Z,156860
3186623023,rampitec,,2025-09-04T18:29:53Z,156860
3185537245,durga4github,,2025-09-04T14:09:49Z,156857
3186979424,justinfargnoli,,2025-09-04T19:54:48Z,156857
3187141109,Artem-B,This should help with #156096 ,2025-09-04T20:29:25Z,156857
3198721838,nWEIdia,,2025-09-09T01:41:46Z,156857
3202636437,Artem-B,,2025-09-09T17:40:20Z,156857
3204601161,rajatbajpai,,2025-09-10T06:28:44Z,156857
3212525207,Artem-B,,2025-09-11T15:58:15Z,156857
3187893728,benshi001,LGTM,2025-09-05T03:38:57Z,156852
3187913032,benshi001,,2025-09-05T04:00:34Z,156852
3186326301,dpaoliello,"LGTM - `thread::join` clears the handle after calling this, so we are definitely leaking at the moment:
https://github.com/llvm/llvm-project/blob/8bdaa12b7ca4450d0f29b93646f1be27c0d717bd/llvm/include/llvm/Support/thread.h#L144-L147",2025-09-04T17:22:20Z,156854
3186583981,aganea,"LGTM, just a nit.",2025-09-04T18:25:50Z,156854
3195832434,lmielick,,2025-09-08T09:58:10Z,156854
3196044641,aganea,,2025-09-08T11:08:18Z,156854
3196106618,tru,,2025-09-08T11:27:18Z,156854
3184726731,RKSimon,LGTM - cheers,2025-09-04T11:30:12Z,156847
3185146954,alexey-bataev,,2025-09-04T12:59:35Z,156835
3208376835,alexey-bataev,,2025-09-11T01:39:27Z,156835
3184384967,MacDue,,2025-09-04T10:00:38Z,156834
3185477414,egebeysel,,2025-09-04T13:59:22Z,156834
3185287750,RKSimon,LGTM - cheers,2025-09-04T13:25:53Z,156833
3184137947,jmorse,LGTM,2025-09-04T09:00:25Z,156832
3185390032,RKSimon,,2025-09-04T13:45:30Z,156831
3187877824,woruyu,,2025-09-05T03:22:16Z,156831
3187878144,woruyu,,2025-09-05T03:22:35Z,156831
3187878238,woruyu,,2025-09-05T03:22:41Z,156831
3188432802,RKSimon,LGTM - cheers,2025-09-05T08:15:30Z,156831
3188493391,davemgreen,,2025-09-05T08:37:13Z,156831
3184785168,RKSimon,"None of the avx512vlfp16intrin.h `_set_` intrinsics have been converted to constexpr yet so that is fine - I'll raise a separate bug about them - #156866

The other avx512f `_setr_` and `_setr4_` intrinsics do need converting to (constexpr) functions - if you are willing to do so in this patch that would be great.",2025-09-04T11:45:20Z,156819
3185214062,RKSimon,LGTM - cheers,2025-09-04T13:12:00Z,156819
3189218673,ldionne,LGTM but CI is broken (edit: it doesn't seem related to this patch),2025-09-05T12:42:10Z,156824
3185379102,makslevental,,2025-09-04T13:41:01Z,156818
3186099285,makslevental,,2025-09-04T16:17:05Z,156818
3186117204,PragmaTwice,,2025-09-04T16:21:37Z,156818
3186122637,makslevental,,2025-09-04T16:23:31Z,156818
3186136722,makslevental,,2025-09-04T16:27:49Z,156818
3186200116,PragmaTwice,,2025-09-04T16:49:10Z,156818
3186264311,makslevental,,2025-09-04T17:08:21Z,156818
3186318516,makslevental,Cool this is a nice improvement (also surprising we never ran into issues with the previous implementation...).,2025-09-04T17:20:33Z,156818
3184128565,phoebewang,,2025-09-04T08:57:39Z,156817
3198799990,phoebewang,,2025-09-09T02:15:03Z,156817
3198810342,arsenm,,2025-09-09T02:22:46Z,156817
3198869864,phoebewang,,2025-09-09T03:04:49Z,156817
3198899074,arsenm,,2025-09-09T03:23:04Z,156817
3198938163,phoebewang,LGTM.,2025-09-09T03:31:33Z,156817
3186666563,cachemeifyoucan,,2025-09-04T18:39:17Z,156815
3183957362,arsenm,,2025-09-04T08:06:50Z,156812
3185581857,kuhar,"Is this really a simplification? This is a macro, so I'm not sure what the benefit is. Is it for better IDE/lsp support?",2025-09-04T14:18:26Z,156812
3186113295,kuhar,,2025-09-04T16:20:28Z,156812
3183663589,arsenm,,2025-09-04T06:34:08Z,156813
3183665155,arsenm,,2025-09-04T06:34:40Z,156814
3184087538,tgymnich,,2025-09-04T08:45:46Z,156810
3185586106,kuhar,,2025-09-04T14:58:12Z,156810
3185761760,kuhar,,2025-09-04T14:58:25Z,156810
3186103045,kazutakahirata,,2025-09-04T16:18:01Z,156810
3183758722,arsenm,,2025-09-04T07:07:44Z,156811
3185575345,kuhar,,2025-09-04T14:17:19Z,156811
3183692632,phoebewang,LGTM.,2025-09-04T06:45:23Z,156808
3183571426,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR adds comprehensive documentation for the NVVM dialect in MLIR, including a detailed description of its purpose, scope, capabilities, and position in the lowering pipeline. It also fixes minor whitespace issues in existing documentation.

- Adds detailed summary and description fields to the NVVM_Dialect definition
- Documents the dialect's role as MLIR's NVIDIA-specific backend dialect for GPU programming
- Fixes indentation issues in two existing operation descriptions



",2025-09-04T06:05:38Z,156807
3184766600,joker-eph,"LG overall, but I wonder if @fabianmcg has thoughts on this as well?",2025-09-04T15:21:36Z,156807
3186059682,fabianmcg,,2025-09-04T16:06:24Z,156807
3186126065,grypp,,2025-09-04T16:24:31Z,156807
3186129725,fabianmcg,,2025-09-04T16:25:42Z,156807
3186135007,grypp,,2025-09-04T16:27:15Z,156807
3186141412,grypp,,2025-09-04T16:29:19Z,156807
3186144353,fabianmcg,,2025-09-04T16:30:13Z,156807
3186371200,durga4github,,2025-09-04T17:34:13Z,156807
3186378842,durga4github,,2025-09-04T17:36:13Z,156807
3186387770,durga4github,,2025-09-04T17:37:41Z,156807
3186396286,durga4github,LGTM with a few minor suggestions.,2025-09-04T17:38:54Z,156807
3186800024,Wolfram70,,2025-09-04T19:12:40Z,156807
3186881056,clementval,,2025-09-04T19:33:08Z,156807
3187916026,schwarzschild-radius,,2025-09-05T04:02:36Z,156807
3183893315,nikic,,2025-09-04T07:49:04Z,156800
3184054604,david-arm,,2025-09-04T08:36:12Z,156802
3186208075,topperc,,2025-09-04T16:52:03Z,156802
3186271899,aeubanks,,2025-09-04T17:09:56Z,156802
3187885025,MaskRay,Added llvm/test/CodeGen/AArch64/print-pipeline-passes.ll . CodeGen/AArch64 doesn't test this option before.,2025-09-05T03:29:29Z,156802
3187955163,arsenm,,2025-09-05T04:38:16Z,156802
3188042908,MaskRay,,2025-09-05T05:24:30Z,156802
3188099063,davemgreen,Thanks for adding the test. LGTM.,2025-09-05T06:01:12Z,156802
3188449887,david-arm,,2025-09-05T08:21:32Z,156802
3188605680,david-arm,,2025-09-05T09:15:14Z,156802
3189476674,david-arm,,2025-09-05T13:54:21Z,156802
3184839197,walter-erquinigo,,2025-09-04T12:04:13Z,156803
3186336301,ashgti,,2025-09-04T17:31:57Z,156803
3187517415,ashgti,,2025-09-04T23:12:10Z,156803
3190374494,jeffreytan81,,2025-09-05T18:17:56Z,156803
3190383982,jeffreytan81,For the comment I left.,2025-09-05T18:21:23Z,156803
3190998198,royitaqi,,2025-09-05T22:55:08Z,156803
3191192867,jeffreytan81,,2025-09-06T00:44:05Z,156803
3191194980,jeffreytan81,,2025-09-06T00:48:13Z,156803
3192807519,royitaqi,,2025-09-06T13:56:28Z,156803
3197266722,jeffreytan81,,2025-09-08T16:26:32Z,156803
3197270046,jeffreytan81,,2025-09-08T16:27:21Z,156803
3201858739,walter-erquinigo,"add the documentation and i'll approve this :)
I also requested a minor change",2025-09-09T14:16:03Z,156803
3202491110,royitaqi,,2025-09-09T16:59:16Z,156803
3206463936,walter-erquinigo,,2025-09-10T14:30:01Z,156803
3206469411,walter-erquinigo,awesome documentation!,2025-09-10T14:31:22Z,156803
3206659326,JDevlieghere,LGTM,2025-09-10T15:16:54Z,156803
3183369056,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR optimizes G_FSHR legalization in AMDGPU GlobalISel by avoiding unnecessary scalarization for V2S16 types on subtargets that don't support packed instructions. Instead of performing pack/unpack operations that cause instruction bloat, the code now directly scalarizes G_FSHR operations on older subtargets while maintaining the existing behavior for subtargets with VOP3P support.

Key changes:
- Conditionally handle G_FSHR based on VOP3P instruction availability
- Simplify code generation for older subtargets without V2S16 support

### Reviewed Changes

Copilot reviewed 3 out of 3 changed files in this pull request and generated 1 comment.

| File | Description |
| ---- | ----------- |
| llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp | Modified G_FSHR legalization to check for VOP3P support before attempting V2S16 operations |
| llvm/test/CodeGen/AMDGPU/GlobalISel/fshr.ll | Updated test expectations showing optimized instruction sequences |
| llvm/test/CodeGen/AMDGPU/GlobalISel/legalize-fshr.mir | Updated MIR test expectations reflecting simplified legalization |



",2025-09-04T04:24:49Z,156796
3185021394,arsenm,,2025-09-04T12:34:11Z,156796
3185022157,arsenm,,2025-09-04T12:34:21Z,156796
3187499056,arsenm,,2025-09-04T22:59:23Z,156796
3185239951,RKSimon,LGTM - cheers,2025-09-04T13:16:54Z,156794
3183185518,ChuanqiXu9,,2025-09-04T02:19:12Z,156788
3183777383,frasercrmck,LGTM. I don't like `set` repetition in `if`/`else` either. Not least because it's worse for downstreams.,2025-09-04T07:11:45Z,156789
3183392052,arsenm,"I kind of would expect ""LateLoopOptimizations"" to not be called in the -O0 pipeline setup, rather than every target needing to make all of these optional points no-ops ",2025-09-04T04:41:22Z,156798
3183740476,wangpc-pp,,2025-09-04T07:01:46Z,156798
3186093191,mshockwave,LGTM,2025-09-04T16:15:47Z,156798
3183735345,philnik777,Thanks!,2025-09-04T07:00:10Z,156785
3183410138,fmayer,,2025-09-04T04:52:20Z,156784
3183548413,vitalybuka,"If it's with LLVM_OPTIMIZED_TABLEGEN only, then LGTM

We still want to be able to sanitize TABLEGEN as well",2025-09-04T05:54:26Z,156784
3186692172,teresajohnson,,2025-09-04T18:45:50Z,156783
3184018549,jeanPerier,"LGTM, thanks.

I am thinking we should have a document to describe the FIR pipeline order and list the constraints so that we do not forget about them (not asking you to create it here).",2025-09-04T08:25:27Z,156780
3185136606,tblah,LGTM too,2025-09-04T12:57:32Z,156780
3184830765,dtcxzyw,,2025-09-04T12:00:32Z,156779
3184898628,RKSimon,,2025-09-04T12:10:01Z,156779
3196066560,mikaelholmen,,2025-09-08T11:15:32Z,156779
3196142474,RKSimon,,2025-09-08T11:39:22Z,156779
3183219003,arsenm,,2025-09-04T02:47:05Z,156778
3183793268,frasercrmck,"Nice find, thanks.

It might mean it's harder to move away from using LLVM tools (like `llvm-link`) and towards something more like the other runtimes libraries do (using clang), though. I don't know if that's on the roadmap or not.",2025-09-04T07:16:37Z,156778
3182943206,zhyty,Thanks for reverting! @zw3917 and I will have to revisit the test to try to catch the possible race condition.,2025-09-04T00:18:10Z,156777
3184580847,DavidSpickett,"llvm.org having issues at the moment so I can't read the guidance but sure why not, if that's the format it wants.

Wonder about multiple sentence messages though.",2025-09-04T10:57:08Z,156774
3186046534,JDevlieghere,,2025-09-04T16:03:11Z,156774
3187541822,medismailben,LGTM!,2025-09-04T23:33:17Z,156774
3182894881,medismailben,Awesome! LGTM!,2025-09-03T23:34:45Z,156771
3183763976,xlauko,lgtm,2025-09-04T07:08:59Z,156770
3184123703,mmha,,2025-09-04T08:56:17Z,156770
3182716498,shiltian,,2025-09-03T22:26:14Z,156765
3182813211,s-barannikov,,2025-09-03T22:55:20Z,156769
3182850254,topperc,,2025-09-03T23:13:05Z,156769
3182847686,preames,,2025-09-03T23:21:04Z,156769
3182884836,topperc,,2025-09-03T23:25:50Z,156769
3182888607,topperc,,2025-09-03T23:28:55Z,156769
3182909042,preames,,2025-09-03T23:47:27Z,156769
3182914911,topperc,,2025-09-03T23:52:57Z,156769
3182933480,topperc,,2025-09-04T00:09:22Z,156769
3183442408,pfusik,LGTM,2025-09-04T05:04:34Z,156769
3183932427,akroviakov,"Basically, we say that llvm dialect's `nontemporal` and `volatile` are not enough to cover our load/store caching options, so at `***-to-xevm` we have inject a custom attribute (which is the same as we have for xevm block ops) to llvm's load/store? Looks fine to me.",2025-09-04T08:09:56Z,156768
3190027641,silee2,,2025-09-05T16:33:20Z,156768
3190028173,silee2,,2025-09-05T16:33:32Z,156768
3190036382,silee2,,2025-09-05T16:36:18Z,156768
3190063385,akroviakov,,2025-09-05T16:40:35Z,156768
3197709359,Jianhui-Li,LGTM,2025-09-08T18:41:07Z,156768
3189958136,JDevlieghere,"Pavel may be OOO. His opinion should take precedence over mine, but in his absence this LGTM. ",2025-09-05T16:07:09Z,156764
3182603724,charithaintc,sorry about the delay. ,2025-09-03T21:37:35Z,156761
3182669084,alanzhao1,,2025-09-03T22:06:19Z,156763
3182777835,EugeneZelenko,,2025-09-03T22:43:44Z,156763
3182890301,EugeneZelenko,,2025-09-03T23:30:54Z,156763
3182914201,brenfwd,,2025-09-03T23:52:18Z,156763
3183744653,carlosgalvezp,,2025-09-04T07:03:15Z,156763
3183748197,carlosgalvezp,,2025-09-04T07:04:37Z,156763
3185229443,HerrCai0907,,2025-09-04T13:14:55Z,156763
3185238164,HerrCai0907,,2025-09-04T13:17:04Z,156763
3190272300,brenfwd,,2025-09-05T17:34:46Z,156763
3190272680,brenfwd,,2025-09-05T17:34:56Z,156763
3190272914,brenfwd,,2025-09-05T17:35:02Z,156763
3190283464,EugeneZelenko,,2025-09-05T17:39:54Z,156763
3190304225,vbvictor,,2025-09-05T18:01:22Z,156763
3190730025,brenfwd,,2025-09-05T20:37:48Z,156763
3190734282,brenfwd,,2025-09-05T20:39:54Z,156763
3190754259,brenfwd,,2025-09-05T20:48:54Z,156763
3190758260,brenfwd,,2025-09-05T20:50:56Z,156763
3190758697,brenfwd,,2025-09-05T20:51:08Z,156763
3190758888,brenfwd,,2025-09-05T20:51:15Z,156763
3191937059,vbvictor,,2025-09-06T09:24:52Z,156763
3191938087,vbvictor,,2025-09-06T09:25:40Z,156763
3191941038,vbvictor,,2025-09-06T09:28:46Z,156763
3191944765,vbvictor,,2025-09-06T09:32:10Z,156763
3202536477,brenfwd,,2025-09-09T17:11:57Z,156763
3202593614,EugeneZelenko,,2025-09-09T17:27:11Z,156763
3202801185,vbvictor,"LGTM, minus open question with `portability`, but it doesn't block for me",2025-09-09T18:34:37Z,156763
3203205620,brenfwd,,2025-09-09T20:36:16Z,156763
3182664502,s-barannikov,,2025-09-03T22:03:50Z,156759
3182665793,s-barannikov,,2025-09-03T22:04:41Z,156759
3182770765,jurahul,,2025-09-03T22:40:44Z,156759
3182659024,efriedma-quic,LGTM,2025-09-03T22:01:24Z,156758
3184603845,mmha,"LGTM. Can you add a couple more test cases?

```c++
struct WithBraceInit {
  int i{};
  WithBraceInit() = default;
  WithBraceInit(int);
};

WithBraceInit:WithBraceInit(int) : WithBraceInit() {}

int main() {
  // Destinations are zeroed
  static DelegatingWithZeroing dwz(123);
  static WithBraceInit wbi(456);
}
```",2025-09-04T11:00:22Z,156757
3189826067,farzonl,,2025-09-05T15:28:28Z,156754
3189828753,farzonl,,2025-09-05T15:29:23Z,156754
3202331806,joaosaffran,,2025-09-09T16:09:46Z,156754
3202370411,joaosaffran,"LGTM, small nit",2025-09-09T16:20:46Z,156754
3202429270,inbelic,,2025-09-09T16:38:32Z,156754
3183122568,koachan,,2025-09-04T01:37:36Z,156751
3190587192,hekota,You should probably remove the XFAIL from clang/test/CodeGenHLSL/BasicFeatures/InitLists.hls as part of this change.,2025-09-05T19:43:38Z,156750
3197976640,hekota,LGTM!,2025-09-08T20:09:07Z,156750
3182712771,s-barannikov,"Which clang-format version did you use? Last time I tried it only made formatting worse.
I'm impressed with the current result.",2025-09-03T22:25:28Z,156749
3182738648,lei137,,2025-09-03T22:33:49Z,156749
3182776230,s-barannikov,,2025-09-03T22:42:09Z,156749
3182833574,lei137,,2025-09-03T23:03:50Z,156749
3182859279,s-barannikov,,2025-09-03T23:17:53Z,156749
3185585133,lei137,,2025-09-04T14:19:03Z,156749
3185106939,tblah,Thanks,2025-09-04T12:51:49Z,156746
3183213448,arsenm,,2025-09-04T02:42:49Z,156740
3185179916,mgorny,"I can confirm that this fixes the test. Thanks!

Do you think we could backport it to 21.x? It's not a big deal but would get a clean pass there.",2025-09-04T13:05:29Z,156740
3182450981,boomanaiden154,LGTM. Thanks for the fix!,2025-09-03T20:56:01Z,156742
3182639337,arichardson,Thanks!,2025-09-03T21:50:04Z,156742
3183721335,philnik777,This is really nice!,2025-09-04T06:55:39Z,156737
3182473102,ZequanWu,LGTM.,2025-09-03T21:00:19Z,156736
3182033892,overmighty,,2025-09-03T18:59:12Z,156733
3182612079,s-barannikov,,2025-09-03T21:39:04Z,156734
3182623195,jurahul,,2025-09-03T21:41:36Z,156734
3182626362,jurahul,,2025-09-03T21:43:11Z,156734
3182638541,jurahul,,2025-09-03T21:49:37Z,156734
3182640329,s-barannikov,,2025-09-03T21:50:36Z,156734
3182651847,s-barannikov,,2025-09-03T22:00:45Z,156734
3182665650,jurahul,,2025-09-03T22:04:35Z,156734
3182667404,s-barannikov,,2025-09-03T22:05:37Z,156734
3182670190,jurahul,,2025-09-03T22:07:00Z,156734
3182688056,s-barannikov,,2025-09-03T22:16:11Z,156734
3182706826,jurahul,,2025-09-03T22:23:19Z,156734
3182000551,boomanaiden154,,2025-09-03T18:50:04Z,156729
3182089984,cmtice,,2025-09-03T19:13:18Z,156729
3182463012,boomanaiden154,,2025-09-03T20:58:04Z,156729
3182665614,cmtice,,2025-09-03T22:04:34Z,156729
3182801970,JDevlieghere,LGTM,2025-09-03T22:48:14Z,156729
3182854380,boomanaiden154,,2025-09-03T23:15:14Z,156729
3182678389,preames,,2025-09-03T22:11:36Z,156730
3185993727,fhahn,,2025-09-04T15:53:40Z,156730
3186310016,preames,LGTM,2025-09-04T17:18:11Z,156730
3186312416,preames,,2025-09-04T17:18:43Z,156730
3182602816,RKSimon,LGTM - cheers ,2025-09-03T21:37:21Z,156722
3183573137,grypp,"Thanks for adding the document. I think this PR significantly improves our documentation. I’ve left a few comments, and it’s great to see you taking the initiative on this.",2025-09-04T06:19:24Z,156726
3186232695,smada3,,2025-09-04T18:32:37Z,156726
3186690377,durga4github,,2025-09-04T18:45:25Z,156726
3186699392,durga4github,,2025-09-04T18:47:03Z,156726
3186724795,durga4github,,2025-09-04T18:53:15Z,156726
3186734886,durga4github,,2025-09-04T18:55:48Z,156726
3186745565,durga4github,,2025-09-04T18:58:18Z,156726
3186753389,durga4github,,2025-09-04T19:00:07Z,156726
3187030546,smada3,,2025-09-04T20:13:36Z,156726
3188405694,durga4github,,2025-09-05T08:05:47Z,156726
3188613487,durga4github,LGTM (we can move the type changes to a separate PR),2025-09-05T09:18:10Z,156726
3188614947,grypp,,2025-09-05T09:18:43Z,156726
3181805989,adrian-prantl,,2025-09-03T17:49:54Z,156721
3183262196,lukel97,,2025-09-04T03:16:16Z,156719
3183458912,topperc,,2025-09-04T05:14:09Z,156719
3181810590,razvanlupusoru,Thank you!,2025-09-03T17:51:35Z,156716
3183851815,c-rhodes,"Left some comments & suggestions but mostly minor, otherwise LGTM cheers!",2025-09-04T09:19:11Z,156718
3184304836,paulwalker-arm,,2025-09-04T09:35:54Z,156718
3184404359,c-rhodes,,2025-09-04T10:06:54Z,156718
3186107354,paulwalker-arm,,2025-09-04T17:01:37Z,156718
3189329685,paulwalker-arm,,2025-09-05T13:13:27Z,156718
3182344183,JDevlieghere,,2025-09-03T20:30:45Z,156712
3181739687,makslevental,Thanks for catching/fixing this - maybe next I'll ping you about possible Windows tests lol,2025-09-03T17:27:18Z,156711
3181445335,RKSimon,LGTM with one trivial,2025-09-03T16:42:16Z,156710
3181578465,RKSimon,,2025-09-03T17:09:06Z,156714
3186682837,Arghnews,,2025-09-04T18:43:40Z,156714
3187956165,Arghnews,,2025-09-05T04:39:13Z,156714
3188638939,RKSimon,,2025-09-05T09:38:56Z,156714
3188788909,XChy,Please split the patch into two commits. The first commit is to add the test cases. The second adds the code change and testcase diff.,2025-09-05T10:31:34Z,156714
3189563522,Arghnews,,2025-09-05T14:15:42Z,156714
3189564908,Arghnews,,2025-09-05T14:16:07Z,156714
3189568643,Arghnews,,2025-09-05T14:17:18Z,156714
3189579563,Arghnews,,2025-09-05T14:20:43Z,156714
3189638101,RKSimon,,2025-09-05T14:36:25Z,156714
3189871798,Arghnews,,2025-09-05T15:43:00Z,156714
3190114355,XChy,"LGTM, cheers. Please wait for @RKSimon to confirm.
It would be better if the unoptimized testcases are updated in the first commit. For example, https://github.com/llvm/llvm-project/pull/156847/commits/f4deffa2fb70968adcce213c0a9f16f11d00b756. The diff makes review easier. Just a reminder for the follow-up patches.",2025-09-05T16:47:51Z,156714
3196457005,RKSimon,Please can you add a couple of tests for odd types that satisfy the knownbits (<1 x i64> and <6 x i64> might be good examples),2025-09-08T13:05:54Z,156714
3200146555,RKSimon,A few minors but it looks like its almost there,2025-09-09T08:50:29Z,156714
3204899073,RKSimon,LGTM - cheers,2025-09-10T07:49:41Z,156714
3184698696,jprotze,,2025-09-04T11:22:44Z,156708
3183045199,arsenm,,2025-09-04T01:07:38Z,156707
3181407715,lntue,,2025-09-03T16:24:03Z,156705
3181434193,abhinavgaba,"Thanks for uploading the tests, Julian!",2025-09-03T16:54:29Z,156703
3186087755,jtb20,,2025-09-04T16:14:22Z,156703
3186090788,jtb20,,2025-09-04T16:15:10Z,156703
3186215466,abhinavgaba,Thanks for the changes!,2025-09-04T17:11:15Z,156703
3189113054,jtb20,,2025-09-05T12:08:19Z,156703
3190268102,abhinavgaba,,2025-09-05T17:33:12Z,156703
3182124370,rampitec,,2025-09-03T19:26:00Z,156696
3184997626,tblah,LG,2025-09-04T12:29:17Z,156701
3185083675,tblah,LGTM,2025-09-04T12:46:44Z,156702
3182119216,rampitec,,2025-09-03T19:24:14Z,156695
3182121293,rampitec,"LGTM, but it would be nice to have a codegen test with direct use of AGPR.",2025-09-03T19:24:57Z,156695
3183037562,arsenm,,2025-09-04T01:05:20Z,156695
3181203398,kparzysz,,2025-09-03T15:27:05Z,156693
3184946308,tblah,LGTM,2025-09-04T12:21:12Z,156693
3185295455,kparzysz,,2025-09-04T13:27:01Z,156693
3181193627,lntue,,2025-09-03T15:24:18Z,156691
3184308725,davemgreen,,2025-09-04T09:36:58Z,156690
3181147249,nikic,"LGTM

This is something of a footgun, possibly we should make collectOffset() reject these...",2025-09-03T15:13:01Z,156688
3181169222,fhahn,"LGTM, thanks",2025-09-03T15:18:20Z,156688
3181120005,nikic,,2025-09-03T15:06:32Z,156687
3181215894,dtcxzyw,LGTM.,2025-09-03T15:30:38Z,156687
3181923332,fhahn,"LGTM, thanks",2025-09-03T18:21:53Z,156687
3184087545,jh7370,"Thanks for the PR! In principle, I think this makes sense. The majority of our hex printing is via `Twine::utohexstr`, which is always lower-case. I think the missing lower case argument in the calls to `llvm::utohexstr` are likely just oversights and should be updated.

There are several other places in this file that use `llvm::utohexstr`, some of which don't use the lower-case argument. Please could you update them all (and any tests that fail as a result of course). I note that in some cases (e.g. e_version), it's unlikely to matter due to the range of values that could be printed, but it's better to be consistent.",2025-09-04T08:45:46Z,156683
3186204114,MaskRay,"llvm::utohexstr defaults to upper-case while Twine::utohexstr defaults to lower-case. I think lower-case is more popular and llvm-readelf always uses lower-case.

Using more lower-case for llvm-readobj makes sense. Unfortunately, changing some fields (relocation offsets and addends) for llvm-readobj might cause a lot of changes.",2025-09-04T16:50:36Z,156683
3186207073,MaskRay,,2025-09-04T16:51:42Z,156683
3188369236,jh7370,"Please update the PR title and description given the format change.

It may be worth updating the release notes to mention this, due to the potential for it to break people's automated scripts.",2025-09-05T07:54:11Z,156683
3188936283,jh7370,,2025-09-05T11:07:46Z,156683
3188980530,kaadam,,2025-09-05T11:23:57Z,156683
3189048268,jh7370,"I'd suggest some slight grammar changes to the PR description:

> Previously, llvm-readelf dumped hex format values in different ways. Some of them were printed in upper-case, while the others were in lower-case format. This change switches the format to lower-case in all cases.
>
> Why is this useful? As an example, FileCheck comparisons are case-sensitive by default. This change means it's easier to compare those values, because they have the same format.

I've dropped the ""where it is possible"" bit. There aren't any within the llvm-readelf code that aren't possible, right?

You can also drop the ""the corresponding tests have been updated as well"" since that's normal procedure.

With those tweaks and the one nit in the release note, LGTM. Do you need assistance merging, or do you have commit access already?",2025-09-05T11:47:22Z,156683
3189221004,kaadam,,2025-09-05T12:43:01Z,156683
3181207659,adrian-prantl,,2025-09-03T15:28:18Z,156681
3181317233,labath,,2025-09-03T15:57:39Z,156681
3184351333,steakhal,"LGTM. I skipped the tests though.
Let a couple of remarks along the way. Nothing major.",2025-09-04T09:53:15Z,156682
3184697334,NagyDonat,,2025-09-04T11:22:23Z,156682
3184698951,NagyDonat,,2025-09-04T11:22:47Z,156682
3188507606,steakhal,,2025-09-05T08:41:47Z,156682
3181734699,RKSimon,LGTM - cheers,2025-09-03T17:25:58Z,156678
3184447514,lukel97,LGTM,2025-09-04T10:21:06Z,156676
3184462454,fhahn,"LGTM, thanks",2025-09-04T10:26:03Z,156676
3184332510,steakhal,,2025-09-04T09:44:33Z,156677
3180957337,jplehr,"lgtm
I think this is the right thing to do.",2025-09-03T14:29:47Z,156675
3189228319,ldionne,,2025-09-05T12:45:35Z,156672
3180930343,NagyDonat,"The patch LGTM, it is always good to see a fix for a crash.

I added two very minor stylistic suggestions in inline comments, but I think the change is acceptable even without those changes.",2025-09-03T14:26:37Z,156668
3180951028,NagyDonat,,2025-09-03T14:28:12Z,156668
3181021090,balazs-benics-sonarsource,,2025-09-03T14:42:14Z,156668
3181021928,balazs-benics-sonarsource,,2025-09-03T14:42:26Z,156668
3181339153,NagyDonat,Thanks for the updates!,2025-09-03T16:03:09Z,156668
3180581458,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR fixes enum attribute parsing in MLIR to handle special characters and multi-word identifiers by replacing `parseKeyword` with `parseKeywordOrString`. This change allows enum values to use symbols like ""+"" and strings with separators like ""dash-separated-sentence"" instead of being limited to valid identifiers, aligning with how enums are handled by the FieldParser.

Key changes:
- Updated enum attribute parsing from `parseKeyword` to `parseKeywordOrString`
- Added test coverage for enum values with special characters and multi-word identifiers
- Enhanced existing test enums to include these new capabilities

### Reviewed Changes

Copilot reviewed 5 out of 5 changed files in this pull request and generated no comments.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| mlir/include/mlir/IR/EnumAttr.td | Updated parsing logic for IntEnumAttr and BitEnumAttr to use parseKeywordOrString |
| mlir/test/mlir-tblgen/attr-or-type-format.td | Added new test enum with special character cases and updated existing enum |
| mlir/test/mlir-tblgen/attr-or-type-format-roundtrip.mlir | Added roundtrip tests for special character enum values |
| mlir/test/lib/Dialect/Test/TestEnumDefs.td | Extended TestSimpleEnum with special character cases |
| mlir/test/IR/array-of-attr.mlir | Updated test to include special character enum value in array |
</details>




",2025-09-03T13:03:55Z,156662
3180655394,zero9178,,2025-09-03T13:22:01Z,156662
3181206490,adrian-prantl,,2025-09-03T15:27:58Z,156664
3181323745,dwblaikie,,2025-09-03T15:58:59Z,156664
3181507806,Michael137,,2025-09-03T16:51:44Z,156664
3180763289,phoebewang,LGTM.,2025-09-03T13:48:31Z,156663
3181277517,vzakhari,,2025-09-03T15:47:32Z,156661
3188672231,jeanPerier,,2025-09-05T09:38:53Z,156661
3191329084,vzakhari,"Thank you for the update, Jean! It looks good to me.",2025-09-06T02:57:50Z,156661
3181342747,s-barannikov,LGTM,2025-09-03T16:04:17Z,156657
3182111741,rampitec,,2025-09-03T19:21:14Z,156655
3182040512,rampitec,LGTM,2025-09-03T19:00:42Z,156653
3191834096,overmighty,,2025-09-06T08:36:13Z,156654
3180401453,davemgreen,"Thanks for doing this.  It looks like it might need a format, and was there one of the tests this should update? llvm/test/CodeGen/ARM/fpcmp-opt.ll maybe? LGTM otherwise.",2025-09-03T12:27:08Z,156647
3180402013,arsenm,,2025-09-03T12:27:19Z,156647
3184731218,arsenm,,2025-09-04T11:31:24Z,156647
3184783514,davemgreen,Thanks. LGTM,2025-09-04T11:44:55Z,156647
3180168376,frederik-h,"There is a second use of ""isDFPImm"" in this file. Do you want to remove that one as well while you are at it?",2025-09-03T11:21:29Z,156644
3180245146,arsenm,,2025-09-03T11:43:23Z,156644
3180297749,jayfoad,LGTM,2025-09-03T11:59:55Z,156644
3180300399,frederik-h,,2025-09-03T12:00:47Z,156644
3181037858,felipepiovezan,"I think this is fine, but that FIXME is curious. We don't support running in non-C++ modes, so switching on `frame_lang` would only get us a more precise C++ standard version, but do we use that?",2025-09-03T14:46:28Z,156642
3180096686,wangpc-pp,LGTM.,2025-09-03T10:54:06Z,156639
3180934121,preames,,2025-09-03T14:31:02Z,156639
3181743457,lukel97,,2025-09-03T17:28:03Z,156639
3181758897,lukel97,,2025-09-03T17:33:06Z,156639
3181759493,lukel97,,2025-09-03T17:33:19Z,156639
3182054086,mshockwave,,2025-09-03T19:05:13Z,156639
3182737437,preames,,2025-09-03T22:33:34Z,156639
3186487722,mshockwave,LGTM,2025-09-04T18:02:43Z,156639
3180227434,Keenuts,,2025-09-03T11:37:25Z,156637
3196301612,MrSidims,,2025-09-08T12:29:10Z,156637
3181363360,sdesmalen-arm,"Few minor nits, but otherwise LGTM",2025-09-03T16:17:37Z,156638
3183094428,arsenm,global isel version? ,2025-09-04T01:23:15Z,156638
3179956727,jayfoad,,2025-09-03T10:15:03Z,156636
3179988871,arsenm,,2025-09-03T10:23:02Z,156636
3180009548,arsenm,LGTM but can probably drop the COPY_TO_REGCLASSes ,2025-09-03T10:27:57Z,156636
3180025429,jayfoad,,2025-09-03T10:32:49Z,156636
3180036364,jayfoad,,2025-09-03T10:35:32Z,156641
3180422289,davemgreen,LGTM thanks,2025-09-03T12:31:32Z,156631
3181224823,shiltian,thanks for the cleanup!,2025-09-03T15:33:17Z,156630
3181255826,Sisyph,,2025-09-03T15:41:42Z,156621
3179992445,DavidSpickett,"Thanks for taking the time to contribute.

A couple of comments, but everything else makes sense.",2025-09-03T10:27:48Z,156620
3180222471,lknknm,,2025-09-03T11:35:39Z,156620
3180226546,lknknm,,2025-09-03T11:37:06Z,156620
3180380148,DavidSpickett,"LGTM.

You need to adjust your GitHub email settings before I can merge this. See https://llvm.org/docs/DeveloperPolicy.html#email-addresses.",2025-09-03T12:22:09Z,156620
3179695441,jplehr,,2025-09-03T09:05:52Z,156626
3180299950,jhuber6,,2025-09-03T12:00:38Z,156626
3179663408,gysit,"Shouldn't the debug info import require a change as well?
https://github.com/llvm/llvm-project/blob/349523e26b80155b200e52e628006855371b6a93/mlir/lib/Target/LLVMIR/DebugImporter.cpp#L87",2025-09-03T08:58:07Z,156624
3179975635,abidh,Flang changes look good to me. Thanks.,2025-09-03T10:20:46Z,156624
3180567805,gysit,"Thanks!

LGTM",2025-09-03T13:01:29Z,156624
3179524150,nikic,,2025-09-03T08:27:38Z,156617
3181718386,jyknight,Thanks!,2025-09-03T17:20:33Z,156617
3182484111,efriedma-quic,,2025-09-03T21:02:35Z,156617
3182921922,rnk,Let's do it. :),2025-09-03T23:59:28Z,156617
3185942151,Kewen12,,2025-09-04T15:43:18Z,156627
3179610980,wangpc-pp,,2025-09-03T08:47:21Z,156618
3179852463,lukel97,,2025-09-03T09:46:09Z,156618
3179863729,wangpc-pp,LGTM.,2025-09-03T09:49:28Z,156618
3180921966,preames,LGTM,2025-09-03T14:21:30Z,156618
3181374188,topperc,,2025-09-03T16:13:39Z,156618
3181684077,lukel97,,2025-09-03T17:13:40Z,156618
3182743060,preames,,2025-09-03T22:35:08Z,156618
3182781486,topperc,LGTM,2025-09-03T22:43:23Z,156618
3181326554,drodriguez,,2025-09-03T15:59:43Z,156608
3179903487,durga4github,,2025-09-03T10:01:27Z,156613
3179904399,durga4github,,2025-09-03T10:01:44Z,156613
3179967100,masahi,,2025-09-03T10:18:26Z,156613
3180170671,durga4github,,2025-09-03T11:18:02Z,156613
3180271026,masahi,,2025-09-03T11:51:10Z,156613
3180276068,durga4github,,2025-09-03T11:52:47Z,156613
3179314521,philnik777,,2025-09-03T07:31:51Z,156609
3180129305,frederick-vs-ja,,2025-09-03T11:04:14Z,156609
3185474851,erichkeane,"Not really sure I get the motivation/what is happening here, but I don't know if there is a better person to review?  Perhaps @efriedma-quic can give it a quick double-check as well?",2025-09-04T13:58:53Z,156607
3186207309,efriedma-quic,"I've reviewed other changes here recently (#152866).  The code is playing some weird games with memory allocation, using an std::vector as an arena.  Probably there's some better way to write this.  Strictly speaking, it's undefined behavior to memmove a polymorphic class.  But this is how it works for now.  Maybe worth leaving a comment explaining this.

Otherwise LGTM",2025-09-04T16:51:47Z,156607
3181086978,Moxinilian,"Excellent! This looks much better indeed, thanks. I wish this was documented somewhere, I swear I did my best with the original implementation :laughing: ",2025-09-03T15:36:32Z,156606
3179506784,davemgreen,"Nice, I'm surprised this is the first use of SDPatternMatch.

Do we need the new combine / node, or could this be done with a tablegen pattern directly?",2025-09-03T08:22:20Z,156615
3180461386,david-arm,,2025-09-03T12:48:20Z,156615
3183869169,hazzlim,,2025-09-04T07:41:22Z,156615
3184427025,davemgreen,Thank you. LGTM,2025-09-04T10:14:05Z,156615
3179210585,arsenm,,2025-09-03T07:00:49Z,156601
3179193765,arsenm,,2025-09-03T06:55:39Z,156600
3181030519,Sisyph,"It looks like the right thing to do.

Is it true that handling for the 64bit literals is already correct in codegen, so this patch would not change emitted code?

It is a little suspicious that all the affected test cases are vopc. Perhaps there is some additional handling for vop1/2 that is not present for vopc?",2025-09-03T14:45:56Z,156602
3181107002,jayfoad,,2025-09-03T15:03:06Z,156602
3181115124,jayfoad,,2025-09-03T15:05:17Z,156602
3181238696,Sisyph,Thanks for the clarifications. LGTM,2025-09-03T15:36:55Z,156602
3181987265,rampitec,,2025-09-03T18:45:24Z,156602
3181993494,rampitec,"LGTM, but I'd probably check Desc size directly instead of flags.",2025-09-03T18:47:09Z,156602
3183831790,jayfoad,,2025-09-04T07:29:17Z,156602
3183996088,rampitec,,2025-09-04T08:18:26Z,156602
3179192815,arsenm,,2025-09-03T06:55:18Z,156599
3181022894,kuhar,,2025-09-03T14:42:40Z,156598
3179329146,rampitec,,2025-09-03T07:34:34Z,156595
3179802419,nikic,,2025-09-03T09:31:55Z,156597
3179868421,XChy,,2025-09-03T09:50:56Z,156597
3180089227,RKSimon,,2025-09-03T10:52:11Z,156597
3181511333,dtcxzyw,,2025-09-03T16:52:17Z,156597
3181768031,XChy,,2025-09-03T17:36:21Z,156597
3195872913,nikic,LGTM,2025-09-08T10:11:09Z,156597
3179491285,tgymnich,,2025-09-03T08:18:19Z,156596
3183781209,frasercrmck,,2025-09-04T07:12:36Z,156590
3182839274,preames,LGTM,2025-09-03T23:07:07Z,156586
3178962627,vbvictor,,2025-09-03T05:07:48Z,156584
3180108881,carlosgalvezp,"LGTM, I wonder why the `bB` was there in the first place. Binary numbers?",2025-09-03T10:57:49Z,156584
3182078303,rampitec,,2025-09-03T19:10:48Z,156580
3182220037,Sisyph,,2025-09-03T19:57:45Z,156580
3182943395,arsenm,,2025-09-04T00:18:17Z,156580
3183451048,arsenm,,2025-09-04T05:09:04Z,156580
3183458378,arsenm,,2025-09-04T05:13:49Z,156580
3185351338,Sisyph,,2025-09-04T13:35:53Z,156580
3185441295,Sisyph,,2025-09-04T13:52:19Z,156580
3197912426,Sisyph,,2025-09-08T19:47:30Z,156580
3182107808,rampitec,LGTM. I am surprised it did not change any tests at all.,2025-09-03T19:19:39Z,156581
3179095871,wangpc-pp,LGTM. Nice work!,2025-09-03T06:19:29Z,156566
3181984222,Icohedron,LGTM,2025-09-03T18:44:10Z,156570
3182041775,spall,looks correct to me,2025-09-03T19:01:01Z,156570
3182451163,efriedma-quic,Is there some reason clang can't just generate a call to `llvm.is.fpclass`?,2025-09-03T20:56:03Z,156570
3178789353,lenary,,2025-09-03T03:01:50Z,156562
3181120885,klausler,,2025-09-03T15:07:03Z,156563
3181163902,eugeneepshteyn,,2025-09-03T15:17:04Z,156563
3181176512,klausler,,2025-09-03T15:19:55Z,156563
3182139384,eugeneepshteyn,,2025-09-03T19:31:08Z,156563
3184965684,RKSimon,LGTM - cheers,2025-09-04T12:22:49Z,156567
3187435162,aankit-ca,,2025-09-04T22:23:22Z,156561
3190251512,aankit-ca,Thank you @arsenm ,2025-09-05T17:26:11Z,156561
3178549402,vzakhari,,2025-09-03T00:21:02Z,156558
3179924150,tblah,Really interesting stuff. Only minor comments.,2025-09-03T11:20:30Z,156558
3180601631,jeanPerier,Thanks Slava!,2025-09-03T15:19:37Z,156558
3181790666,vzakhari,,2025-09-03T17:44:35Z,156558
3181792370,vzakhari,,2025-09-03T17:45:16Z,156558
3181793651,vzakhari,,2025-09-03T17:45:37Z,156558
3185124251,tblah,Thanks for the update. LGTM but wait for Jean's approval as well.,2025-09-04T12:55:10Z,156558
3185613108,jeanPerier,"LGTM, thanks",2025-09-04T14:24:00Z,156558
3178373617,rampitec,,2025-09-02T22:43:16Z,156551
3178435938,aheejin,,2025-09-02T23:17:23Z,156553
3179597333,sunfishcode,,2025-09-03T08:43:56Z,156553
3179601140,nikic,"LGTM, thanks!",2025-09-03T08:44:53Z,156553
3178502319,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This patch fixes the handling of index bitwidth in the dynamic case of the `convert-to-llvm` pass by ensuring the nearest DataLayout is used to configure LowerToLLVMOptions and LLVMTypeConverter. This enables proper type conversion of index types based on the data layout specification.

- Updates the DynamicConvertToLLVM implementation to use DataLayout-aware LowerToLLVMOptions
- Adds test coverage for various index bitwidths (16, 32, 64) with dynamic conversion

### Reviewed Changes

Copilot reviewed 2 out of 2 changed files in this pull request and generated no comments.

| File | Description |
| ---- | ----------- |
| mlir/lib/Conversion/ConvertToLLVM/ConvertToLLVMPass.cpp | Updated to extract DataLayout and create LowerToLLVMOptions with proper index bitwidth configuration |
| mlir/test/Conversion/FuncToLLVM/func-to-llvm-datalayout.mlir | Added comprehensive test cases verifying correct index type conversion for different bitwidths |



",2025-09-02T23:46:21Z,156557
3180301824,zero9178,"It looks to me as if the same logic is required in the static driver as well. Would it make sense to run the test with both ""dynamic=true"" and false?

Approving otherwise, feel free to defer to the future if youd like :)",2025-09-03T12:01:13Z,156557
3178540548,efriedma-quic,,2025-09-03T00:15:18Z,156555
3178352354,rampitec,,2025-09-02T22:33:57Z,156548
3178377954,shiltian,,2025-09-02T22:45:52Z,156546
3178637334,frederick-vs-ja,,2025-09-03T01:14:42Z,156547
3178689079,yuxuanchen1997,,2025-09-03T01:40:05Z,156547
3179023257,philnik777,I think https://github.com/llvm/llvm-project/pull/153631#issuecomment-3189508954 is rather what we should go for.,2025-09-03T05:43:58Z,156547
3198218529,ldionne,"I'm fine with this as a workaround until we settle on the right approach in https://github.com/llvm/llvm-project/pull/153631. I think we agree that the status quo doesn't work, so let's land this and then clean it up when we agree on the long term path forward.",2025-09-08T21:17:33Z,156547
3198908602,nico,,2025-09-09T03:28:11Z,156547
3198919264,jhuber6,,2025-09-09T03:29:32Z,156547
3201606849,nico,,2025-09-09T13:28:13Z,156547
3178302856,erichkeane,"I think this makes a lot of sense, thanks!",2025-09-02T22:18:46Z,156545
3178394564,razvanlupusoru,,2025-09-02T22:58:39Z,156545
3178397002,razvanlupusoru,,2025-09-02T22:59:40Z,156545
3178571125,erichkeane,,2025-09-03T00:39:22Z,156545
3178571759,erichkeane,,2025-09-03T00:39:58Z,156545
3181608177,erichkeane,,2025-09-03T17:04:11Z,156545
3181625072,clementval,,2025-09-03T17:06:18Z,156545
3181627765,clementval,,2025-09-03T17:06:36Z,156545
3181751634,razvanlupusoru,,2025-09-03T17:30:27Z,156545
3181804825,clementval,,2025-09-03T17:49:27Z,156545
3181812988,razvanlupusoru,,2025-09-03T17:52:29Z,156545
3178308893,pcc,,2025-09-02T22:18:59Z,156543
3178352005,nathanchance,,2025-09-02T22:33:45Z,156543
3197417525,fmayer,,2025-09-08T17:16:27Z,156543
3197678610,pcc,,2025-09-08T18:31:51Z,156543
3178973483,MaskRay,,2025-09-03T05:14:54Z,156538
3179017480,petrhosek,,2025-09-03T05:40:42Z,156538
3181208211,cmtice,,2025-09-03T15:28:26Z,156538
3178312352,vzakhari,"Thank you, Valentin!",2025-09-02T22:20:55Z,156542
3189221679,tblah,Yes this would be useful for me thank you. If I remember right I had to do these manually. Are there no lit tests for `generate-test-checks.py`?,2025-09-05T12:43:15Z,156541
3195749301,tblah,Thanks for this,2025-09-08T09:38:02Z,156541
3181420551,MaskRay,"LGTM.

It's good to get rid of `$(($(cat %t.size.txt) + 5))`",2025-09-03T16:28:26Z,156537
3179082357,petrhosek,,2025-09-03T06:13:13Z,156533
3181243422,cmtice,,2025-09-03T15:38:05Z,156533
3181409196,MaskRay,,2025-09-03T16:24:32Z,156533
3178145135,andykaylor,,2025-09-02T21:30:21Z,156535
3178202254,erichkeane,,2025-09-02T21:35:52Z,156535
3178208136,erichkeane,,2025-09-02T21:38:37Z,156535
3178223814,erichkeane,,2025-09-02T21:46:47Z,156535
3178255008,andykaylor,,2025-09-02T22:01:01Z,156535
3178263270,erichkeane,,2025-09-02T22:04:20Z,156535
3178271123,andykaylor,,2025-09-02T22:06:16Z,156535
3178372588,erichkeane,,2025-09-02T22:42:27Z,156535
3178491526,andykaylor,lgtm,2025-09-02T23:39:53Z,156535
3178082622,PiJoules,,2025-09-02T20:48:24Z,156532
3178078143,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR fixes a typo in a test file by removing an incorrect `ptxas-ptr32` condition from a ptxas invocation command. The change ensures the test runs properly without the erroneous pointer size constraint.

- Removes the incorrect `&& ptxas-ptr32` condition from line 3 of the test file



",2025-09-02T20:46:41Z,156531
3178191234,akshayrdeodhar,LGTM!,2025-09-02T21:31:11Z,156531
3178204780,Artem-B,,2025-09-02T21:36:42Z,156531
3178107846,Nerixyz,"LGTM, thank you for noticing!

The type-name map uses the same map type and [doesn't specify a comparator either](https://github.com/llvm/llvm-project/blob/3c7bf3b3c3a4871d13f7b7d5d60bbf190eaf8f3a/lldb/source/Plugins/SymbolFile/NativePDB/SymbolFileNativePDB.cpp#L2429). That could also use one to make `FindType` deterministic, I suppose.",2025-09-02T20:57:50Z,156530
3184852845,jyknight,"Given that the new change produces clearly incorrect behavior currently, I'm gonna approve+merge this.",2025-09-04T12:00:02Z,156528
3178088547,shiltian,,2025-09-02T20:50:55Z,156527
3178101923,cmtice,,2025-09-02T20:55:42Z,156526
3181389688,carlocab,,2025-09-03T16:18:19Z,156526
3178047397,alexey-bataev,,2025-09-02T20:39:01Z,156525
3178067653,ro-i,,2025-09-02T20:43:50Z,156525
3178079118,alexey-bataev,,2025-09-02T20:47:02Z,156525
3178138045,shafik,Thank you for the quick fix!,2025-09-02T21:08:48Z,156525
3178090622,shiltian,,2025-09-02T20:51:39Z,156524
3178522849,fpetrogalli,,2025-09-03T00:04:19Z,156523
3178585038,hiraditya,I'm not actively working on it but LGTM as it is NFC.,2025-09-03T00:51:32Z,156519
3178099217,jhuber6,"Seems reasonable, guessing this is SPIR-V only? Sometimes default address spaces dependent on language cause issues when mixing IR.",2025-09-02T20:57:14Z,156520
3178705319,bcardosolopes,"This one unfortunately requires a lot of boilerplate, good job on the tests. LGTM!",2025-09-03T01:56:57Z,156521
3180047322,xlauko,"lgtm, with minor nits",2025-09-03T10:53:52Z,156521
3178116683,andykaylor,lgtm,2025-09-02T21:01:43Z,156518
3177899449,michaelrj-google,,2025-09-02T19:48:01Z,156515
3177917643,michaelrj-google,LGTM,2025-09-02T19:54:24Z,156515
3177904287,rolfmorel,LGTM.,2025-09-02T19:49:00Z,156514
3177993013,lntue,,2025-09-02T20:22:21Z,156512
3177808342,bogner,"I really wish there was an easier way to make it clear that an `update_test_checks` test is just checking that the output exactly matches the output. Might be worth commenting as such in the note that explains what this is doing.

The test can also be simplified quite a bit - I commented on some of the particular things to do that, but since I modified it myself to come up with those comments anyway I think it more or less boils down to this:
```llvm
define i32 @f(i32 %x) {
entry:
  %cmp = icmp eq i32 %x, 0
  br i1 %cmp, label %exit, label %for.body.lr.ph

for.body.lr.ph:
  %buf = call target(""dx.RawBuffer"", i32, 1, 0) @llvm.dx.resource.handlefrombinding(i32 0, i32 0, i32 4, i32 %x, ptr nonnull @Out.str)
  br label %for.body

for.body:
  %i = phi i32 [ 0, %for.body.lr.ph ], [ %inc.i, %for.body ]
  %v1 = call i32 @llvm.dx.resource.updatecounter(target(""dx.RawBuffer"", i32, 1, 0) %buf, i8 1)
  %inc.i = add nuw nsw i32 %i, 1
  %exitcond = icmp ne i32 %inc.i, %x
  br i1 %exitcond, label %for.body, label %exit

exit:
  %buf2 = call target(""dx.RawBuffer"", i32, 1, 0) @llvm.dx.resource.handlefrombinding(i32 0, i32 0, i32 4, i32 %x, ptr nonnull @Out.str)
  %v2 = call i32 @llvm.dx.resource.updatecounter(target(""dx.RawBuffer"", i32, 1, 0) %buf2, i8 1)

  ret i32 %v2
}
```",2025-09-02T19:19:39Z,156513
3177830388,bogner,Looks good to me apart from the test improvements.,2025-09-02T19:20:48Z,156513
3177832043,farzonl,,2025-09-02T19:21:32Z,156513
3177891783,bogner,,2025-09-02T19:45:11Z,156513
3178134935,hekota,LGTM with one small suggestion.,2025-09-02T21:07:54Z,156513
3178140447,farzonl,,2025-09-02T21:09:51Z,156513
3177862454,eugeneepshteyn,,2025-09-02T19:33:02Z,156509
3179602733,DavidSpickett,"How exactly is it vulnerable?

I think the mnemonic you land on would also be vulnerable to codegen changes as well. Unless you arrange for the step to never leave your inline asm blocks, then you can guarantee what it will be.

Maybe that is what you have done, it's hard to tell just by the diff.",2025-09-03T08:54:20Z,156506
3180758894,dlav-sc,,2025-09-03T13:47:24Z,156506
3180815936,DavidSpickett,,2025-09-03T13:59:18Z,156506
3180827407,DavidSpickett,"Assuming the comments are updated, this LGTM. Thanks for explaining the rationale, it does make sense to me now.

One of these days I will take inspiration from this and finally fix these sequences for AArch64.",2025-09-03T14:01:51Z,156506
3180923836,dlav-sc,,2025-09-03T14:21:51Z,156506
3181105710,DavidSpickett,,2025-09-03T15:02:44Z,156506
3177947460,cmtice,,2025-09-02T20:05:07Z,156510
3181287974,boomanaiden154,,2025-09-03T15:50:19Z,156510
3181361364,cmtice,,2025-09-03T16:09:51Z,156510
3181425306,rnk,Thanks!,2025-09-03T16:29:55Z,156510
3181572938,sbc100,,2025-09-03T17:00:26Z,156510
3181631481,boomanaiden154,,2025-09-03T17:07:05Z,156510
3181759879,sbc100,,2025-09-03T17:33:27Z,156510
3183149908,compnerd,,2025-09-04T01:58:48Z,156510
3183932853,balazs-benics-sonarsource,,2025-09-04T08:02:42Z,156507
3185012886,alejandro-alvarez-sonarsource,,2025-09-04T12:32:31Z,156507
3185015545,alejandro-alvarez-sonarsource,,2025-09-04T12:32:58Z,156507
3188557903,steakhal,I think it looks great. So my instinct was good about the prev issues ;),2025-09-05T08:59:52Z,156507
3189126777,alejandro-alvarez-sonarsource,,2025-09-05T12:12:01Z,156507
3189208273,steakhal,,2025-09-05T12:38:51Z,156507
3189273484,alejandro-alvarez-sonarsource,,2025-09-05T13:00:50Z,156507
3189362355,steakhal,,2025-09-05T13:23:09Z,156507
3197275862,hubert-reinterpretcast,LGTM!,2025-09-08T16:28:55Z,156504
3177968886,alexey-bataev,,2025-09-02T20:13:14Z,156503
3186255397,philnik777,,2025-09-04T17:06:21Z,156502
3199222606,WenleiHe,lgtm with a nit on naming. ,2025-09-09T05:04:53Z,156501
3202519541,wlei-llvm,,2025-09-09T17:08:15Z,156501
3178058136,lntue,,2025-09-02T20:41:28Z,156500
3177732771,topperc,,2025-09-02T18:49:12Z,156499
3178585456,topperc,LGTM,2025-09-03T00:51:58Z,156499
3185089541,dtcxzyw,"LGTM. As for the regression, can we fix it in CVP/SCCP?",2025-09-04T12:47:53Z,156497
3177528369,mmha,"LGTM, Thanks!

For the record, this was caused by #152870.",2025-09-02T17:34:02Z,156493
3177562258,rampitec,LGTM. Add NFC to the title though.,2025-09-02T17:47:01Z,156496
3177875648,fmayer,,2025-09-02T19:38:24Z,156491
3177876954,fmayer,,2025-09-02T19:38:49Z,156490
3177503116,eugeneepshteyn,,2025-09-02T17:25:37Z,156492
3177507274,vzakhari,"Thank you for the quick fix, Peter!",2025-09-02T17:27:14Z,156492
3179961203,paschalis-mpeis,,2025-09-03T10:16:27Z,156489
3177335059,jhuber6,,2025-09-02T16:29:41Z,156485
3177698543,rafaelauler,Thanks for fixing this,2025-09-02T18:36:37Z,156487
3179430780,paschalis-mpeis,"Thanks for the fix and for opening an issue, @boomanaiden154.

Regarding the mentions on Buildbots (in commit message but also [here](https://github.com/llvm/llvm-project/pull/156083#issuecomment-3245306758), @zmodem):

The [AArch64 BOLT Buildbot](https://lab.llvm.org/staging/#/workers/22) was indeed failing on all workers; see [#3985](https://lab.llvm.org/staging/#/builders/219/builds/3985). Since this patch, all workers are green ([#4172](https://lab.llvm.org/staging/#/builders/219/builds/4172)), except the clang multi-stage build , which seems to be unrelated, [#2168](https://lab.llvm.org/staging/#/builders/126/builds/2168):
> ld.lld: llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:10289: bool llvm::LoopVectorizePass::processLoop(llvm::Loop*): Assertion `!verifyFunction(*L->getHeader()->getParent(), &dbgs())' failed.

Note that the buildbot was silent because it's still on the staging configuration.
We'll contact the community to move it to the main configuration soon.",2025-09-03T08:02:13Z,156487
3177274475,OCHyams,"It's unclear to me whether LLDB's behaviour here is really desirable from an API/DAP-user perspective, but working around this behaviour in dexter is still needed either way. LGTM, ty!",2025-09-02T16:13:27Z,156481
3177479914,lenary,"LGTM, one nit (typo)",2025-09-02T17:18:43Z,156482
3177746495,topperc,,2025-09-02T18:54:36Z,156482
3177795800,preames,,2025-09-02T19:10:40Z,156482
3177846454,topperc,LGTM,2025-09-02T19:27:28Z,156482
3178437786,mshockwave,,2025-09-02T23:17:59Z,156482
3177208602,erichkeane,,2025-09-02T15:57:54Z,156479
3177222704,snehasish,lgtm,2025-09-02T16:01:17Z,156476
3177277157,teresajohnson,,2025-09-02T16:14:03Z,156476
3177304081,kazutakahirata,LGTM.  Thanks!,2025-09-02T16:20:00Z,156476
3177126366,compnerd,,2025-09-02T15:39:53Z,156474
3177362356,adrian-prantl,,2025-09-02T16:39:03Z,156474
3177362717,adrian-prantl,Otherwise lgtm,2025-09-02T16:39:11Z,156474
3177415176,charles-zablit,,2025-09-02T16:58:01Z,156474
3177097673,OutOfCache,,2025-09-02T15:32:06Z,156477
3177347260,dtcxzyw,,2025-09-02T16:34:13Z,156477
3177600510,OutOfCache,,2025-09-02T18:00:45Z,156477
3185777420,nikic,,2025-09-04T15:02:31Z,156477
3189207217,OutOfCache,,2025-09-05T12:38:28Z,156477
3201559603,nikic,LGTM,2025-09-09T13:20:37Z,156477
3177304990,RKSimon,LGTM,2025-09-02T16:20:15Z,156472
3178806129,phoebewang,,2025-09-03T03:15:04Z,156472
3177364217,tblah,LGTM,2025-09-02T16:39:50Z,156468
3177542812,abidh,,2025-09-02T17:39:31Z,156468
3177358111,adrian-prantl,,2025-09-02T16:37:26Z,156469
3177592021,Nerixyz,"(Windows 11, x86) Rendering in the terminal works as expected and the previously failing tests now pass for me.",2025-09-02T17:57:26Z,156469
3180086893,zmodem,Seems okay to me. I assuming that the overhead of these is basically zero when not running with --time-trace?,2025-09-03T10:57:21Z,156471
3180523284,aganea,,2025-09-03T12:52:35Z,156471
3180524483,aganea,,2025-09-03T12:52:47Z,156471
3180688160,zmodem,"I think there are some `importScope`s which may not actually be about importing, but overall lgtm.",2025-09-03T13:30:18Z,156471
3181222812,teresajohnson,,2025-09-03T15:52:51Z,156471
3182196886,aganea,,2025-09-03T19:52:30Z,156471
3182198935,aganea,,2025-09-03T19:53:18Z,156471
3182201045,aganea,,2025-09-03T19:53:46Z,156471
3182201843,aganea,,2025-09-03T19:53:57Z,156471
3182202934,aganea,,2025-09-03T19:54:10Z,156471
3186712005,teresajohnson,"lgtm but I think it would be good to change occurrences of ""full LTO"" and ""regular LTO"" in the description to something like the ""LTO thin link"" to avoid confusion, as those terms typically refer specifically to IR based LTO.",2025-09-04T18:49:51Z,156471
3177389286,xlauko,lgtm,2025-09-02T16:48:32Z,156465
3179894281,tru,,2025-09-03T09:58:37Z,156462
3176805912,RKSimon,,2025-09-02T14:21:23Z,156460
3176767874,huntergr-arm,,2025-09-02T14:13:04Z,156457
3176773817,david-arm,,2025-09-02T14:14:24Z,156457
3176801769,huntergr-arm,,2025-09-02T14:20:19Z,156457
3179440003,arsenm,,2025-09-03T08:04:41Z,156455
3176675030,paulwalker-arm,,2025-09-02T13:51:57Z,156456
3180836116,kmclaughlin-arm,,2025-09-03T14:03:56Z,156456
3176325184,grypp,,2025-09-02T12:28:08Z,156448
3179813971,jacquesguan,LGTM,2025-09-03T09:35:13Z,156450
3180064887,marbre,LGTM. Anything we should alter in the op description?,2025-09-03T10:44:41Z,156450
3178489407,JDevlieghere,LGTM!,2025-09-02T23:38:02Z,156446
3176170494,RKSimon,,2025-09-02T11:44:08Z,156445
3177697954,davemgreen,"I was going to say this looks OK (and there are VLSHR/VSHL which are similar too). The second parameter will always be a constant within range.

VASHR can have exact flags that we copy from shifts and use to perform certain optimizations though. Does that alter things for this opcode?",2025-09-02T18:36:24Z,156445
3187186614,davemgreen,,2025-09-04T20:38:49Z,156445
3176330529,RKSimon,LGTM - cheers,2025-09-02T12:29:26Z,156441
3177038583,paulwalker-arm,,2025-09-02T15:30:40Z,156429
3177311832,rj-jesus,,2025-09-02T16:22:02Z,156429
3177340514,rj-jesus,,2025-09-02T16:31:38Z,156429
3177433609,paulwalker-arm,,2025-09-02T17:05:02Z,156429
3179996327,rj-jesus,,2025-09-03T10:24:25Z,156429
3175729425,nikic,,2025-09-02T09:40:43Z,156426
3175753381,kasuga-fj,,2025-09-02T09:46:56Z,156426
3175951810,lukel97,Is this NFC?,2025-09-02T10:36:39Z,156438
3176005718,lukel97,,2025-09-02T10:48:34Z,156438
3176010743,fhahn,,2025-09-02T10:50:13Z,156438
3176012976,artagnon,,2025-09-02T10:51:00Z,156438
3176070525,artagnon,,2025-09-02T11:09:31Z,156438
3195476509,fhahn,,2025-09-08T08:25:14Z,156438
3195486062,artagnon,,2025-09-08T08:27:57Z,156438
3195506239,fhahn,,2025-09-08T08:32:45Z,156438
3177419432,boomanaiden154,"LGTM, assuming you've rerun the test quite a few times locally to ensure there aren't any flakes.",2025-09-02T16:59:38Z,156423
3177773835,abhilash1910,,2025-09-02T19:03:19Z,156423
3177779668,abhilash1910,,2025-09-02T19:05:19Z,156423
3177781534,abhilash1910,LGTM otherwise!,2025-09-02T19:05:48Z,156423
3178966768,lakshayk-nv,,2025-09-03T05:10:22Z,156423
3180515552,sjoerdmeijer,,2025-09-03T12:50:49Z,156423
3175967201,arsenm,,2025-09-02T10:39:33Z,156437
3176067471,vg0204,,2025-09-02T11:08:25Z,156437
3176098533,arsenm,,2025-09-02T11:19:34Z,156437
3176144276,vg0204,,2025-09-02T11:35:13Z,156437
3176222718,arsenm,,2025-09-02T12:01:32Z,156437
3176224370,arsenm,,2025-09-02T12:02:04Z,156437
3176264043,vg0204,,2025-09-02T12:11:47Z,156437
3176544588,cdevadas,The patch looks reasonable to me.,2025-09-02T13:23:17Z,156437
3176570663,arsenm,,2025-09-02T13:27:06Z,156437
3176776730,ssahasra,,2025-09-02T14:15:00Z,156437
3176794593,arsenm,,2025-09-02T14:18:26Z,156437
3179110183,ssahasra,,2025-09-03T06:25:44Z,156437
3179115583,arsenm,,2025-09-03T06:27:50Z,156437
3179183052,vg0204,,2025-09-03T06:51:31Z,156437
3179184119,vg0204,,2025-09-03T06:51:56Z,156437
3179825037,cdevadas,LGTM.,2025-09-03T09:38:21Z,156437
3183299326,arnab-polymage,,2025-09-04T03:35:05Z,156422
3183300947,arnab-polymage,,2025-09-04T03:36:36Z,156422
3183322668,arnab-polymage,,2025-09-04T03:50:26Z,156422
3183323304,arnab-polymage,,2025-09-04T03:50:52Z,156422
3183328522,arnab-polymage,,2025-09-04T03:55:36Z,156422
3183345831,arnab-polymage,,2025-09-04T04:08:16Z,156422
3183453166,arnab-polymage,Posted some comments. Thanks.,2025-09-04T05:10:29Z,156422
3183594602,bondhugula,,2025-09-04T06:15:32Z,156422
3183596549,bondhugula,,2025-09-04T06:16:27Z,156422
3183596933,bondhugula,,2025-09-04T06:16:37Z,156422
3183599818,bondhugula,,2025-09-04T06:17:37Z,156422
3183618335,bondhugula,,2025-09-04T06:23:47Z,156422
3183654474,arnab-polymage,,2025-09-04T06:31:58Z,156422
3195423612,bondhugula,,2025-09-08T08:10:15Z,156422
3195480775,arnab-polymage,,2025-09-08T08:26:25Z,156422
3196066424,bondhugula,,2025-09-08T11:15:29Z,156422
3196066780,bondhugula,,2025-09-08T11:15:37Z,156422
3196667804,bondhugula,,2025-09-08T13:55:45Z,156422
3198869700,arnab-polymage,,2025-09-09T03:04:41Z,156422
3198873791,arnab-polymage,,2025-09-09T03:07:45Z,156422
3198876292,arnab-polymage,,2025-09-09T03:09:37Z,156422
3198876517,arnab-polymage,Some more comments:),2025-09-09T03:09:47Z,156422
3199511902,bondhugula,,2025-09-09T06:17:22Z,156422
3199519222,bondhugula,,2025-09-09T06:18:52Z,156422
3199526475,bondhugula,,2025-09-09T06:20:38Z,156422
3199629772,arnab-polymage,,2025-09-09T06:44:26Z,156422
3199650094,arnab-polymage,LGTM. Thanks for this improvement.,2025-09-09T06:48:46Z,156422
3200182626,bondhugula,,2025-09-09T08:51:20Z,156422
3177776240,rampitec,LGTM,2025-09-02T19:04:26Z,156420
3177647364,rampitec,,2025-09-02T18:18:06Z,156419
3177671749,rampitec,LGTM,2025-09-02T18:27:18Z,156419
3176581526,SamTebbs33,,2025-09-02T13:29:19Z,156407
3176883249,shiltian,,2025-09-02T14:41:31Z,156418
3177149210,arsenm,,2025-09-02T15:44:45Z,156418
3179283915,Pierre-vh,,2025-09-03T07:24:20Z,156418
3179286376,Pierre-vh,,2025-09-03T07:25:11Z,156418
3179549053,arsenm,,2025-09-03T08:33:30Z,156418
3182093726,rampitec,"LGTM, thanks! Sync the downstream before landing though (i.e. moved test).",2025-09-03T19:14:26Z,156418
3175641372,jayfoad,,2025-09-02T09:20:41Z,156406
3176843808,Sisyph,,2025-09-02T14:30:47Z,156406
3177627279,ldionne,LGTM with minor comments.,2025-09-02T18:17:35Z,156416
3179063562,philnik777,,2025-09-03T06:04:05Z,156416
3175329896,Pierre-vh,Add NFC to the title?,2025-09-02T08:00:15Z,156405
3177622117,rampitec,,2025-09-02T18:08:31Z,156405
3177616676,rampitec,,2025-09-02T18:06:33Z,156402
3175901834,tblah,Thanks for the fix,2025-09-02T10:27:06Z,156403
3176830417,Saldivarcher,,2025-09-02T14:27:25Z,156403
3176834287,Saldivarcher,,2025-09-02T14:28:25Z,156403
3177261786,tblah,Thanks for the update,2025-09-02T16:10:24Z,156403
3177602083,rampitec,LGTM modulo test names.,2025-09-02T18:02:47Z,156400
3175327020,Pierre-vh,,2025-09-02T07:59:18Z,156399
3174773073,wangpc-pp,,2025-09-02T03:22:33Z,156397
3174733915,dtcxzyw,,2025-09-02T02:40:06Z,156394
3176843829,MacDue,LGTM,2025-09-02T14:30:47Z,156392
3177088906,kuhar,,2025-09-02T15:29:37Z,156392
3174734669,arsenm,,2025-09-02T02:40:56Z,156391
3175730682,tgymnich,,2025-09-02T09:40:48Z,156390
3174729392,arsenm,,2025-09-02T02:35:12Z,156389
3175589300,jayfoad,Seems reasonable. Is this NFC? Could also do this on pretty much everything except SOP* and VOP*.,2025-09-02T09:07:01Z,156388
3175679748,jayfoad,OK but I wish we had better verification of these size calculations. This check does approximately nothing since it is skipped for pseudos but MI is always a pseudo here: https://github.com/llvm/llvm-project/blob/e867b8511814e75abbbe7048d505f84d4e686961/llvm/lib/Target/AMDGPU/AMDGPUMCInstLower.cpp#L398,2025-09-02T09:28:09Z,156388
3174733486,lukel97,"LGTM. 

By the way, last week LNT picked up some performance improvements on llvm-test-suite from the original version of this patch: https://lnt.lukelau.me/db_default/v4/nts/952

Some benchmarks regressed slightly like [SingleSource/Benchmarks/McGill/queens](https://lnt.lukelau.me/db_default/v4/nts/952/graph?test.1106=3) and [MicroBenchmarks/LoopVectorization/LoopInterleavingBenchmarks.test:benchForIC4VW4LoopWithReductionTC15](https://lnt.lukelau.me/db_default/v4/nts/952/graph?test.158=3), but overall it seems to be a net positive",2025-09-02T02:39:38Z,156386
3175472733,RKSimon,,2025-09-02T08:35:57Z,156385
3176492020,ckoparkar,,2025-09-02T13:08:35Z,156385
3176559496,RKSimon,,2025-09-02T13:23:42Z,156385
3176598019,phoebewang,,2025-09-02T13:33:43Z,156385
3176619357,RKSimon,,2025-09-02T13:39:18Z,156385
3176805661,ckoparkar,,2025-09-02T14:21:20Z,156385
3176819023,RKSimon,,2025-09-02T14:24:30Z,156385
3180496023,RKSimon,,2025-09-03T12:46:29Z,156385
3180551079,ckoparkar,,2025-09-03T12:58:52Z,156385
3181228174,ckoparkar,,2025-09-03T15:34:15Z,156385
3181279609,RKSimon,"LGTM - the mask3 intrinsics seem to be mixed up randomly and could do with sorting out at some point to be consistently with their siblings, but that's not relevant for this patch.",2025-09-03T15:48:03Z,156385
3174696044,heiher,,2025-09-02T02:02:25Z,156384
3175086237,philnik777,LGTM assuming the CI is happy to get that green again. Though I'm not sure we want to keep the test as-is. It seems to have quite a few assumptions about the environment baked in.,2025-09-02T06:41:24Z,156383
3198391761,fmayer,,2025-09-08T22:30:06Z,156383
3203947815,yingcong-wu,,2025-09-10T01:06:48Z,156383
3177537980,klausler,,2025-09-02T17:37:40Z,156382
3175867308,frasercrmck,"LGTM.

My main question is - why not make _all_ definitions weak? The alternative is to make them weak as and when we or a downstream needs them, or come up with some rationale for which ones are or aren't weak.",2025-09-02T10:15:59Z,156378
3177179183,cyndyishida,"For `Wmodule-link-redeclaration` check, what happens if two different modules have the same `link` declaration?",2025-09-02T16:00:25Z,156377
3181333908,qiongsiwu,,2025-09-03T16:01:33Z,156377
3182087851,cyndyishida,,2025-09-03T19:12:46Z,156377
3182091137,qiongsiwu,,2025-09-03T19:13:36Z,156377
3177521019,anchuraj,Disabling the failed test on aix LGTM. Thank you for the change! ,2025-09-02T17:31:08Z,156376
3174506864,s-barannikov,,2025-09-01T21:37:24Z,156375
3174634821,MaskRay,,2025-09-02T00:56:00Z,156375
3174670934,kazutakahirata,LGTM.  Thank you for rebasing this PR!  I've confirmed the build is OK with this patch.,2025-09-02T01:37:44Z,156375
3174491476,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR extends the `ptr_add` operation to support shaped operands (vectors and tensors) with value semantics, enabling more flexible pointer arithmetic operations that work element-wise on collections of pointers and offsets.

- Adds support for scalar-to-scalar, scalar-to-shaped, shaped-to-scalar, and shaped-to-shaped combinations
- Implements InferTypeOpInterface for automatic result type deduction
- Adds comprehensive test coverage for LLVM IR translation with vector operands

### Reviewed Changes

Copilot reviewed 8 out of 8 changed files in this pull request and generated 2 comments.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| mlir/lib/Dialect/Ptr/IR/PtrDialect.cpp | Implements type inference logic for shaped operands |
| mlir/include/mlir/Dialect/Ptr/IR/PtrOps.td | Updates operation definition to support shaped types |
| mlir/include/mlir/Dialect/Ptr/IR/PtrOps.h | Adds InferTypeOpInterface include |
| mlir/lib/Dialect/Ptr/IR/CMakeLists.txt | Adds dependency on InferTypeOpInterface |
| mlir/test/Dialect/Ptr/ops.mlir | Adds tests for shaped operand combinations |
| mlir/test/Dialect/Ptr/invalid.mlir | Adds negative tests for type/shape mismatches |
| mlir/test/Target/LLVMIR/ptr.mlir | Adds LLVM translation tests for vector operands |
| mlir/test/Conversion/PtrToLLVM/ptr-to-llvm.mlir | Fixes type syntax in existing tests |
</details>




",2025-09-01T21:14:32Z,156374
3181005618,joker-eph,,2025-09-03T14:38:36Z,156374
3181007339,joker-eph,,2025-09-03T14:38:57Z,156374
3181017095,fabianmcg,,2025-09-03T14:41:12Z,156374
3181211273,joker-eph,,2025-09-03T15:29:20Z,156374
3181214278,joker-eph,,2025-09-03T15:30:11Z,156374
3174494084,inbelic,,2025-09-01T21:18:15Z,156373
3177998785,inbelic,,2025-09-02T20:24:49Z,156373
3186206434,bogner,,2025-09-04T17:11:45Z,156373
3186779674,inbelic,,2025-09-04T19:07:05Z,156373
3186787606,inbelic,,2025-09-04T19:09:25Z,156373
3187248662,bogner,,2025-09-04T21:06:21Z,156373
3187251549,bogner,,2025-09-04T21:07:46Z,156373
3189835533,farzonl,,2025-09-05T15:31:43Z,156373
3189837470,farzonl,,2025-09-05T15:32:21Z,156373
3186195818,bogner,,2025-09-04T16:47:52Z,156372
3187010355,inbelic,,2025-09-04T20:02:52Z,156372
3187245138,bogner,,2025-09-04T21:04:43Z,156372
3187699484,V-FEXrt,,2025-09-05T01:14:32Z,156372
3188446630,jh7370,,2025-09-05T08:34:39Z,156372
3189840649,farzonl,LGTM,2025-09-05T15:33:28Z,156372
3190162747,inbelic,,2025-09-05T16:55:19Z,156372
3195475202,jh7370,LGTM too!,2025-09-08T08:24:45Z,156372
3174407414,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR adds four new operations to the `ptr` dialect for masked memory operations: `gather`, `masked_load`, `masked_store`, and `scatter`. These operations enable conditional memory access patterns commonly used in SIMD/vectorized code, with corresponding translations to LLVM masked memory intrinsics.

- Addition of four new memory operations with mask-based conditional access
- Implementation of LLVM IR translation for these operations to corresponding LLVM intrinsics
- Comprehensive test coverage for various data types, alignments, and address spaces

### Reviewed Changes

Copilot reviewed 5 out of 5 changed files in this pull request and generated 3 comments.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| mlir/include/mlir/Dialect/Ptr/IR/PtrOps.td | Defines the four new operations with their syntax, constraints, and documentation |
| mlir/lib/Dialect/Ptr/IR/PtrDialect.cpp | Implements verification logic, side effects, and builder methods for the new operations |
| mlir/lib/Target/LLVMIR/Dialect/Ptr/PtrToLLVMIRTranslation.cpp | Adds translation functions to convert the new operations to LLVM masked memory intrinsics |
| mlir/test/Dialect/Ptr/ops.mlir | Tests operation parsing and verification with various type combinations |
| mlir/test/Target/LLVMIR/ptr.mlir | Tests LLVM IR translation output for the new operations |
</details>




",2025-09-01T19:30:30Z,156368
3176119115,joker-eph,,2025-09-02T11:31:08Z,156368
3176141720,fabianmcg,,2025-09-02T11:34:23Z,156368
3176143991,fabianmcg,,2025-09-02T11:35:07Z,156368
3176187799,joker-eph,,2025-09-02T11:49:57Z,156368
3176198634,fabianmcg,,2025-09-02T11:53:41Z,156368
3176233141,joker-eph,,2025-09-02T12:04:24Z,156368
3175341490,RKSimon,Thanks - the next step is to add suitable test coverage to the relevant builtins file like we have in the other x86 constexpr patches e.g. #152435,2025-09-02T08:03:48Z,156369
3175604551,RKSimon,LGTM - cheers,2025-09-02T09:11:36Z,156369
3174718221,kasuga-fj,"Are these new debug messages really necessary? DA already has a large number of debug messages, and I don't think they are well organized. If possible, I'd prefer not to add much more.",2025-09-02T02:24:21Z,156367
3175264905,nikic,"(This looks fine to me, but I also don't work on DA, so I can't comment on what's useful or not.)",2025-09-02T07:39:29Z,156367
3175679692,kasuga-fj,"Personally, I don't think this is super useful, but I don't have any strong objections either.",2025-09-02T09:32:11Z,156367
3177988614,sebpop,,2025-09-02T20:20:29Z,156367
3179524097,kasuga-fj,"This PR hasn't been approved by anyone yet. In general, you should wait for at least one approval before landing.",2025-09-03T08:35:21Z,156367
3175131360,Michael137,"The way we do it for DWARF (for better or for worse) is that we complete the array element type, not the array type itself. FWIW, that's what completing a `ConstantArrayType` does anyway. It completes the element type.

Is there a place in the PDB plugin where we can do the same thing we do for DWARF? https://github.com/llvm/llvm-project/blob/74b9484fd62d6be9bc49e154800ceef0d74ef24f/lldb/source/Plugins/SymbolFile/DWARF/DWARFASTParserClang.cpp#L1507-L1508",2025-09-02T06:57:22Z,156370
3177010832,Michael137,,2025-09-02T15:11:37Z,156370
3177011109,Michael137,,2025-09-02T15:11:40Z,156370
3177258095,Nerixyz,,2025-09-02T16:09:29Z,156370
3177633340,ZequanWu,LGTM as it aligns with dwarf plugin's behaviour. ,2025-09-02T18:13:03Z,156370
3188653438,ostannard,LGTM,2025-09-05T09:32:15Z,156363
3174722446,arsenm,,2025-09-02T02:28:24Z,156366
3174845027,XChy,,2025-09-02T04:37:04Z,156366
3174913974,arsenm,,2025-09-02T05:26:39Z,156366
3188661877,ostannard,LGTM,2025-09-05T09:35:21Z,156362
3188744324,jthackray,LGTM,2025-09-05T10:04:24Z,156362
3183148594,benshi001,,2025-09-04T01:58:24Z,156361
3183948405,s-barannikov,,2025-09-04T08:03:58Z,156361
3184315189,benshi001,LGTM,2025-09-04T09:39:04Z,156361
3182508764,s-barannikov,,2025-09-03T21:08:17Z,156359
3187236915,quic-akaryaki,Thanks for cleaning this up! ,2025-09-04T21:03:13Z,156359
3182558903,topperc,LGTM,2025-09-03T21:22:07Z,156360
3182669725,lenary,Thanks!,2025-09-03T22:06:42Z,156360
3174450800,lenary,,2025-09-01T20:21:18Z,156358
3174457187,s-barannikov,,2025-09-01T20:29:30Z,156358
3181423925,jurahul,,2025-09-03T16:29:36Z,156358
3181449961,jurahul,,2025-09-03T16:38:21Z,156358
3181452194,jurahul,,2025-09-03T16:39:08Z,156358
3182208351,s-barannikov,,2025-09-03T19:55:18Z,156358
3182210776,s-barannikov,,2025-09-03T19:55:58Z,156358
3182212208,s-barannikov,,2025-09-03T19:56:16Z,156358
3182323685,jurahul,,2025-09-03T20:26:10Z,156358
3182360473,jurahul,,2025-09-03T20:33:28Z,156358
3182361868,s-barannikov,,2025-09-03T20:33:49Z,156358
3182362815,jurahul,,2025-09-03T20:34:10Z,156358
3182363556,jurahul,,2025-09-03T20:34:29Z,156358
3182364102,jurahul,,2025-09-03T20:34:43Z,156358
3185621457,jurahul,,2025-09-04T14:25:35Z,156358
3176904671,xlauko,lgtm,2025-09-02T14:51:29Z,156356
3177339216,andykaylor,lgtm with xlauko's comments addressed,2025-09-02T16:31:10Z,156356
3178702565,bcardosolopes,,2025-09-03T01:52:25Z,156356
3182402943,fhahn,"LGTM, thanks",2025-09-03T20:44:24Z,156357
3174195108,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR implements translation from the MLIR ptr dialect to LLVM IR, enabling core pointer operations to be lowered to their LLVM counterparts. The implementation handles pointer arithmetic, load/store operations with atomic and metadata support, and type offset calculations.

Key changes:
- Complete implementation of ptr dialect operation translations (ptr_add, load, store, type_offset)
- Addition of comprehensive test cases covering various operation flags and metadata
- Minor refactoring of LLVM type predicates to improve code organization

### Reviewed Changes

Copilot reviewed 3 out of 3 changed files in this pull request and generated 3 comments.

| File | Description |
| ---- | ----------- |
| mlir/lib/Target/LLVMIR/Dialect/Ptr/PtrToLLVMIRTranslation.cpp | Implements translation functions for all ptr dialect operations to LLVM IR |
| mlir/test/Target/LLVMIR/ptr.mlir | Adds comprehensive test cases for ptr dialect translation operations |
| mlir/include/mlir/Dialect/LLVMIR/LLVMOpBase.td | Refactors LLVM_LoadableType predicate to use centralized function |



",2025-09-01T16:41:56Z,156355
3174234821,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR implements translations from the MLIR ptr dialect to LLVM IR for core pointer operations. It adds support for translating `ptr.ptr_add`, `ptr.load`, `ptr.store`, and `ptr.type_offset` operations to their LLVM IR equivalents, including proper handling of atomic ordering, volatility, metadata, and various flags.

- Adds translation functions for four ptr dialect operations to LLVM IR
- Implements comprehensive test cases covering all operation variants and flags
- Updates type predicate for better loadable type checking in LLVM dialect

### Reviewed Changes

Copilot reviewed 3 out of 3 changed files in this pull request and generated 2 comments.

| File | Description |
| ---- | ----------- |
| mlir/lib/Target/LLVMIR/Dialect/Ptr/PtrToLLVMIRTranslation.cpp | Implements the core translation logic for ptr dialect operations to LLVM IR |
| mlir/test/Target/LLVMIR/ptr.mlir | Adds comprehensive test cases for all ptr operation translations |
| mlir/include/mlir/Dialect/LLVMIR/LLVMOpBase.td | Updates LLVM_LoadableType predicate to use helper function |



",2025-09-01T17:02:49Z,156355
3174847568,Dinistro,"Dropped a few nits, but this is already looking very nice.",2025-09-02T04:52:42Z,156355
3175602625,joker-eph,,2025-09-02T09:11:04Z,156355
3175606757,joker-eph,LG overall,2025-09-02T09:12:12Z,156355
3176386756,fabianmcg,,2025-09-02T12:44:47Z,156355
3176403319,fabianmcg,,2025-09-02T12:48:47Z,156355
3174782159,arsenm,,2025-09-02T03:32:30Z,156395
3175429106,smithp35,"I found the description difficult to follow. 
> When input files use absolute paths, the matching results from mc lld do not meet expectations.

Can you say what your expectations are and why?

If I've understood your patch correctly, you expect lld to match the file part of `file.o(section)` with an object with a filename of `/path/to/file.o`

When I look at https://sourceware.org/binutils/docs/ld/Input-Section-Basics.html I can't see anything that says that when a full path is given the linker is expected to extract the filename. I think the recommended pattern in this case is `*file.o(section)`

Trying to make a similar example with GNU ld, I got an error message:
`ld: cannot find foo.o: No such file or directory`

So we definitely have a discrepancy between GNU ld and lld, but if we think it is important I'd prefer that we fix it to match GNU ld behaviour. I think there could be problems with automatically discarding path information, particularly when there are multiple object files with the same name, but different paths `path1/foo.o` `path2/foo.o`  

As an aside mc lld, doesn't exist as a name, it is just lld.",2025-09-02T09:06:58Z,156353
3174082761,nikic,,2025-09-01T15:42:24Z,156341
3174378576,NagyDonat,"I support the removal of this checker, because it implements a heuristic that finds and reports a very specific bug which is (as far as I see) not a ""natural"" mistake that would appear during real-world development.",2025-09-01T18:58:12Z,156350
3175432727,steakhal,LGTM,2025-09-02T08:26:03Z,156350
3174052317,jhuber6,Assuming this is supported on both clang and gcc versions we use,2025-09-01T15:28:20Z,156344
3174691487,lntue,,2025-09-02T01:57:43Z,156344
3176767594,c8ef,,2025-09-02T14:13:01Z,156344
3176781051,c8ef,,2025-09-02T14:15:48Z,156344
3176795472,lntue,,2025-09-02T14:18:40Z,156344
3176799810,c8ef,,2025-09-02T14:19:50Z,156344
3176821460,c8ef,,2025-09-02T14:25:08Z,156344
3181821082,lntue,,2025-09-03T17:54:21Z,156344
3184106552,c8ef,,2025-09-04T08:51:24Z,156344
3185700328,lntue,,2025-09-04T14:43:29Z,156344
3186159215,c8ef,,2025-09-04T16:34:44Z,156344
3186426744,lntue,,2025-09-04T17:47:10Z,156344
3174090932,lukel97,,2025-09-01T15:49:41Z,156345
3174108840,artagnon,,2025-09-01T15:53:23Z,156345
3174114374,artagnon,,2025-09-01T15:56:32Z,156345
3174116355,artagnon,,2025-09-01T15:57:43Z,156345
3174137130,fhahn,,2025-09-01T16:06:47Z,156345
3174161711,artagnon,,2025-09-01T16:20:20Z,156345
3174195886,lukel97,,2025-09-01T16:49:03Z,156345
3174218985,artagnon,,2025-09-01T16:53:57Z,156345
3174219474,artagnon,,2025-09-01T16:54:10Z,156345
3174221067,artagnon,,2025-09-01T16:55:11Z,156345
3174722085,lukel97,LGTM,2025-09-02T02:28:01Z,156345
3176271974,fhahn,,2025-09-02T12:14:17Z,156345
3176285336,artagnon,,2025-09-02T12:17:16Z,156345
3179890771,fhahn,,2025-09-03T10:05:36Z,156345
3182553930,fhahn,"LGTM, thanks",2025-09-03T21:20:20Z,156345
3174248731,kasuga-fj,"Can you submit the changes to delinearization and DA as separate PRs?

I’ll just leave comments on what I noticed at a glance.",2025-09-01T17:24:06Z,156339
3174324895,sebpop,,2025-09-01T18:12:14Z,156339
3174333256,sebpop,,2025-09-01T18:21:12Z,156339
3174625951,kasuga-fj,,2025-09-02T00:44:06Z,156339
3175202327,sjoerdmeijer,,2025-09-02T07:21:32Z,156339
3175846132,kasuga-fj,,2025-09-02T10:10:56Z,156339
3176684085,sebpop,,2025-09-02T13:54:05Z,156339
3176726488,sebpop,,2025-09-02T14:03:24Z,156339
3177374663,sebpop,,2025-09-02T16:43:30Z,156339
3177416704,sebpop,,2025-09-02T16:58:37Z,156339
3177418329,sebpop,,2025-09-02T16:59:13Z,156339
3179676361,kasuga-fj,"Please update the title and description.

- This is not NFC. I don't think changing debug messages qualifies as NFC. Additionally, in this case, the test results have changed.
- This PR doesn't modify DA.

I'll approve once all my comments have been *addressed*. Note that I'm not asking you to make every change exactly as suggested. If you have some reason, it's totally fine to leave things as they are.",2025-09-03T09:14:38Z,156339
3185569831,kasuga-fj,LGTM,2025-09-04T14:16:14Z,156339
3174145500,sdesmalen-arm,"Given how scalable vector support has matured in LLVM over the past few years and that Clang has stopped demoting these errors for a while now, it makes sense for this code to be removed.",2025-09-01T16:10:53Z,156336
3174311949,paulwalker-arm,,2025-09-01T17:59:26Z,156336
3173936606,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR introduces the `#llvm.address_space` attribute and enables translation of `!ptr.ptr` types to LLVM IR. The key changes include adding the new address space attribute with MemorySpaceAttrInterface implementation, extending type compatibility checks to support ptr-like types with LLVM address spaces, and creating translation infrastructure.

Key changes:
- Adds `#llvm.address_space` attribute implementing `ptr::MemorySpaceAttrInterface`
- Enables translation of `!ptr.ptr<#llvm.address_space<N>>` to LLVM IR `ptr addrspace(N)`
- Refactors memory space interface to include DataLayout parameter for better validation

### Reviewed Changes

Copilot reviewed 30 out of 30 changed files in this pull request and generated 1 comment.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| mlir/lib/Dialect/LLVMIR/IR/LLVMAttrs.cpp | Implements AddressSpaceAttr with MemorySpaceAttrInterface methods |
| mlir/lib/Target/LLVMIR/TypeToLLVM.cpp | Adds translation support for PtrLikeTypeInterface to LLVM pointer types |
| mlir/lib/Target/LLVMIR/Dialect/Ptr/PtrToLLVMIRTranslation.cpp | Creates new translation module for ptr dialect to LLVM IR |
| mlir/lib/Dialect/Ptr/IR/PtrDialect.cpp | Updates to use DataLayout parameter in memory space validation |
| mlir/include/mlir/Dialect/LLVMIR/LLVMAttrDefs.td | Defines the new AddressSpaceAttr with proper interface declarations |
| mlir/test/Target/LLVMIR/ptr.mlir | Adds translation tests for ptr types with LLVM address spaces |
</details>



<details>
<summary>Comments suppressed due to low confidence (4)</summary>

**mlir/lib/Dialect/LLVMIR/IR/LLVMAttrs.cpp:1**
* The use of `assert(false)` will cause the program to terminate in debug builds when atomic operations are used with address space attributes. Consider returning an appropriate error through `emitError` instead of using assertions, or implement the validation logic.
```
//===- LLVMAttrs.cpp - LLVM Attributes registration -----------------------===//
```
**mlir/lib/Dialect/LLVMIR/IR/LLVMAttrs.cpp:1**
* The use of `assert(false)` will cause the program to terminate in debug builds when atomic exchange operations are used. Consider returning an appropriate error through `emitError` instead of using assertions, or implement the validation logic.
```
//===- LLVMAttrs.cpp - LLVM Attributes registration -----------------------===//
```
**mlir/lib/Dialect/LLVMIR/IR/LLVMAttrs.cpp:1**
* The use of `assert(false)` will cause the program to terminate in debug builds when address space cast validation is needed. Consider returning an appropriate error through `emitError` instead of using assertions, or implement the validation logic.
```
//===- LLVMAttrs.cpp - LLVM Attributes registration -----------------------===//
```
**mlir/lib/Dialect/LLVMIR/IR/LLVMAttrs.cpp:1**
* The use of `assert(false)` will cause the program to terminate in debug builds when pointer-integer cast validation is needed. Consider returning an appropriate error through `emitError` instead of using assertions, or implement the validation logic.
```
//===- LLVMAttrs.cpp - LLVM Attributes registration -----------------------===//
```
</details>

",2025-09-01T14:43:33Z,156333
3175841292,joker-eph,,2025-09-02T10:07:51Z,156333
3175865527,rengolin,,2025-09-02T10:15:24Z,156333
3175904267,fabianmcg,,2025-09-02T10:27:03Z,156333
3175940896,joker-eph,,2025-09-02T10:34:27Z,156333
3175969842,fabianmcg,,2025-09-02T10:40:06Z,156333
3175992067,joker-eph,,2025-09-02T10:45:23Z,156333
3175993794,joker-eph,,2025-09-02T10:45:49Z,156333
3176008912,joker-eph,,2025-09-02T10:49:32Z,156333
3176066165,fabianmcg,,2025-09-02T11:07:56Z,156333
3176183114,fabianmcg,,2025-09-02T11:48:17Z,156333
3176189920,joker-eph,,2025-09-02T11:50:40Z,156333
3174179233,dtcxzyw,,2025-09-01T16:31:07Z,156326
3175594704,nikic,,2025-09-02T09:08:38Z,156326
3176235018,dtcxzyw,LGTM.,2025-09-02T14:09:07Z,156326
3174619987,zyn0217,"I think we need a release note, maybe 'Potential AST breaking changes' would be a good fit.",2025-09-02T00:35:17Z,156329
3176665738,erichkeane,,2025-09-02T13:50:27Z,156329
3177181390,bolshakov-a,,2025-09-02T15:50:37Z,156329
3177343970,mizvekov,,2025-09-02T16:33:05Z,156329
3177362176,bolshakov-a,,2025-09-02T16:38:59Z,156329
3177375055,mizvekov,,2025-09-02T16:43:39Z,156329
3177386498,mizvekov,,2025-09-02T16:47:56Z,156329
3177646085,zixu-w,,2025-09-02T18:17:33Z,156329
3177679421,bolshakov-a,,2025-09-02T18:30:00Z,156329
3183027730,mizvekov,"LGTM.

I don't love the new bool parameter, but I don't see a simple way to avoid it, and this change is too simple to be worth asking for such a change.",2025-09-04T01:03:09Z,156329
3183162374,bolshakov-a,,2025-09-04T02:07:55Z,156329
3185482683,erichkeane,"1 nit, else lgtm.  Fix that and re-ping and I'll merge you.",2025-09-04T14:01:00Z,156329
3185776327,bolshakov-a,,2025-09-04T15:02:13Z,156329
3173596892,joker-eph,,2025-09-01T13:04:48Z,156324
3173597301,joker-eph,,2025-09-01T13:04:53Z,156324
3173481068,lhutton1,"Thanks for the patch @mariocamillo-IMG, would it be possible to add a test?",2025-09-01T12:35:55Z,156321
3180023630,lhutton1,"LGTM, thanks!",2025-09-03T10:32:22Z,156321
3173586754,Nerixyz,Test passes for me on x86 with DIA disabled now 👍 ,2025-09-01T13:01:27Z,156320
3173676810,Michael137,,2025-09-01T13:29:25Z,156320
3185183067,SixWeining,,2025-09-04T13:06:03Z,156315
3177715451,davemgreen,Is it possible to add a test that cannot be optimized away and does not require -O0? Or reuse one of the existing ones? This seems difficult to test as the input often includes a bitcast.,2025-09-02T18:42:15Z,156314
3191896791,davemgreen,"LGTM, thanks for the fix.

Are you happy for me to to hit submit?",2025-09-06T09:10:15Z,156314
3177668036,banach-space,"LGTM, thanks!",2025-09-02T18:25:43Z,156311
3173405065,arsenm,,2025-09-01T12:14:01Z,156310
3173166970,lukel97,,2025-09-01T10:46:06Z,156308
3173345460,artagnon,"LGTM, thanks!",2025-09-01T11:54:07Z,156308
3173359267,lukel97,,2025-09-01T11:57:50Z,156308
3173364234,artagnon,,2025-09-01T11:59:38Z,156308
3173567601,fhahn,"LGTM, thanks",2025-09-01T12:55:26Z,156308
3173187954,nunoplopes,"LGTM, thanks!",2025-09-01T10:54:12Z,156309
3178251215,efriedma-quic,,2025-09-02T21:59:49Z,156309
3173184191,Nerixyz,"Agree, that it's better for this to be skipped on Windows.

I think this passed on Windows because Clang always generates a PDB, even if DWARF is used, but I could be wrong. To be able to use DWARF on Windows, this test also missed `-fuse-ld=lld` - the section names of the produced executable are currently truncated.

Also checked on #154121, and it passes there with the native plugin (the other test, `Settings/TestFrameFormatFunctionReturnObjC.test` also passes there).",2025-09-01T10:52:43Z,156306
3173219816,Michael137,Yea on Darwin the split-dwarf is just ignored. So makes sense that it would pass. But it's not testing what was intended. So skipping it is the right thing to do,2025-09-01T11:06:09Z,156306
3173135158,devnexen,,2025-09-01T10:37:50Z,156303
3179523486,fhahn,"LGTM, thanks",2025-09-03T08:27:25Z,156304
3179663269,Mel-Chen,"LG
",2025-09-03T08:58:05Z,156304
3187242884,fhahn,"Looks like there's a pre-commit test failure, which may be related to the patch. Would be good to check before landing",2025-09-04T21:03:43Z,156304
3182531965,fhahn,"LGTM, thanks",2025-09-03T21:15:25Z,156302
3174314142,boomanaiden154,"`hasMemoryOperands` (inside `llvm-exegesis` in https://github.com/llvm/llvm-project/blob/442e4ad92301882e8362edd64072f7cc6e36d141/llvm/tools/llvm-exegesis/lib/MCInstrDescView.cpp#L208) should be generic over different architectures.

09c2839c02a0eabf8851d81a44eba644ec683791 changed it from just requiring a memory operand to also requiring that the operand by explicit and a register. Not sure why it was changed. I'm thinking updating the condition there is the better option.",2025-09-01T18:01:42Z,156300
3180738185,boomanaiden154,,2025-09-03T13:42:14Z,156300
3173320475,alexey-bataev,,2025-09-01T11:43:12Z,156297
3172994171,devnexen,,2025-09-01T10:01:47Z,156294
3172583983,XChy,,2025-09-01T08:14:57Z,156293
3172769634,RKSimon,,2025-09-01T09:01:45Z,156293
3172905506,RKSimon,LGTM with one minor - cheers,2025-09-01T09:38:16Z,156293
3173901042,alexey-bataev,,2025-09-01T14:31:15Z,156292
3172990781,devnexen,,2025-09-01T10:01:16Z,156291
3172193211,JaydeepChauhan14,,2025-09-01T05:59:14Z,156281
3172228525,JaydeepChauhan14,,2025-09-01T06:18:16Z,156281
3172283168,mahesh-attarde,,2025-09-01T06:43:38Z,156281
3172871455,RKSimon,Just call them isel-ceil.ll / isel-floor.ll / isel-ftrunc.ll - the llvm from the intrinsic name is redundant for something as generic as this.,2025-09-01T09:29:59Z,156281
3175324548,RKSimon,,2025-09-02T07:58:32Z,156281
3173156482,frasercrmck,,2025-09-01T10:42:05Z,156280
3172462472,HanKuanChen,,2025-09-01T07:39:00Z,156278
3172514457,HanKuanChen,,2025-09-01T07:53:19Z,156277
3172544144,pfusik,,2025-09-01T08:02:18Z,156277
3172561146,HanKuanChen,,2025-09-01T08:06:18Z,156277
3172587349,pfusik,,2025-09-01T08:14:19Z,156277
3173904743,alexey-bataev,,2025-09-01T14:33:07Z,156277
3173971868,pfusik,,2025-09-01T14:57:10Z,156277
3173979906,alexey-bataev,,2025-09-01T15:00:15Z,156277
3172251734,tgymnich,,2025-09-01T06:29:17Z,156276
3172054636,arsenm,,2025-09-01T04:21:44Z,156275
3172095443,kazutakahirata,,2025-09-01T05:00:00Z,156275
3183197752,arsenm,,2025-09-04T02:29:51Z,156275
3173415708,nikic,,2025-09-01T12:17:59Z,156274
3172054937,arsenm,,2025-09-01T04:22:06Z,156272
3172038128,mtrofin,"lgtm, but you probably want the release branch owner to lgtm, too",2025-09-01T04:04:04Z,156271
3171778339,jhuber6,"The support is just for functions that you can call, we'd want a new directory for these types of results similar to the ones listed for the CPU.",2025-08-31T20:12:03Z,156263
3185548123,lntue,,2025-09-04T14:11:57Z,156263
3185819197,lntue,,2025-09-04T15:13:44Z,156263
3185820794,leandrolcampos,,2025-09-04T15:14:09Z,156263
3187236942,jhuber6,,2025-09-04T21:00:57Z,156263
3200019477,davemgreen,"Generating a `movi d0, #0` more reliably sounds good to me.",2025-09-09T08:22:07Z,156261
3202815931,jroelofs,,2025-09-09T18:39:46Z,156261
3203008365,davemgreen,Thanks. LGTM,2025-09-09T19:35:26Z,156261
3172249559,tgymnich,,2025-09-01T06:28:30Z,156273
3172753960,RKSimon,,2025-09-01T08:57:52Z,156260
3172781467,,,2025-09-01T09:02:34Z,156260
3172811089,,,2025-09-01T09:11:10Z,156260
3173092999,RKSimon,,2025-09-01T10:27:23Z,156260
3173094580,RKSimon,,2025-09-01T10:27:56Z,156260
3173095141,RKSimon,,2025-09-01T10:28:09Z,156260
3173095541,RKSimon,,2025-09-01T10:28:20Z,156260
3178278432,andykaylor,,2025-09-02T23:22:45Z,156253
3178702027,bcardosolopes,"LGTM after you address existing feedback, nothing else to add!",2025-09-03T01:51:56Z,156253
3176696971,teresajohnson,,2025-09-02T13:57:00Z,156247
3171710496,j2kun,,2025-08-31T16:24:41Z,156245
3177194405,andykaylor,lgtm. Thanks for handling this!,2025-09-02T15:54:39Z,156241
3177304652,xlauko,lgtm,2025-09-02T16:20:08Z,156241
3172750949,ostannard,"LGTM given the explanation in a comment in #155464, though in future it would make things easier to review if you explain why you are making a change in the PR description.",2025-09-01T08:54:22Z,156240
3171582520,s-barannikov,,2025-08-31T11:32:35Z,156237
3171596113,jurahul,,2025-08-31T12:07:47Z,156237
3171600052,s-barannikov,,2025-08-31T12:15:23Z,156237
3171683774,RKSimon,,2025-08-31T15:27:49Z,156227
3177494492,kusmour,lgtm just need to clear the test error,2025-09-02T17:22:58Z,156231
3177499571,JDevlieghere,,2025-09-02T17:24:17Z,156231
3184877993,walter-erquinigo,cool,2025-09-04T12:05:18Z,156231
3173458322,jpienaar,"Nice, thanks!",2025-09-01T12:32:22Z,156235
3173504817,joker-eph,,2025-09-01T12:40:28Z,156235
3171664690,teresajohnson,lgtm,2025-08-31T14:34:11Z,156226
3171541811,RKSimon,LGTM,2025-08-31T09:52:32Z,156224
3172888573,MacDue,Nice cleanup :+1: Assuming there's no performance difference this LGTM,2025-09-01T09:33:46Z,156221
3187535043,michaelrj-google,"LGTM, do you need me to merge this?",2025-09-04T23:27:25Z,156216
3171310091,topperc,LGTM,2025-08-31T02:22:46Z,156218
3180284598,mstorsjo,"The code looks reasonable and kinda ok, but I'm not entirely wrapping my head around all what's happening here, so I have a bunch of questions.",2025-09-03T12:10:10Z,156214
3188962375,kikairoya,,2025-09-05T11:18:46Z,156214
3198047197,mstorsjo,LGTM,2025-09-08T20:24:28Z,156214
3178964223,kazutakahirata,LGTM.  Thanks for the cleanup!,2025-09-03T05:08:39Z,156212
3171253776,mstorsjo,"LGTM, thanks! This does seem to fix the test for me.

(Side note - is the `UNSUPPORTED: asan-64-bits` still relevant here you think?)",2025-08-30T22:01:13Z,156211
3182693152,s-barannikov,,2025-09-03T22:19:08Z,156213
3182710637,jurahul,,2025-09-03T22:24:08Z,156213
3182744990,jurahul,,2025-09-03T22:35:51Z,156213
3202904003,lenary,"This seems good to me, given that RISC-V has lots of pseudos.",2025-09-09T19:05:04Z,156213
3202924176,topperc,LGTM,2025-09-09T19:10:21Z,156213
3171558481,davemgreen,,2025-08-31T10:28:49Z,156208
3171563251,ardbiesheuvel,,2025-08-31T10:43:04Z,156208
3171217689,tgymnich,,2025-08-30T20:27:54Z,156203
3171615995,arsenm,,2025-08-31T12:57:14Z,156204
3171624843,tgymnich,,2025-08-31T13:24:26Z,156204
3171945905,kuhar,,2025-09-01T02:12:23Z,156201
3171217304,tgymnich,,2025-08-30T20:26:14Z,156202
3171283327,nikalra,,2025-08-31T00:51:13Z,156197
3171559133,davemgreen,Looks nice and cleaner,2025-08-31T10:30:46Z,156198
3174218159,davidtrevelyan,,2025-09-01T16:53:27Z,156196
3171309267,topperc,LGTM,2025-08-31T02:17:03Z,156193
3171541478,RKSimon,,2025-08-31T09:51:26Z,156193
3171199825,jplehr,"lgtm

thanks for the fix",2025-08-30T19:41:17Z,156194
3171253256,jprotze,Lgtm,2025-08-30T21:58:02Z,156194
3171147783,RKSimon,LGTM,2025-08-30T18:13:59Z,156191
3172946392,RKSimon,,2025-09-01T09:49:40Z,156187
3173874916,moorabbit,,2025-09-01T14:21:49Z,156187
3174013844,RKSimon,LGTM,2025-09-01T15:13:55Z,156187
3171132655,kbeyls,"I can do a review, but can't review the details in depth as I'm not participating in the qualification working group.

I left a separate comment about the license header you're adding here: I'd remove that one.

Other than that, my main observation is that it might incur quite a bit of overhead to keep living documents in the llvm docs github repo.
Also, whenever an LLVM release is made, I guess that whatever state these documents are in at that point, will always be part of that LLVM release.
I think it might be better to keep living/frequently changing documents (like a backlog) in a document outside of the git repo. Other LLVM sync-up groups often use a public google doc or similar. Of course a pointer to the living document outside of the git repo could be very useful to have in the docs in git/on the website.",2025-08-30T17:30:03Z,156184
3171278068,CarlosAndresRamirez,,2025-08-31T00:15:29Z,156184
3195825721,CarlosAndresRamirez,,2025-09-08T09:56:41Z,156184
3196174693,kbeyls,"This looks fine to me now.
Let me know if you can merge this (i.e. you see a merge button on the PR).
If not, I can merge this PR for you.",2025-09-08T11:49:46Z,156184
3171134630,matthias-springer,"Not a CMake expert, but the vast majority of files use `${MLIR_MAIN_INCLUDE_DIR}` and syntax highlighting now properly highlights the file.",2025-08-30T17:32:50Z,156183
3171211915,joker-eph,,2025-08-30T20:17:03Z,156183
3171358239,CoTinker,"LGTM, thanks.",2025-08-31T04:07:10Z,156183
3189791137,jurahul,,2025-09-05T15:19:49Z,156179
3171117225,topperc,LGTM,2025-08-30T16:30:24Z,156175
3171012013,arsenm,We really need to get #120690 in to stop recomputing this so many times ,2025-08-30T11:34:12Z,156173
3171012254,arsenm,,2025-08-30T11:36:01Z,156173
3171106631,clementval,LGTM,2025-08-30T16:09:42Z,156171
3182039555,davemgreen,,2025-09-03T19:00:23Z,156170
3171131875,tblah,Thank you for fixing this.,2025-08-30T17:24:02Z,156169
3171141512,matthias-springer,,2025-08-30T17:58:56Z,156169
3171015464,tbaederr,,2025-08-30T11:51:04Z,156166
3170972535,SimplyDanny,,2025-08-30T08:55:23Z,156164
3174554570,e-kud,LGTM. Thanks!,2025-09-01T23:07:49Z,156162
3175290645,RKSimon,,2025-09-02T07:47:57Z,156162
3170864930,topperc,,2025-08-30T04:29:05Z,156142
3170932214,s-barannikov,,2025-08-30T07:48:15Z,156142
3170936818,s-barannikov,"May it make sense to move this to KnownBits? This could be used in the middle end with the corresponding intrinsics.
",2025-08-30T07:55:56Z,156142
3171007604,RKSimon,,2025-08-30T11:16:43Z,156142
3171146091,RKSimon,LGTM,2025-08-30T18:12:07Z,156142
3171023216,tgymnich,,2025-08-30T12:24:14Z,156141
3170858665,arsenm,"Title is wrong, this doesn't touch amdgpu ",2025-08-30T04:05:10Z,156139
3170993778,arsenm,,2025-08-30T10:01:38Z,156139
3170858757,arsenm,,2025-08-30T04:05:34Z,156138
3171014884,kuhar,,2025-08-30T11:48:13Z,156138
3177568584,rampitec,,2025-09-02T17:49:15Z,156135
3171141058,krzysz00,,2025-08-30T17:57:08Z,156133
3171580402,joker-eph,,2025-08-31T11:26:21Z,156133
3171017910,kuhar,Do we have dedicated unit tests for these iterators?,2025-08-30T12:03:39Z,156137
3171945035,kuhar,,2025-09-01T02:11:18Z,156137
3176813735,shiltian,,2025-09-02T14:23:18Z,156132
3171845300,walter-erquinigo,seems well done,2025-08-31T23:54:05Z,156131
3178033027,ashgti,LGTM!,2025-09-02T20:36:25Z,156131
3182925466,piyushjaiswal98,,2025-09-04T00:02:39Z,156131
3183336288,maksfb,LGTM,2025-09-04T04:02:07Z,156129
3170768821,fmayer,,2025-08-30T00:50:03Z,156128
3170787412,fmayer,,2025-08-30T01:08:03Z,156128
3170808844,fmayer,,2025-08-30T01:36:40Z,156128
3170826719,MaskRay,,2025-08-30T02:24:03Z,156128
3170843248,pcc,,2025-08-30T03:25:05Z,156128
3170858844,fmayer,,2025-08-30T04:06:01Z,156128
3170858870,fmayer,,2025-08-30T04:06:10Z,156128
3172019633,lukel97,LGTM,2025-09-01T03:41:52Z,156126
3172033912,boomanaiden154,"This needs a test in `llvm/utils/lit/tests`.

Adding some information in the PR description on what LLDB tests are impacted by this would also be helpful. There are some existing issues related to enabling the lit internal shell in LLDB, and adding a link to those (particularly https://github.com/llvm/llvm-project/issues/102698, none of the others look relevant) wouldn't hurt.",2025-09-01T03:59:10Z,156125
3178570431,boomanaiden154,,2025-09-03T00:38:42Z,156125
3181735021,arichardson,,2025-09-03T17:26:06Z,156125
3182200405,cmtice,,2025-09-03T19:53:34Z,156125
3171535212,joker-eph,,2025-08-31T09:42:42Z,156123
3174751528,Andres-Salamanca,,2025-09-02T02:58:21Z,156124
3176656062,xlauko,"lgtm, with minor nits",2025-09-02T13:53:18Z,156124
3177359705,mmha,LGTM,2025-09-02T16:38:01Z,156124
3177495810,andykaylor,,2025-09-02T17:23:21Z,156124
3170716683,andykaylor,"This looks good, but I have some questions and a couple of suggestions.",2025-08-29T23:43:27Z,156122
3176608113,erichkeane,,2025-09-02T13:39:43Z,156122
3177155878,andykaylor,,2025-09-02T15:45:35Z,156122
3177159842,andykaylor,lgtm,2025-09-02T15:46:26Z,156122
3177202498,erichkeane,,2025-09-02T15:56:33Z,156122
3170616686,JDevlieghere,Thank you!,2025-08-29T22:56:35Z,156118
3170741093,svkeerthy,,2025-08-29T23:52:42Z,156120
3170744274,svkeerthy,,2025-08-29T23:58:35Z,156120
3170761277,mtrofin,,2025-08-30T00:32:46Z,156120
3170761791,mtrofin,,2025-08-30T00:33:39Z,156120
3170801135,boomanaiden154,,2025-08-30T01:17:44Z,156120
3170509536,JDevlieghere,,2025-08-29T22:33:14Z,156117
3170513539,clementval,,2025-08-29T22:34:09Z,156115
3170514998,clementval,,2025-08-29T22:34:31Z,156116
3170363256,alexey-bataev,,2025-08-29T21:44:22Z,156110
3170411654,clementval,LGTM! Thanks,2025-08-29T21:59:37Z,156109
3170299687,mysterymath,,2025-08-29T21:21:47Z,156107
3170743530,drodriguez,,2025-08-29T23:56:56Z,156108
3177137989,jansvoboda11,,2025-09-02T15:42:14Z,156108
3185995435,jhuber6,,2025-09-04T15:52:57Z,156104
3170779955,aheejin,LGTM % the test comment,2025-08-30T01:04:11Z,156105
3177486697,dschuff,,2025-09-02T17:20:47Z,156105
3177653413,aheejin,,2025-09-02T18:20:20Z,156105
3178040025,QuantumSegfault,,2025-09-02T20:37:02Z,156105
3178085250,QuantumSegfault,"This fix works for me.

I considered opening a PR myself, but wasn't sure the problem/fix was as simple as it seemed (and is).",2025-09-02T20:49:22Z,156105
3170113554,ashgti,LGTM!,2025-08-29T20:35:09Z,156101
3170228442,vitalybuka,,2025-08-29T20:57:52Z,156103
3170333954,JDevlieghere,,2025-08-29T21:32:04Z,156099
3171225115,nikic,"LGTM, assuming the intended usage model for these does not include introspection of memory at the time of trap.",2025-08-30T20:45:03Z,156100
3198618630,pcc,,2025-09-09T00:45:21Z,156100
3170067216,s-barannikov,,2025-08-29T20:24:31Z,156098
3170853744,arsenm,,2025-08-30T03:38:24Z,156098
3171689619,nikic,"LGTM, but please do not submit further PRs of this kind. The improvement here is very debatable, and reviewing this is a waste of my time.",2025-08-31T15:48:44Z,156097
3170075055,clementval,LGTM. Does it work also on windows? ,2025-08-29T20:26:26Z,156095
3177545283,bob80905,,2025-09-02T17:40:28Z,156094
3178747653,shafik,LGTM,2025-09-03T02:29:41Z,156094
3169988603,Artem-B,,2025-08-29T20:02:09Z,156088
3170250294,andykaylor,"Looks good, but without calling convention lowering it's not very useful.",2025-08-29T21:07:18Z,156092
3170507842,andykaylor,,2025-08-29T22:32:48Z,156092
3171009157,RKSimon,LGTM ,2025-08-30T11:21:18Z,156086
3169999757,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This patch adds load and store operations to the ptr dialect, enabling memory access operations with support for atomic, volatile, and nontemporal attributes. Additionally, it fixes a bug in `OptionalProp` that was causing premature termination when writing optional properties with default values to bytecode.

- Add load and store operations with comprehensive memory access semantics
- Fix bytecode serialization bug for optional properties
- Update memory space interface to use `std::optional<int64_t>` for alignment parameters

### Reviewed Changes

Copilot reviewed 10 out of 10 changed files in this pull request and generated 2 comments.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| mlir/include/mlir/Dialect/Ptr/IR/PtrOps.td | Defines new load and store operations with their properties and assembly format |
| mlir/lib/Dialect/Ptr/IR/PtrDialect.cpp | Implements verification, effects, and builders for load/store operations |
| mlir/include/mlir/IR/Properties.td | Fixes OptionalProp bytecode serialization by correcting control flow |
| mlir/include/mlir/Dialect/Ptr/IR/MemorySpaceInterfaces.td | Updates interface method signatures to use optional alignment |
| mlir/include/mlir/Dialect/Ptr/IR/PtrEnums.td | Changes enum types from I64 to I32 for AtomicBinOp and AtomicOrdering |
| mlir/test/Dialect/Ptr/ops.mlir | Adds comprehensive tests for new load and store operations |
| mlir/test/Dialect/Ptr/invalid.mlir | Adds tests for invalid alignment and memory space validation |
</details>




",2025-08-29T20:05:21Z,156093
3171516924,joker-eph,,2025-08-31T09:08:34Z,156093
3171517371,joker-eph,,2025-08-31T09:10:06Z,156093
3171517523,joker-eph,,2025-08-31T09:10:39Z,156093
3171517986,joker-eph,,2025-08-31T09:12:14Z,156093
3171591425,fabianmcg,,2025-08-31T11:58:19Z,156093
3171627494,joker-eph,,2025-08-31T13:33:23Z,156093
3171628048,joker-eph,,2025-08-31T13:35:20Z,156093
3171630649,fabianmcg,,2025-08-31T13:42:45Z,156093
3171632154,fabianmcg,,2025-08-31T13:46:38Z,156093
3171696993,joker-eph,,2025-08-31T16:12:34Z,156093
3171697109,joker-eph,,2025-08-31T16:12:55Z,156093
3171721674,fabianmcg,,2025-08-31T17:07:33Z,156093
3170744357,andykaylor,"Looks good, with just a couple of test requests.",2025-08-30T00:01:25Z,156085
3171107895,Andres-Salamanca,,2025-08-30T16:12:55Z,156085
3171111724,Andres-Salamanca,,2025-08-30T16:21:43Z,156085
3177162865,andykaylor,,2025-09-02T15:47:18Z,156085
3178697075,bcardosolopes,LGTM after nits,2025-09-03T01:47:35Z,156085
3178716728,Andres-Salamanca,,2025-09-03T02:03:34Z,156085
3169902400,gysit,"Thanks for the followup.

LGTM

Can you update the base class for DILexicalBlockAttr and DILexicalBlockFileAttr as well? It seems like this is an inconsistency from a previous refactor.",2025-08-29T19:43:24Z,156081
3176078591,abidh,,2025-09-02T11:12:26Z,156081
3176287995,abidh,,2025-09-02T12:18:04Z,156081
3176323691,gysit,,2025-09-02T12:27:42Z,156081
3169826805,maksfb,Thanks!,2025-08-29T19:22:17Z,156083
3169818720,maksfb,Thanks!,2025-08-29T19:20:36Z,156082
3169692371,vzakhari,,2025-08-29T18:36:11Z,156078
3169698641,clementval,,2025-08-29T18:38:53Z,156078
3169741799,clementval,,2025-08-29T18:54:05Z,156078
3169752298,vzakhari,,2025-08-29T18:59:07Z,156078
3169704781,clementval,Thanks for the fix!,2025-08-29T18:40:53Z,156080
3169670464,klausler,,2025-08-29T18:26:02Z,156077
3169673382,vzakhari,Thank you!,2025-08-29T18:27:26Z,156077
3169674425,klausler,"Are you sure that it makes sense to call llvm_unreachable() in the runtime??

Might be better to declare `ReportUnsupportedChildIo` as not returning.",2025-08-29T18:27:51Z,156077
3169740428,klausler,,2025-08-29T18:53:35Z,156077
3169688064,mustartt,"Thanks, LGTM",2025-08-29T18:34:21Z,156076
3178196415,hekota,"Could you please add test showing the new constructors AST structure to:

clang/test/AST/HLSL/TypedBuffers-AST.hlsl
clang/test/AST/HLSL/StructuredBuffers-AST.hlsl
clang/test/AST/HLSL/TypedBuffers-AST.hlsl",2025-09-02T21:59:05Z,156075
3178255553,hekota,,2025-09-02T22:01:19Z,156075
3181594726,s-perron,,2025-09-03T17:02:46Z,156075
3181789361,s-perron,,2025-09-03T17:44:10Z,156075
3181930359,hekota,,2025-09-03T18:24:32Z,156075
3182297532,s-perron,,2025-09-03T20:17:17Z,156075
3182390147,hekota,,2025-09-03T20:40:45Z,156075
3182392205,hekota,,2025-09-03T20:41:38Z,156075
3183150929,s-perron,,2025-09-04T01:59:36Z,156075
3183306589,hekota,,2025-09-04T03:39:34Z,156075
3187206064,shafik,Mostly minor comments,2025-09-04T20:51:41Z,156075
3187305237,hekota,,2025-09-04T21:27:20Z,156075
3189630556,s-perron,,2025-09-05T14:34:05Z,156075
3189631098,s-perron,,2025-09-05T14:34:15Z,156075
3190573675,hekota,LGTM!,2025-09-05T19:37:09Z,156075
3169570662,NagyDonat,,2025-08-29T17:49:10Z,156073
3173427138,NagyDonat,,2025-09-01T12:21:53Z,156073
3174194394,NagyDonat,,2025-09-01T16:41:22Z,156073
3175467529,steakhal,"Looks reasonable to me.
Thank you!",2025-09-02T08:37:42Z,156073
3175587913,steakhal,,2025-09-02T09:06:35Z,156073
3176050071,NagyDonat,,2025-09-02T11:02:42Z,156073
3176084354,NagyDonat,,2025-09-02T11:14:31Z,156073
3176087019,NagyDonat,,2025-09-02T11:15:30Z,156073
3176101662,steakhal,,2025-09-02T11:20:40Z,156073
3181668139,vzakhari,,2025-09-03T17:11:36Z,156064
3182144748,valerydmit,LGTM. Thank you!,2025-09-03T19:33:06Z,156064
3185103872,tblah,"LGTM, thanks for the fix",2025-09-04T12:51:09Z,156064
3185564056,jeanPerier,"LGTM, thanks!",2025-09-04T14:15:05Z,156064
3169615519,jurahul,,2025-08-29T18:04:45Z,156059
3169523852,petrhosek,,2025-08-29T17:30:39Z,156060
3170735802,dyung,,2025-08-29T23:44:11Z,156056
3172446047,balazske,,2025-09-01T07:35:49Z,156056
3178607445,dyung,,2025-09-03T00:57:42Z,156056
3170856202,var-const,,2025-08-30T03:51:52Z,156054
3169577424,nikic,This should happen in the InferAlignment pass instead.,2025-08-29T17:52:15Z,156057
3171226724,nikic,,2025-08-30T20:52:44Z,156057
3171231056,nikic,LGTM,2025-08-30T21:07:16Z,156057
3171278480,arsenm,,2025-08-31T00:19:32Z,156057
3171546348,RKSimon,LGTM with one very petty minor - cheers!,2025-08-31T09:59:57Z,156057
3169358596,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This patch adds conversion support from the `ptr` dialect to the LLVM dialect, enabling users to convert pointer operations and types to their LLVM equivalents. This is a stopgap measure allowing immediate use of the `ptr` dialect before some conversions are moved to translation in the future.

- Implements LLVM conversions for all existing `ptr` dialect operations
- Adds comprehensive test coverage for various pointer and memref scenarios 
- Integrates the conversion into the MLIR build system and registration

### Reviewed Changes

Copilot reviewed 6 out of 6 changed files in this pull request and generated no comments.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| mlir/test/Conversion/PtrToLLVM/ptr-to-llvm.mlir | Comprehensive test suite covering all ptr dialect operations and edge cases |
| mlir/lib/RegisterAllExtensions.cpp | Registers the new PtrToLLVM conversion interface |
| mlir/lib/Conversion/PtrToLLVM/PtrToLLVM.cpp | Core implementation of conversion patterns for all ptr dialect operations |
| mlir/lib/Conversion/PtrToLLVM/CMakeLists.txt | Build configuration for the new conversion library |
| mlir/lib/Conversion/CMakeLists.txt | Adds PtrToLLVM subdirectory to the build |
| mlir/include/mlir/Conversion/PtrToLLVM/PtrToLLVM.h | Header file with public API declarations |
</details>




",2025-08-29T16:29:02Z,156053
3169380376,joker-eph,,2025-08-29T16:36:36Z,156053
3188379986,labath,We could potentially also drop the char_traits thingy.,2025-09-05T07:57:03Z,156050
3170828799,phoebewang,LGTM.,2025-08-30T02:33:44Z,156047
3169557257,SLTozer,"LGTM, thanks for this!",2025-08-29T17:42:57Z,156045
3169591555,fhahn,@SLTozer do you know if there's any way to test this in a lit test?,2025-08-29T17:56:35Z,156045
3170005245,fhahn,"LGTM, thanks!

> Unfortunately not - by design, this is NFC unless the DebugLoc coverage tracking CMake flag is turned on, and even when it is enabled there is no IR representation for annotated locations currently - the only visible output from this change will be in Debugify's bug reporting (as run on the [buildbot](https://lab.llvm.org/staging/#/builders/222)).

Ah I see, so there's no option to enable it just for opt.",2025-08-29T20:06:50Z,156045
3169110975,mgorny,I can confirm that the tests pass with this change. Thanks for the quick action!,2025-08-29T15:09:26Z,156041
3169084396,erichkeane,,2025-08-29T15:16:28Z,156042
3169143293,jhuber6,,2025-08-29T15:18:39Z,156042
3169144930,jhuber6,,2025-08-29T15:19:16Z,156042
3169167876,erichkeane,,2025-08-29T15:26:56Z,156042
3169185400,jhuber6,,2025-08-29T15:33:08Z,156042
3169195641,erichkeane,,2025-08-29T15:45:34Z,156042
3169239814,jhuber6,,2025-08-29T15:54:47Z,156042
3169251964,erichkeane,,2025-08-29T15:58:17Z,156042
3169252555,erichkeane,,2025-08-29T15:58:30Z,156042
3169049934,jayfoad,,2025-08-29T14:50:13Z,156038
3176272794,dstutt,,2025-09-02T12:14:28Z,156038
3176275832,piotrAMD,,2025-09-02T12:15:09Z,156038
3176277786,piotrAMD,"LGTM

EDIT, modulo comment about grep. Before approving I did check that there were already ""grep"" present in the existing tests, just didn't know about the deprecation.",2025-09-02T12:15:34Z,156038
3176331141,piotrAMD,,2025-09-02T12:29:37Z,156038
3177077971,jayfoad,,2025-09-02T15:26:42Z,156038
3177093038,jayfoad,,2025-09-02T15:30:45Z,156038
3177130814,broxigarchen,,2025-09-02T15:40:43Z,156038
3177150301,dstutt,LGTM,2025-09-02T15:44:42Z,156038
3169449870,boomanaiden154,"LGTM. Thanks. I was meaning to put this back in yesterday.

This should go a lot better than the last time we tried to enable `lfnag-rt` now that we have fully migrated to the runtimes build and don't need to stuff `flang-rt` in with the libc++ testing.",2025-08-29T17:02:35Z,156039
3169624092,nikic,,2025-08-29T18:06:46Z,156039
3172129964,lukel97,LGTM,2025-09-01T05:25:59Z,156037
3172338934,fhahn,"LGTM, thanks",2025-09-01T07:06:32Z,156037
3169075395,erichkeane,"A few nits, else this LGTM.",2025-08-29T14:59:14Z,156036
3169458680,andykaylor,lgtm,2025-08-29T17:05:03Z,156036
3175265416,davemgreen,"LGTM

(I don't think you need to auto-upgrade anything too).",2025-09-02T07:39:40Z,156029
3169158186,mshahneo,,2025-08-29T15:27:31Z,156031
3169325711,ianayl,,2025-08-29T16:21:51Z,156031
3171134796,kuhar,,2025-08-30T17:36:30Z,156031
3177457096,ianayl,,2025-09-02T17:12:24Z,156031
3177459703,ianayl,,2025-09-02T17:13:18Z,156031
3177465377,kuhar,,2025-09-02T17:15:46Z,156031
3177530830,ianayl,,2025-09-02T17:34:59Z,156031
3177586819,kuhar,,2025-09-02T17:55:38Z,156031
3178862002,ianayl,,2025-09-03T04:00:46Z,156031
3180764324,kuhar,LGTM % formatting nits,2025-09-03T13:49:11Z,156031
3169064325,DavidSpickett,"You might be able to apply the skip to the class, instead of repeating it for each function. Can you try that?

One test for example does this:
```
# Windows does not allow quotes in file names.
@skipIf(hostoslist=[""windows""])
@skipIfRemote
class TestGdbRemoteLibrariesSvr4Support(gdbremote_testcase.GdbRemoteTestCaseBase):
    FEATURE_NAME = ""qXfer:libraries-svr4:read""
```
Certain decorators might not work in that position though, so give it a go.",2025-08-29T14:55:52Z,156026
3169147121,DavidSpickett,LGTM!,2025-08-29T15:19:59Z,156026
3182033552,alinas,"Thank you for this update, that's some old code in there.

> The fixupDefs() implementation was also returning after updating a single access, which is not right.

This was a ""how did this ever work O.o"" moment...
",2025-09-03T20:31:19Z,156021
3168661570,RKSimon,,2025-08-29T13:02:18Z,156019
3170227962,shafik,I would have expected additional test coverage since this looks like it would change behavior for out of bound shift amounts.,2025-08-29T20:57:37Z,156019
3169086414,paulwalker-arm,"FYI: I have some WIP work to improve handling of INDEX, specifically to allow finer control for emitting a specific variant.",2025-08-29T15:21:49Z,156024
3168793912,tbaederr,,2025-08-29T13:44:43Z,156017
3168797527,RKSimon,,2025-08-29T13:45:54Z,156017
3168802124,tbaederr,,2025-08-29T13:47:24Z,156017
3169057922,tblah,"Thanks Michael. Makes sense to me but please wait for another review.

David and Pawel: this came up because of a missconfiguration of one of our internal CI bots. We have fixed that configuration now but I mentioned it to Michael anyway as it seemed like a regression.",2025-08-29T14:52:40Z,156018
3169224066,pawosm-arm,,2025-08-29T15:48:25Z,156018
3169635534,pawosm-arm,,2025-08-29T18:11:37Z,156018
3172168126,lukel97,,2025-09-01T05:45:50Z,156016
3172342680,fhahn,"LGTM, thanks",2025-09-01T07:08:05Z,156016
3169652537,fhahn,"LGTM, thanks",2025-08-29T18:17:51Z,156014
3168726837,nikic,"LGTM, assuming no compile-time impact.

If there is impact, could try doing something like `findExistingSCEVInCache(scAddExpr, Expr->operands().drop_begin())` to avoid creating and optimizing an add expression for this lookup.",2025-08-29T13:23:35Z,156013
3168396395,yonillasky,,2025-08-29T11:28:01Z,156007
3168413890,Dinistro,,2025-08-29T11:35:20Z,156007
3168503038,gysit,,2025-08-29T12:08:21Z,156007
3172210740,gysit,LGTM,2025-09-01T06:08:57Z,156007
3172217233,ChuanqiXu9,I am curious about your downstream project using LLVM's coroutine intrinsics.,2025-09-01T06:12:30Z,156007
3168655035,KanRobert,,2025-08-29T13:00:12Z,156002
3168664384,RKSimon,Please can you add test coverage for #155828 as well,2025-08-29T13:03:08Z,156002
3180580569,jmorse,LGTM,2025-09-03T13:03:48Z,156005
3169339922,PragmaTwice,,2025-08-29T16:25:02Z,156000
3169345957,PragmaTwice,,2025-08-29T16:26:20Z,156000
3169460356,PragmaTwice,,2025-08-29T17:05:52Z,156000
3171952501,PragmaTwice,,2025-09-01T02:20:03Z,156000
3171999919,PragmaTwice,,2025-09-01T03:16:35Z,156000
3172355649,PragmaTwice,,2025-09-01T07:12:18Z,156000
3173335514,jpienaar,,2025-09-01T11:48:47Z,156000
3173345812,jpienaar,,2025-09-01T11:52:49Z,156000
3173673887,PragmaTwice,,2025-09-01T13:28:35Z,156000
3173709672,PragmaTwice,,2025-09-01T13:36:57Z,156000
3173960413,PragmaTwice,,2025-09-01T14:52:38Z,156000
3173963127,rolfmorel,,2025-09-01T14:53:45Z,156000
3173698909,joker-eph,,2025-09-01T14:59:44Z,156000
3174068692,PragmaTwice,,2025-09-01T15:36:03Z,156000
3174726713,makslevental,I need to take another pass (not pun intended) but here are some initial non-nit comments.,2025-09-02T02:43:21Z,156000
3174779277,PragmaTwice,,2025-09-02T03:29:20Z,156000
3175050341,PragmaTwice,,2025-09-02T06:29:17Z,156000
3175063113,PragmaTwice,,2025-09-02T06:33:24Z,156000
3175095832,PragmaTwice,,2025-09-02T06:44:37Z,156000
3175723087,PragmaTwice,,2025-09-02T09:38:28Z,156000
3196295092,rolfmorel,,2025-09-08T12:27:26Z,156000
3196300153,rolfmorel,,2025-09-08T12:28:45Z,156000
3196420858,PragmaTwice,,2025-09-08T12:55:47Z,156000
3196431776,makslevental,,2025-09-08T12:58:49Z,156000
3196450425,makslevental,,2025-09-08T13:04:00Z,156000
3196461314,rolfmorel,,2025-09-08T13:07:07Z,156000
3196502310,makslevental,,2025-09-08T13:17:54Z,156000
3196503568,rolfmorel,,2025-09-08T13:18:15Z,156000
3196503938,makslevental,,2025-09-08T13:18:21Z,156000
3196615940,makslevental,,2025-09-08T13:43:00Z,156000
3197250072,jakubtuchol,,2025-09-08T16:21:38Z,156000
3197256339,makslevental,,2025-09-08T16:23:17Z,156000
3197347858,PragmaTwice,,2025-09-08T16:53:39Z,156000
3197387716,makslevental,Excellent work! Bravo!,2025-09-08T17:06:50Z,156000
3197415279,rolfmorel,Looks fine to me. We can iterate on it when we get to supporting dependent dialects.,2025-09-08T17:21:43Z,156000
3197461811,makslevental,,2025-09-08T17:32:37Z,156000
3197463547,makslevental,,2025-09-08T17:33:14Z,156000
3168681956,zero9178,,2025-08-29T13:09:09Z,155997
3168062404,RKSimon,,2025-08-29T09:33:45Z,155995
3168080727,bojle,,2025-08-29T09:38:32Z,155995
3169104679,topperc,,2025-08-29T15:07:40Z,155995
3169504800,mshockwave,,2025-08-29T17:22:34Z,155995
3171012282,bojle,,2025-08-30T11:35:31Z,155995
3171018735,bojle,,2025-08-30T12:07:30Z,155995
3171094302,topperc,,2025-08-30T15:43:08Z,155995
3171096593,topperc,,2025-08-30T15:45:40Z,155995
3171125693,bojle,,2025-08-30T16:58:52Z,155995
3171132640,bojle,,2025-08-30T17:24:10Z,155995
3171292917,topperc,,2025-08-31T01:29:36Z,155995
3171293040,topperc,,2025-08-31T01:30:31Z,155995
3171759849,topperc,LGTM,2025-08-31T18:54:04Z,155995
3179915153,RKSimon,,2025-09-03T10:04:17Z,155995
3180327767,bojle,,2025-09-03T12:08:02Z,155995
3180665591,RKSimon,,2025-09-03T13:24:39Z,155995
3181264321,topperc,,2025-09-03T15:44:08Z,155995
3170697361,kevinsala,LGTM,2025-08-29T23:19:13Z,155990
3172329238,SixWeining,,2025-09-01T07:03:11Z,155994
3168822590,lei137,please address nit before commit.,2025-08-29T13:54:22Z,155991
3170841415,Himadhith,,2025-08-30T02:51:28Z,155991
3170841426,Himadhith,,2025-08-30T02:51:33Z,155991
3172079205,tonykuttai,LGTM,2025-09-01T04:46:11Z,155991
3168453225,gysit,"LGTM but let's give other reviewers that are more familiar with this part of the code base a chance to review as well.
",2025-08-29T11:50:57Z,155989
3196877588,bhandarkar-pranav,"Thank you for the PR, @ergawy. I have left some minor comments.",2025-09-09T05:00:23Z,155987
3199299159,ergawy,,2025-09-09T05:42:48Z,155987
3199342765,ergawy,,2025-09-09T05:50:40Z,155987
3199343946,ergawy,,2025-09-09T05:50:46Z,155987
3199345981,ergawy,,2025-09-09T05:51:03Z,155987
3201325358,skatrak,"Thank you Kareem, this generally LGTM. Just a couple of small comments.",2025-09-09T14:16:32Z,155987
3204326741,bhandarkar-pranav,"LGTM, but please wait for @skatrak to approve before merging.",2025-09-10T03:56:05Z,155987
3204886598,ergawy,,2025-09-10T07:45:46Z,155987
3204886915,ergawy,,2025-09-10T07:45:52Z,155987
3204887183,ergawy,,2025-09-10T07:45:58Z,155987
3204887549,ergawy,,2025-09-10T07:46:05Z,155987
3204887851,ergawy,,2025-09-10T07:46:10Z,155987
3204888434,ergawy,,2025-09-10T07:46:21Z,155987
3204888771,ergawy,,2025-09-10T07:46:28Z,155987
3205713145,skatrak,"Thanks for the updates, LGTM. Just a minor tweak request.",2025-09-10T11:30:38Z,155987
3205936604,ergawy,,2025-09-10T12:30:10Z,155987
3167826599,zero9178,,2025-08-29T08:16:36Z,155985
3175332473,lukel97,,2025-09-02T08:01:05Z,155981
3175349915,fhahn,,2025-09-02T08:08:40Z,155981
3176510465,alexey-bataev,,2025-09-02T13:13:01Z,155981
3176631125,Mel-Chen,,2025-09-02T13:42:06Z,155981
3176636641,Mel-Chen,,2025-09-02T13:43:08Z,155981
3177589179,fhahn,"LGTM, thanks",2025-09-02T17:56:26Z,155981
3168317516,arsenm,,2025-08-29T10:55:27Z,155978
3169143750,EugeneZelenko,,2025-08-29T15:20:53Z,155982
3171275772,flovent,,2025-08-31T00:00:34Z,155982
3171285028,HerrCai0907,"LGTM.
since you have already changing the matcher a lot. could you give more meaningful name for each locals. e.g. Any, Condition, ...",2025-08-31T01:05:38Z,155982
3171309259,zwuis,,2025-08-31T02:16:58Z,155982
3171326331,flovent,,2025-08-31T03:08:29Z,155982
3171837157,HerrCai0907,,2025-08-31T23:30:52Z,155982
3171954188,zwuis,,2025-09-01T02:22:10Z,155982
3181028015,EugeneZelenko,,2025-09-03T14:43:59Z,155982
3194577253,vbvictor,LGTM,2025-09-07T20:19:16Z,155982
3194621517,EugeneZelenko,,2025-09-07T22:01:40Z,155982
3167564050,nikic,,2025-08-29T06:43:13Z,155977
3169143035,tgymnich,,2025-08-29T15:18:33Z,155977
3167414604,arsenm,,2025-08-29T05:31:16Z,155976
3168321491,arsenm,,2025-08-29T10:57:08Z,155975
3168710084,kuhar,,2025-08-29T13:18:12Z,155975
3168323853,arsenm,,2025-08-29T10:58:06Z,155974
3168711109,kuhar,,2025-08-29T13:18:22Z,155974
3167394107,topperc,LGTM,2025-08-29T05:18:34Z,155973
3167386257,topperc,,2025-08-29T05:17:42Z,155972
3167411165,ReVe1uv,,2025-08-29T05:29:13Z,155972
3167564058,ReVe1uv,,2025-08-29T06:43:13Z,155972
3168303870,arsenm,,2025-08-29T10:53:53Z,155972
3169300792,ReVe1uv,,2025-08-29T16:13:13Z,155972
3169435518,ReVe1uv,,2025-08-29T16:55:50Z,155972
3170057865,topperc,LGTM,2025-08-29T20:21:56Z,155972
3170890451,ReVe1uv,,2025-08-30T06:04:05Z,155972
3167415051,MaskRay,,2025-08-29T05:31:34Z,155970
3167415246,MaskRay,,2025-08-29T05:31:41Z,155970
3169377949,davidtrevelyan,,2025-08-29T16:35:36Z,155970
3167243003,phoebewang,"LGTM, thanks!",2025-08-29T03:44:25Z,155968
3167332183,arsenm,,2025-08-29T04:37:41Z,155966
3167192274,vitalybuka,LGTM if cast is acceptable ,2025-08-29T03:07:18Z,155964
3167240823,SixWeining,,2025-08-29T03:42:54Z,155964
3167160666,arsenm,,2025-08-29T02:42:49Z,155961
3167236265,jacquesguan,,2025-08-29T03:38:40Z,155961
3168322658,arsenm,,2025-08-29T10:57:37Z,155961
3169147620,topperc,LGTM,2025-08-29T15:20:10Z,155961
3167152503,mtrofin,,2025-08-29T02:35:54Z,155957
3167150859,zhaoqi5,,2025-08-29T02:34:40Z,155960
3167153623,zhaoqi5,,2025-08-29T02:36:57Z,155960
3167463692,heiher,,2025-08-29T05:58:49Z,155960
3167540937,tangaac,,2025-08-29T06:32:26Z,155960
3171063202,heiher,,2025-08-30T14:36:27Z,155960
3172666623,heiher,LGTM. Thanks!,2025-09-01T08:35:11Z,155960
3172813646,tangaac,,2025-09-01T09:11:58Z,155960
3172838937,heiher,,2025-09-01T09:20:08Z,155960
3169532623,petrhosek,,2025-08-29T17:33:14Z,155958
3170916024,MaskRay,,2025-08-30T06:52:46Z,155955
3167497687,kbeyls,It makes a lot of sense to merge this to the release branch.,2025-08-29T06:11:58Z,155954
3167905941,DavidSpickett,"TIL what FPA is https://developer.arm.com/documentation/dui0056/d/using-the-procedure-call-standard/floating-point-options/the-fpa-architecture. Sort of, never come across it before. We don't have the register details for it anyway so makes sense to ignore it.

Agree with adding this feature, have some comments on the implementation.",2025-08-29T08:58:30Z,155956
3170772810,igorkudrin,,2025-08-30T00:58:13Z,155956
3170776451,igorkudrin,,2025-08-30T01:00:48Z,155956
3170803309,igorkudrin,,2025-08-30T01:23:46Z,155956
3170821078,igorkudrin,,2025-08-30T01:58:44Z,155956
3172716430,DavidSpickett,,2025-09-01T08:45:56Z,155956
3172769315,DavidSpickett,,2025-09-01T08:58:51Z,155956
3172776019,DavidSpickett,,2025-09-01T09:00:54Z,155956
3172800022,DavidSpickett,,2025-09-01T09:07:44Z,155956
3183638122,igorkudrin,,2025-09-04T06:25:30Z,155956
3184863346,DavidSpickett,"I wanted to say merge this into the existing `linux-arm.core` but I can't find any source for it.

So I'm ok with this being its own thing, and if you do have time, extending it to set GPR and replacing the existing core file would be great.",2025-09-04T12:14:27Z,155956
3187478636,igorkudrin,,2025-09-04T22:46:53Z,155956
3195721385,DavidSpickett,LGTM,2025-09-08T09:29:27Z,155956
3166958572,lenary,LGTM,2025-08-29T00:16:15Z,155950
3168366808,tblah,"LGTM.

nit: I agree the tests should be updated. I don't mind doing that for you in a separate PR if you don't have time. I understand the test conflicts are only because of my revert.",2025-08-29T11:15:37Z,155949
3167061823,ChuanqiXu9,,2025-08-29T01:40:33Z,155947
3166901848,charithaintc,LGTM % comments. ,2025-08-28T23:37:37Z,155946
3166926569,mshahneo,LGTM.,2025-08-28T23:50:21Z,155946
3167868254,DavidSpickett,"LGTM, thanks!",2025-08-29T08:31:06Z,155942
3166841553,fmayer,,2025-08-28T23:18:32Z,155944
3170750865,vitalybuka,,2025-08-30T00:12:44Z,155944
3170769175,thurstond,,2025-08-30T00:48:56Z,155944
3170820765,vitalybuka,,2025-08-30T01:57:14Z,155944
3170821725,vitalybuka,,2025-08-30T02:01:41Z,155944
3170821771,vitalybuka,,2025-08-30T02:01:52Z,155944
3170826582,thurstond,,2025-08-30T02:23:22Z,155944
3170829318,thurstond,,2025-08-30T02:35:50Z,155944
3170917940,vitalybuka,,2025-08-30T06:58:57Z,155944
3170920159,thurstond,,2025-08-30T07:07:34Z,155944
3183068756,vitalybuka,,2025-09-04T01:14:42Z,155944
3183127071,thurstond,,2025-09-04T01:41:17Z,155944
3187561968,thurstond,,2025-09-04T23:51:23Z,155944
3190877340,thurstond,,2025-09-05T21:51:04Z,155944
3166840459,fmayer,,2025-08-28T23:18:24Z,155943
3166913261,jimingham,,2025-08-28T23:37:40Z,155939
3166923848,jimingham,,2025-08-28T23:44:17Z,155939
3166925212,jimingham,,2025-08-28T23:45:30Z,155939
3166928603,jimingham,,2025-08-28T23:48:35Z,155939
3166930252,jimingham,,2025-08-28T23:50:10Z,155939
3166978909,jimingham,LGTM,2025-08-29T00:34:19Z,155939
3167607750,Michael137,,2025-08-29T07:02:09Z,155939
3166774144,tstellar,"This has a lot of unrelated changes, can you remove them.",2025-08-28T22:55:09Z,155938
3166733348,fmayer,,2025-08-28T22:25:07Z,155934
3166873444,lenary,LGTM,2025-08-28T23:25:49Z,155935
3167189668,wangpc-pp,LGTM when scanning the test diffs.,2025-09-01T06:45:21Z,155935
3173340819,lukel97,,2025-09-01T12:00:06Z,155935
3182880876,preames,,2025-09-03T23:33:01Z,155935
3182899893,topperc,,2025-09-03T23:39:04Z,155935
3182905481,preames,LGTM once style changes addressed (use reasonable judgement).  This is clearly a net improvement.  ,2025-09-03T23:43:59Z,155935
3182911868,preames,,2025-09-03T23:50:07Z,155935
3182912006,preames,,2025-09-03T23:50:14Z,155935
3182922506,topperc,,2025-09-03T23:59:58Z,155935
3182923995,topperc,,2025-09-04T00:01:22Z,155935
3166718399,fmayer,,2025-08-28T22:19:09Z,155933
3166732940,thurstond,,2025-08-28T22:25:01Z,155933
3167727225,philnik777,"I'd really like to know what the ""fallout"" here is before we merge something into a release branch that has perfectly defined behaviour.",2025-08-29T07:44:16Z,155932
3189276164,philnik777,"> > I'd really like to know what the ""fallout"" here is before we merge something into a release branch that has perfectly defined behaviour.
> 
> The fallout is that some people are running with `-fsanitize=unsigned-integer-overflow` and that started breaking. In our case, some folks were even running with that sanitizer in production and that caused runtime issues.
> 
> I disagree that this has perfectly well defined behavior. That's a pedantic way to view things.

Sure, it is, but that doesn't make it not be the case.

> We all agree that `log(0)` is undefined, and in fact our call to `log(0)` returned something that made no sense. The code only happened to work because we were then ignoring that invalid result due to other conditions (`first == last` inside `__introsort`).

I would agree that what we returned was not intentional, but that doesn't make it wrong or undefined.

Anyways, my real objection here was that the underlying issue isn't addressed - namely that we have no coverage for the integer sanitizer. Since there is a party willing to fix that now I'm happy with merging this.

",2025-09-05T13:01:40Z,155932
3166708777,efriedma-quic,"Please don't ""@"" people in commit messages; it interacts badly with GitHub.  Specifically, it causes a bunch of notification spam when people cherry-pick the change into various forks.

Otherwise LGTM.",2025-08-28T22:12:37Z,155930
3166993059,efriedma-quic,,2025-08-29T00:46:27Z,155930
3169580831,ilovepi,"LGTM. CI failures seem unrelated, so a rebase will probably fix.",2025-08-29T17:53:36Z,155926
3166892075,andykaylor,,2025-08-28T23:58:22Z,155924
3168746206,erichkeane,,2025-08-29T13:41:36Z,155924
3169024252,erichkeane,,2025-08-29T14:43:04Z,155924
3169072050,erichkeane,,2025-08-29T14:56:59Z,155924
3169133491,mmha,,2025-08-29T15:16:02Z,155924
3170505641,andykaylor,lgtm,2025-08-29T22:32:05Z,155924
3166581575,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR refactors the `ptxas` feature detection system in LLVM's lit testing framework to move from CUDA toolkit version-based checks to more granular ISA version and architecture-specific checks. This enables more precise testing by checking for specific SM architectures and PTX ISA versions that ptxas supports.

Key changes include:
- Refactored ptxas version detection and feature availability functions
- Updated test files to use new granular feature checks (`ptxas-sm_XX`, `ptxas-isa-X.Y`, `ptxas-ptr32`)
- Replaced broad version checks with specific capability-based checks

### Reviewed Changes

Copilot reviewed 175 out of 175 changed files in this pull request and generated no comments.

| File | Description |
| ---- | ----------- |
| llvm/test/lit.cfg.py | Completely refactored ptxas feature detection with new functions for ISA versions, SM architectures, and address size support |
| Various .ll/.py test files | Updated from version-based ptxas checks to granular feature-based checks using new ptxas-sm_XX and ptxas-isa-X.Y patterns |


<details>
<summary>Comments suppressed due to low confidence (3)</summary>




</details>

",2025-08-28T21:20:46Z,155923
3169689817,Artem-B,,2025-08-29T18:35:08Z,155923
3169820505,vvereschaka,"@justinfargnoli ,

I see `atomics-b128.ll` test failures on the windows builders:
```
FAIL: LLVM :: CodeGen/NVPTX/atomics-b128.ll (16886 of 60734)
******************** TEST 'LLVM :: CodeGen/NVPTX/atomics-b128.ll' FAILED ********************
Exit Code: 4294967295

Command Output (stdout):
--
# RUN: at line 2
not c:\buildbot\temp\build\bin\llc.exe < C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll -mcpu=sm_90 -mattr=+ptx82 2>&1 | c:\buildbot\temp\build\bin\filecheck.exe C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll --check-prefix=ERROR
# executed command: not 'c:\buildbot\temp\build\bin\llc.exe' -mcpu=sm_90 -mattr=+ptx82
# executed command: 'c:\buildbot\temp\build\bin\filecheck.exe' 'C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll' --check-prefix=ERROR
# RUN: at line 3
not c:\buildbot\temp\build\bin\llc.exe < C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll -mcpu=sm_80 -mattr=+ptx84 2>&1 | c:\buildbot\temp\build\bin\filecheck.exe C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll --check-prefix=ERROR
# executed command: not 'c:\buildbot\temp\build\bin\llc.exe' -mcpu=sm_80 -mattr=+ptx84
# executed command: 'c:\buildbot\temp\build\bin\filecheck.exe' 'C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll' --check-prefix=ERROR
# RUN: at line 4
c:\buildbot\temp\build\bin\llc.exe < C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll -mcpu=sm_90 -mattr=+ptx84 | c:\buildbot\temp\build\bin\filecheck.exe C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll --check-prefix=CHECK
# executed command: 'c:\buildbot\temp\build\bin\llc.exe' -mcpu=sm_90 -mattr=+ptx84
# executed command: 'c:\buildbot\temp\build\bin\filecheck.exe' 'C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll' --check-prefix=CHECK
# RUN: at line 5
c:\buildbot\temp\build\bin\llc.exe < C:\buildbot\temp\llvm-project\llvm\test\CodeGen\NVPTX\atomics-b128.ll -mcpu=sm_90 -mattr=+ptx84 | c:/buildbot/latest-cuda/bin/ptxas.exe -c - -arch=sm_90
# executed command: 'c:\buildbot\temp\build\bin\llc.exe' -mcpu=sm_90 -mattr=+ptx84
# executed command: c:/buildbot/latest-cuda/bin/ptxas.exe -c - -arch=sm_90
# .---command stdout------------
# | ptxas C:\Users\buildbot\AppData\Local\Temp\4\lit-tmp-xv6morib/tmpxft_000008d4_00000000-0_stdin, line 1082; error   : Unknown modifier '.seq_cst'
# | ptxas fatal   : Ptx assembly aborted due to errors
# `-----------------------------
# error: command failed with exit status: 0xffffffff

--

********************
```
I see the same problem on the windows buildbots for the past 20 hours.
https://lab.llvm.org/buildbot/#/builders/54/builds/12254/steps/7/logs/FAIL__LLVM__atomics-b128_ll

Do you plan to fix this test in the mainline?",2025-08-29T19:20:57Z,155923
3170548920,vvereschaka,Thank you @justinfargnoli ,2025-08-29T22:41:16Z,155923
3166544818,justinfargnoli,Approving to unblock CI.,2025-08-28T21:10:30Z,155921
3166549852,justinfargnoli,"Change LGTM, but it'd be nice to get a post-commit review from someone that reviewed #154852. ",2025-08-28T21:16:53Z,155921
3166608161,Artem-B,,2025-08-28T21:33:54Z,155921
3166609773,AlexMaclean,,2025-08-28T21:34:46Z,155921
3186741286,teresajohnson,,2025-09-04T18:57:25Z,155918
3167849807,philnik777,,2025-08-29T08:24:38Z,155916
3166440927,farzonl,,2025-08-28T20:38:24Z,155917
3166347245,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR reverts commit #154439 which refactored the available `ptxas` features. The revert restores the previous, simpler approach to managing ptxas version detection and feature availability in the LLVM test infrastructure.

- Simplifies ptxas version detection by removing complex ISA version mapping and SM architecture support detection
- Replaces granular `ptxas-isa-*` and `ptxas-sm_*` features with straightforward `ptxas-X.Y` version-based features
- Updates test conditions across numerous NVPTX test files to use the restored version-based feature checks

### Reviewed Changes

Copilot reviewed 174 out of 174 changed files in this pull request and generated no comments.

| File | Description |
| ---- | ----------- |
| llvm/test/lit.cfg.py | Reverts ptxas feature detection to simpler version-based approach, removing ISA and SM architecture checks |
| Multiple .ll/.py test files | Updates test conditions from `ptxas-isa-*`/`ptxas-sm_*` to `ptxas-X.Y` version checks or generic `ptxas` feature |


<details>
<summary>Comments suppressed due to low confidence (4)</summary>





</details>

",2025-08-28T20:09:13Z,155914
3166445405,vvereschaka,,2025-08-28T20:40:16Z,155914
3166496525,AlexMaclean,,2025-08-28T20:59:14Z,155914
3166348052,klausler,,2025-08-28T20:09:34Z,155913
3167013872,shafik,Thank you for the quick fix!,2025-08-29T01:04:29Z,155904
3166325533,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR replaces f-string formatting with `.format()` method calls for string formatting in the lit configuration file. The change affects error messages and feature name generation in PTXAS-related functions.

- Converts f-string literals to `.format()` method calls for consistency
- Updates RuntimeError messages and ToolSubst parameters
- Modifies feature name generation for PTXAS versions and architectures



",2025-08-28T20:03:55Z,155912
3166018676,devnexen,,2025-08-28T18:16:12Z,155899
3168730483,fhahn,,2025-08-29T13:28:10Z,155911
3168979187,nikic,,2025-08-29T14:31:15Z,155911
3169180847,nikic,,2025-08-29T15:31:23Z,155911
3169663542,fhahn,"LGTM, thanks",2025-08-29T18:23:07Z,155911
3169950309,nikic,,2025-08-29T19:52:03Z,155911
3171103661,dtcxzyw,,2025-08-30T16:01:09Z,155911
3166328279,eugeneepshteyn,,2025-08-28T20:04:35Z,155909
3166330073,eugeneepshteyn,,2025-08-28T20:04:47Z,155909
3166344539,klausler,,2025-08-28T20:08:16Z,155909
3166354180,akuhlens,,2025-08-28T20:11:55Z,155909
3166369350,klausler,,2025-08-28T20:18:01Z,155909
3166068502,rnk,"Thanks, I confirmed the provided test fails before this PR.",2025-08-28T18:31:35Z,155900
3166129893,mizvekov,,2025-08-28T18:53:47Z,155900
3166167178,RKSimon,,2025-08-28T19:07:28Z,155896
3165951179,lntue,,2025-08-28T17:53:59Z,155894
3168387881,tbaederr,,2025-08-29T11:24:18Z,155891
3165604565,asl,,2025-08-28T16:20:56Z,155877
3165619865,rampitec,,2025-08-28T16:25:50Z,155882
3166010725,topperc,,2025-08-28T18:13:17Z,155888
3171442494,sunshaoce,,2025-08-31T06:42:11Z,155888
3177349098,topperc,,2025-09-02T16:34:56Z,155888
3177545103,sunshaoce,,2025-09-02T17:40:24Z,155888
3186216477,topperc,,2025-09-04T16:54:52Z,155888
3186219172,topperc,,2025-09-04T16:55:51Z,155888
3186250646,sunshaoce,,2025-09-04T17:05:01Z,155888
3186360062,topperc,,2025-09-04T17:31:59Z,155888
3186391625,sunshaoce,,2025-09-04T17:38:14Z,155888
3186619652,topperc,,2025-09-04T18:29:14Z,155888
3186928456,sunshaoce,,2025-09-04T19:42:34Z,155888
3186950271,topperc,LGTM,2025-09-04T19:47:08Z,155888
3165602224,asl,,2025-08-28T16:20:09Z,155874
3165555494,tblah,,2025-08-28T16:07:44Z,155871
3165539540,nikic,,2025-08-28T16:02:38Z,155873
3165542978,nikic,,2025-08-28T16:03:43Z,155873
3168827138,Meinersbur,LGTM,2025-08-29T13:57:41Z,155873
3165978601,lntue,,2025-08-28T18:02:59Z,155869
3167754291,Stylie777,LGTM,2025-08-29T07:53:11Z,155872
3165552618,klausler,,2025-08-28T16:07:01Z,155867
3165909890,DanielCChen,,2025-08-28T17:41:52Z,155867
3166261389,DanielCChen,"LGTM.
It fixed all the test cases marked against this issue.
Thanks!",2025-08-28T19:39:43Z,155867
3166268643,klausler,"Please run the llvm-test-suite before merging; I think that GNU handles this case incorrectly and probably confirms it with a test; if so, it'll need to be disabled.",2025-08-28T19:42:59Z,155867
3166389369,akuhlens,,2025-08-28T20:26:29Z,155867
3166395215,akuhlens,,2025-08-28T20:28:55Z,155867
3165501580,jayfoad,,2025-08-28T15:51:26Z,155864
3165508736,rampitec,,2025-08-28T15:53:44Z,155864
3165529076,rampitec,,2025-08-28T15:59:41Z,155864
3182250577,Icohedron,,2025-09-03T20:03:23Z,155861
3182265468,bogner,,2025-09-03T20:07:11Z,155861
3191009391,alsepkow,Josh/Alex : LGTUS outside of some nits/general overview questions.,2025-09-05T23:35:37Z,155866
3191027228,bob80905,,2025-09-05T23:35:56Z,155866
3197512781,hekota,,2025-09-08T17:50:52Z,155866
3197522496,hekota,,2025-09-08T17:54:07Z,155866
3197530276,hekota,,2025-09-08T17:56:42Z,155866
3197531772,hekota,,2025-09-08T17:57:05Z,155866
3197544636,hekota,,2025-09-08T18:00:18Z,155866
3197559825,hekota,,2025-09-08T18:05:32Z,155866
3197582819,hekota,,2025-09-08T18:12:15Z,155866
3201783032,s-perron,LGTM,2025-09-09T13:59:10Z,155866
3206897755,bogner,LGTM. Minor comments on naming conventions and a potential code clean up,2025-09-10T16:32:17Z,155866
3165681035,kazutakahirata,LGTM.  Thank you for catching this!,2025-08-28T16:42:39Z,155862
3165772631,kuhar,,2025-08-28T17:13:50Z,155862
3165725227,bogner,,2025-08-28T16:58:31Z,155860
3165500487,RKSimon,Both expansions increase the number of uses of the operands - the operands need to be frozen. ,2025-08-28T15:51:04Z,155858
3166924549,christopherbate,LGTM,2025-08-28T23:44:54Z,155856
3166956740,arsenm,,2025-08-29T00:14:23Z,155854
3196190885,arsenm,,2025-09-08T11:55:25Z,155854
3165434254,EugeneZelenko,,2025-08-28T15:31:26Z,155852
3166370650,carlosgalvezp,"LGTM! Worth keeping in mind that this new .clang-format file makes clang-tidy potentially disconnected from the rest of the repo, in case the top-level file were to introduce new options. But hopefully everything is baked into the ""LLVM"" style.",2025-08-28T20:18:37Z,155852
3165678054,steakhal,"Looks sweet. I did the first round, I'll let others to finish the rest while I'm on vacation",2025-08-28T16:51:12Z,155855
3167503737,alejandro-alvarez-sonarsource,,2025-08-29T06:15:01Z,155855
3167510247,alejandro-alvarez-sonarsource,,2025-08-29T06:18:24Z,155855
3167510599,alejandro-alvarez-sonarsource,,2025-08-29T06:18:35Z,155855
3167511588,alejandro-alvarez-sonarsource,,2025-08-29T06:19:06Z,155855
3189176130,necto,I have approved this fix downstream,2025-09-05T12:28:48Z,155855
3189357594,steakhal,,2025-09-05T13:21:46Z,155855
3189609446,necto,,2025-09-05T14:28:50Z,155855
3167535948,davemgreen,"Is the instruction in https://developer.arm.com/architectures/instruction-sets/intrinsics/#q=vcvth_u32_f16 incorrect, and it should be the same as GCC in https://godbolt.org/z/3xjPe7b3z?

Are there U variants to go with the S variants?",2025-08-29T06:40:10Z,155851
3168251190,mrkajetanp,,2025-08-29T10:32:04Z,155851
3168667242,davemgreen,,2025-08-29T13:04:10Z,155851
3168689051,mrkajetanp,,2025-08-29T13:11:34Z,155851
3170137660,davemgreen,,2025-08-29T20:42:37Z,155851
3170154786,davemgreen,,2025-08-29T20:43:16Z,155851
3171119242,mrkajetanp,,2025-08-30T16:37:42Z,155851
3171560026,davemgreen,"LGTM, thanks",2025-08-31T10:33:38Z,155851
3169561539,petrhosek,,2025-08-29T17:45:09Z,155850
3169572387,ilovepi,,2025-08-29T17:49:58Z,155850
3168991875,Meinersbur,LGTM,2025-08-29T14:34:26Z,155848
3165287289,RKSimon,,2025-08-28T15:01:45Z,155847
3165295553,RKSimon,,2025-08-28T15:03:13Z,155847
3165313422,jayfoad,,2025-08-28T15:06:58Z,155847
3165424951,topperc,,2025-08-28T15:29:15Z,155847
3166384021,RKSimon,,2025-08-28T20:24:07Z,155847
3165606195,topperc,LGTM,2025-08-28T16:21:31Z,155845
3165260941,lenary,,2025-08-28T14:57:49Z,155843
3167018203,svs-quic,,2025-08-29T01:08:25Z,155843
3167026662,lenary,,2025-08-29T01:15:05Z,155843
3167037784,svs-quic,,2025-08-29T01:23:27Z,155843
3167301524,lenary,,2025-08-29T04:18:29Z,155843
3167793710,lenary,,2025-08-29T08:04:35Z,155843
3169088295,svs-quic,,2025-08-29T15:02:29Z,155843
3170945553,lenary,LGTM,2025-08-30T08:15:29Z,155843
3165550379,tblah,LGTM,2025-08-28T16:06:09Z,155840
3171776429,fhahn,"LGTM, thanks",2025-08-31T20:06:26Z,155842
3171776884,fhahn,,2025-08-31T20:07:41Z,155842
3165080336,alexey-bataev,,2025-08-28T14:24:09Z,155839
3165307503,ro-i,,2025-08-28T15:05:45Z,155839
3165065568,OCHyams,"We discussed moving away from supporting non-dap debuggers (& deprecating non-dap debugger controllers) , so with that in mind my preference would be to not fall back to LLDB (that slightly simplifies the testing matrix and aligns with our intentions). Wdyt?",2025-08-28T14:17:11Z,155838
3165568177,OCHyams,"Mostly LGTM, just a couple of minor questions",2025-08-28T16:13:40Z,155838
3168329872,SLTozer,,2025-08-29T11:00:35Z,155838
3168334668,SLTozer,,2025-08-29T11:02:34Z,155838
3168484064,OCHyams,LGTM,2025-08-29T12:03:38Z,155838
3166261625,HazardyKnusperkeks,,2025-08-28T19:39:49Z,155837
3167176073,owenca,,2025-08-29T02:59:07Z,155837
3171408732,hnakamura5,,2025-08-31T05:46:52Z,155837
3171423752,owenca,,2025-08-31T06:04:09Z,155837
3165553837,frasercrmck,"LGTM, thanks",2025-08-28T16:07:15Z,155836
3165694252,labrinea,,2025-08-28T16:47:31Z,155833
3165011810,kuhar,Can we add a unit test that shows how this is supposed to be used? I'm surprised using reinterpret_cast is allowed...,2025-08-28T14:03:56Z,155830
3165369779,zwuis,,2025-08-28T15:18:28Z,155831
3167385205,tbaederr,,2025-08-29T05:12:48Z,155831
3165832335,fhahn,"LGTM, thanks",2025-08-28T17:32:13Z,155834
3164854339,kasuga-fj,"While writing tests, I felt that we should first clarify the behavior of `SCEVDivision::divide`. Maybe something like the following?

- Given the `Numerator` and `Denominator`, find a pair `(Quotient, Remainder)` such that
    - `Numerator = Quotient * Denominator + Remainder`
    - The multiplication of `Quotient` and `Denominator` does not wrap in a signed sense
    - The addition of `Quotient*Denominator` and `Remainder` does not wrap in a signed sense
- The condition `Remainder < Denominator` is *not* necessarily required
- Multiple pairs `(Quotient, Remainder)` may satisfy the above conditions, and this function returns one of them
    - Especially, `(Quotient, Remainder) = (0, Numerator)` is a trivial one",2025-08-28T13:51:14Z,155832
3164988707,nikic,"Seeing these tests, I think the handling of multiplication is actually correct after all, if you take into account that SCEVDivision does not actually perform division (which we should document).",2025-08-28T14:05:33Z,155832
3165028328,nikic,,2025-08-28T14:08:10Z,155832
3165046812,nikic,,2025-08-28T14:12:33Z,155832
3165260113,kasuga-fj,,2025-08-28T15:35:59Z,155832
3165599670,nikic,LGTM,2025-08-28T16:19:57Z,155832
3168117218,kasuga-fj,,2025-08-29T09:50:01Z,155832
3164723200,jhuber6,,2025-08-28T12:49:08Z,155823
3164557094,Pierre-vh,,2025-08-28T12:01:09Z,155820
3164565081,arsenm,,2025-08-28T12:01:56Z,155820
3164567616,arsenm,,2025-08-28T12:03:06Z,155820
3166023184,topperc,,2025-08-28T18:23:04Z,155819
3167033950,svs-quic,,2025-08-29T01:20:28Z,155819
3183414726,topperc,LGTM,2025-09-04T04:54:45Z,155819
3164317705,Michael137,thanks!,2025-08-28T10:49:10Z,155813
3164579779,Pierre-vh,,2025-08-28T12:06:48Z,155815
3165557696,ldionne,,2025-08-28T16:09:20Z,155816
3165563711,ldionne,"LGTM with a minor comment, and also please add a short explanation of the optimization in the commit message. This is great!",2025-08-28T16:10:02Z,155816
3164938492,sylvestre,,2025-08-28T13:45:10Z,155811
3165736501,JDevlieghere,,2025-08-28T17:02:20Z,155811
3165822614,ashgti,,2025-08-28T17:28:34Z,155811
3165663092,AlexMaclean,One minor tweak but otherwise LGTM,2025-08-28T16:38:25Z,155804
3166017900,LewisCrawford,,2025-08-28T18:15:54Z,155804
3166613003,Artem-B,,2025-08-28T21:36:13Z,155804
3166613225,Artem-B,,2025-08-28T21:36:21Z,155804
3167107784,Prince781,,2025-08-29T02:09:37Z,155804
3167118840,AlexMaclean,,2025-08-29T02:16:46Z,155804
3167152446,Prince781,,2025-08-29T02:35:51Z,155804
3167157152,Prince781,,2025-08-29T02:39:46Z,155804
3168056577,LewisCrawford,,2025-08-29T09:30:42Z,155804
3169979681,Prince781,,2025-08-29T19:59:56Z,155804
3164144690,Fznamznon,"wow, thanks!",2025-08-28T09:56:55Z,155803
3165104698,erichkeane,,2025-08-28T14:26:23Z,155803
3165097235,erichkeane,,2025-08-28T14:24:53Z,155793
3169384698,alexfh,Thanks for handling this. Looks good!,2025-08-29T16:38:23Z,155793
3164154281,durga4github,,2025-08-28T09:59:58Z,155801
3164202324,joker-eph,,2025-08-28T10:14:01Z,155801
3164280741,durga4github,,2025-08-28T10:37:08Z,155801
3164324722,joker-eph,,2025-08-28T10:51:16Z,155801
3164426978,durga4github,,2025-08-28T11:17:16Z,155801
3164597605,grypp,,2025-08-28T12:12:19Z,155801
3164617211,linuxlonelyeagle,,2025-08-28T12:18:28Z,155801
3165411050,joker-eph,,2025-08-28T15:25:55Z,155801
3165412082,joker-eph,,2025-08-28T15:26:07Z,155801
3164698575,tgymnich,,2025-08-28T12:41:48Z,155792
3163909572,arsenm,,2025-08-28T08:53:59Z,155791
3164165952,arsenm,,2025-08-28T10:03:44Z,155790
3165057311,kuhar,,2025-08-28T14:15:03Z,155790
3164212357,arsenm,,2025-08-28T10:16:30Z,155789
3165059676,kuhar,"Nice, I really like the nodiscard attributes",2025-08-28T14:15:35Z,155789
3164433645,arsenm,,2025-08-28T11:19:38Z,155788
3165064140,kuhar,,2025-08-28T14:16:48Z,155788
3165571727,ldionne,"LGTM, thanks for the fix!",2025-08-28T16:12:42Z,155786
3164656558,mjklemm,LGTM,2025-08-28T12:29:09Z,155785
3163794880,arsenm,,2025-08-28T08:25:17Z,155779
3164869428,HazardyKnusperkeks,,2025-08-28T13:27:31Z,155773
3163700240,phoebewang,,2025-08-28T08:01:38Z,155775
3163852442,abhishek-kaushik22,,2025-08-28T08:40:19Z,155775
3164449661,RKSimon,LGTM - cheers,2025-08-28T11:24:11Z,155775
3164331413,devnexen,,2025-08-28T10:53:31Z,155768
3165202058,kazutakahirata,LGTM.  Thanks!,2025-08-28T14:45:56Z,155771
3167168130,shiltian,,2025-08-29T02:48:14Z,155767
3165437885,rampitec,"LGTM, just maybe rename the file so it starts with ds_write2. I.e., so that ds tests are close together in the directory sort order.",2025-08-28T15:32:28Z,155765
3163924807,kbeyls,,2025-08-28T08:58:02Z,155763
3166383448,shafik,,2025-08-28T20:29:05Z,155756
3187217058,bhandarkar-pranav,Minor nits.,2025-09-04T21:33:06Z,155754
3196177952,ergawy,,2025-09-08T11:50:54Z,155754
3196178263,ergawy,,2025-09-08T11:51:00Z,155754
3164285519,antoniofrighetto,"LGTM, thanks!",2025-08-28T10:38:49Z,155753
3163274307,arsenm,,2025-08-28T05:58:47Z,155751
3163508857,RKSimon,LGTM ,2025-08-28T07:08:37Z,155751
3163666127,jayfoad,,2025-08-28T07:51:44Z,155751
3165078949,topperc,,2025-08-28T14:20:32Z,155751
3165105390,jayfoad,,2025-08-28T14:26:32Z,155751
3163172042,arsenm,,2025-08-28T05:07:04Z,155750
3163175038,ssahasra,"Didn't really need a pre-commit review, IMHO.",2025-08-28T05:08:38Z,155750
3163449528,devnexen,"seeing getauxval below, that makes sense.",2025-08-28T06:47:12Z,155749
3166799400,fmayer,,2025-08-28T23:11:11Z,155748
3164026100,tblah,Looks great to me,2025-08-28T10:25:09Z,155742
3177089541,vzakhari,,2025-09-02T15:29:48Z,155742
3163190406,topperc,,2025-08-28T05:18:01Z,155747
3163700774,ukalappa-mips,,2025-08-28T08:01:49Z,155747
3163703397,ukalappa-mips,,2025-08-28T08:02:35Z,155747
3165261076,topperc,,2025-08-28T15:01:16Z,155747
3167327020,topperc,,2025-08-29T04:38:26Z,155747
3167597907,ukalappa-mips,,2025-08-29T06:58:14Z,155747
3167598582,ukalappa-mips,,2025-08-29T06:58:32Z,155747
3167599893,ukalappa-mips,,2025-08-29T06:59:06Z,155747
3171097090,topperc,LGTM,2025-08-30T15:47:36Z,155747
3188254360,ingomueller-net,LGTM but other should chime in as well.,2025-09-05T07:09:58Z,155741
3189865445,jpienaar,,2025-09-05T15:41:05Z,155741
3189874228,makslevental,,2025-09-05T15:43:48Z,155741
3189905354,makslevental,,2025-09-05T15:53:47Z,155741
3163246921,arsenm,Should also remove the addition of the attribute in clang/lib/CodeGen/CGCall.cpp,2025-08-28T05:44:00Z,155740
3163463314,arsenm,,2025-08-28T06:52:34Z,155740
3163798892,gysit,"Can you also remove the attribute from the LLVM Dialect function operation?

The line the remove would be here:
https://github.com/llvm/llvm-project/blob/120725d77f5d006e890660e2d329c6aaf0135b6f/mlir/include/mlir/Dialect/LLVMIR/LLVMOps.td#L1964

IUC this would be dead code otherwise.",2025-08-28T08:26:21Z,155740
3164056583,gysit,"Thanks!

LGTM from my end.",2025-08-28T09:32:11Z,155740
3177410126,david-xl,,2025-09-02T16:56:27Z,155734
3177434685,mtrofin,,2025-09-02T17:05:00Z,155734
3181479530,david-xl,,2025-09-03T16:47:43Z,155734
3183262710,mtrofin,,2025-09-04T03:16:35Z,155734
3186355111,david-xl,,2025-09-04T17:29:53Z,155734
3163449570,Mel-Chen,,2025-08-28T06:48:53Z,155739
3163478770,Mel-Chen,,2025-08-28T06:57:57Z,155739
3163502039,ElvisWang123,,2025-08-28T07:06:06Z,155739
3165852499,fhahn,Does this need to go together with the changes to VPMemoryRecipe::computeCost?,2025-08-28T17:35:08Z,155739
3167748240,fhahn,,2025-08-29T07:53:16Z,155739
3167904678,Mel-Chen,,2025-08-29T08:43:57Z,155739
3167935363,Mel-Chen,,2025-08-29T08:58:07Z,155739
3171821348,ElvisWang123,,2025-08-31T23:32:17Z,155739
3172351557,Mel-Chen,LGTM,2025-09-01T07:11:07Z,155739
3172349850,fhahn,"LGTM, thanks, with a few additional suggestions to adjust the naming in tests",2025-09-01T07:11:23Z,155739
3172469602,ElvisWang123,,2025-09-01T07:54:40Z,155739
3173210051,lukel97,LGTM too,2025-09-01T11:02:39Z,155739
3162912689,frederick-vs-ja,,2025-08-28T03:03:12Z,155737
3163072861,tbaederr,,2025-08-28T04:06:52Z,155737
3163074421,tbaederr,,2025-08-28T04:08:13Z,155737
3164837294,snarang181,,2025-08-28T13:19:00Z,155737
3164837624,snarang181,,2025-08-28T13:19:05Z,155737
3164867372,tbaederr,,2025-08-28T13:27:00Z,155737
3165175737,snarang181,,2025-08-28T14:40:59Z,155737
3165196654,tbaederr,,2025-08-28T14:44:54Z,155737
3165302293,snarang181,,2025-08-28T15:04:34Z,155737
3165418307,tbaederr,,2025-08-28T15:27:33Z,155737
3165429342,snarang181,,2025-08-28T15:30:16Z,155737
3165461378,tbaederr,,2025-08-28T15:39:07Z,155737
3166006875,snarang181,,2025-08-28T18:11:52Z,155737
3167464349,tbaederr,,2025-08-29T05:58:22Z,155737
3168460266,tbaederr,,2025-08-29T11:53:56Z,155737
3162990750,lntue,,2025-08-28T03:23:15Z,155732
3165252340,EugeneZelenko,Please mention change in Release Notes.,2025-08-28T14:56:24Z,155731
3164032803,DavidSpickett,"Assuming I understood correctly, LGTM. Just needs a comment in the test case.",2025-08-28T09:28:59Z,155730
3165068996,boomanaiden154,,2025-08-28T14:18:00Z,155730
3165496394,mshahneo,,2025-08-28T15:49:52Z,155729
3166453498,ianayl,,2025-08-28T20:43:22Z,155729
3171135695,kuhar,,2025-08-30T17:39:18Z,155729
3177590196,kuhar,,2025-09-02T17:56:47Z,155729
3178863665,ianayl,,2025-09-03T04:01:23Z,155729
3181484809,kuhar,,2025-09-03T16:48:34Z,155729
3162292821,akuhlens,,2025-08-28T00:00:41Z,155728
3162377040,eugeneepshteyn,,2025-08-28T00:15:16Z,155728
3162446705,vzakhari,"Thank you, Peter, for cleaning this up!",2025-08-28T00:32:39Z,155728
3165070799,felipepiovezan,,2025-08-28T14:18:28Z,155733
3165085220,felipepiovezan,"Nice find! Left one question about an unused variable, otherwise LGTM!",2025-08-28T14:22:12Z,155733
3165699449,jasonmolenda,,2025-08-28T16:49:30Z,155733
3165708880,bulbazord,,2025-08-28T16:52:45Z,155733
3165718388,JDevlieghere,,2025-08-28T16:56:15Z,155733
3162243962,charithaintc,,2025-08-27T23:54:28Z,155726
3162619152,lntue,,2025-08-28T01:22:10Z,155727
3162399842,arsenm,"We should have introduced a wavesize_t and have one unsuffixed builtin, but this is what we are doing in the other cases already ",2025-08-28T00:20:48Z,155724
3162390618,arsenm,,2025-08-28T00:18:30Z,155725
3162187341,charithaintc,,2025-08-27T23:44:24Z,155722
3162212846,silee2,,2025-08-27T23:50:37Z,155722
3162616928,brad0,,2025-08-28T01:21:25Z,155718
3165131991,erichkeane,"This all looks fine to me, but please let someone else take a look before merging.",2025-08-28T14:32:00Z,155721
3174747305,Andres-Salamanca,,2025-09-02T02:55:33Z,155721
3176723325,xlauko,lgtm,2025-09-02T14:02:35Z,155721
3177310512,andykaylor,,2025-09-02T16:21:42Z,155721
3162623888,brad0,,2025-08-28T01:23:47Z,155717
3162066488,eugeneepshteyn,,2025-08-27T23:06:35Z,155715
3162160110,klausler,,2025-08-27T23:34:41Z,155715
3162369069,eugeneepshteyn,,2025-08-28T00:13:35Z,155715
3166151374,DanielCChen,"LGTM.
Thanks.",2025-08-28T19:01:14Z,155715
3166410837,akuhlens,,2025-08-28T20:32:09Z,155715
3163142707,devnexen,,2025-08-28T04:48:15Z,155713
3162034763,var-const,,2025-08-27T22:55:18Z,155712
3163770803,philnik777,We should backport #149390 as well.,2025-08-28T08:19:12Z,155712
3169280369,philnik777,The libc++ parts LGTM. I don't know enough about lldb to feel comfortable approving back-ports there.,2025-08-29T16:06:10Z,155712
3162217859,JDevlieghere,,2025-08-27T23:57:41Z,155714
3165826075,ashgti,,2025-08-28T17:29:50Z,155714
3165826589,ashgti,,2025-08-28T17:30:01Z,155714
3165827721,ashgti,,2025-08-28T17:30:28Z,155714
3166034979,JDevlieghere,LGTM,2025-08-28T18:22:16Z,155714
3166086451,ashgti,,2025-08-28T18:38:18Z,155714
3161958927,ashgti,,2025-08-27T22:39:13Z,155708
3162065074,JDevlieghere,,2025-08-27T23:05:58Z,155708
3162065144,ashgti,,2025-08-27T23:06:01Z,155708
3163063999,wangpc-pp,"LGTM.

Can we add some tests if it doesn't bother you?",2025-08-28T04:00:24Z,155710
3167402667,4vtomat,LGTM~,2025-08-29T05:23:42Z,155710
3162061912,JDevlieghere,Nice,2025-08-27T23:04:52Z,155711
3162027966,eugeneepshteyn,,2025-08-27T22:52:49Z,155707
3166456933,akuhlens,I agree that this implementation coincides with how I interpret the standard. If most compilers also implement this interpretation then maximizing portability is important.,2025-08-28T20:44:39Z,155707
3186100129,jimingham,LGTM,2025-09-04T16:17:16Z,155705
3161835808,gulfemsavrun,,2025-08-27T21:41:08Z,155704
3161932130,mingmingl-llvm,,2025-08-27T22:28:10Z,155702
3166916048,boomanaiden154,,2025-08-28T23:39:07Z,155700
3162079989,cmtice,,2025-08-27T23:10:21Z,155698
3170099816,davemgreen,Thanks - I think this sounds good if it has done OK with a sanitizer build. LGTM,2025-08-29T20:33:45Z,155696
3175720252,RKSimon,@ningxinr please address the auto -> unsigned change and we can get this merged for you - thanks.,2025-09-02T09:37:46Z,155696
3178695871,bcardosolopes,"Awesome, LGTM",2025-09-03T01:46:25Z,155697
3179078121,xlauko,"lgtm, with minor nits",2025-09-03T06:16:07Z,155697
3169031264,lhutton1,"LGTM, thanks!",2025-08-29T14:44:58Z,155695
3163902068,Michael137,"Agreed it would be nice to have a short-hand syntax for this. Do we want to claim `${}` for underlining though? Or could have a slightly different short-hand notation that we could then also extend to making things bold, italic, colored, etc. E.g., `${u:<blah>}`. Of course then we'd have to come up with some sort of escaping mechanism. Wdyt?",2025-08-28T08:51:43Z,155694
3163978777,DavidSpickett,"Probably could do this in TableGen itself, but it would be rather awkward no doubt.

I like that `${N}` is grepable if we need to find all these again.",2025-08-28T09:22:21Z,155694
3165613809,JDevlieghere,,2025-08-28T16:24:02Z,155694
3165630570,JDevlieghere,,2025-08-28T16:28:34Z,155694
3165895049,DavidSpickett,,2025-08-28T17:40:07Z,155694
3169310930,Michael137,,2025-08-29T16:17:19Z,155694
3169311526,Michael137,,2025-08-29T16:17:35Z,155694
3162019469,topperc,LGTM,2025-08-27T22:49:59Z,155693
3161810167,boomanaiden154,"This won't have much of an effect. libc++ doesn't build any binaries as part of their build.

The PIE costs for libc++ come from invoking the compiler (if it is compiled with PIE) during testing, and running the just compiled binaries for execution tests. This won't control whether or not the host compiler is built with PIE (other than for a bootstrapping build, which we only do one of).

Controlling the link flags for execution tests would be done somewhere like https://github.com/llvm/llvm-project/blob/0e3319537972d284e94a183899f15b40a798fd1f/libcxx/test/configs/llvm-libc%2B%2B-shared.cfg.in#L13
I already tried disabling PIE on the execution tests on Linux and measured virtually no difference on test runtime. I would think turning off PIE for the host compiler would be even less likely to have any gains as I would imagine a large part of the test time is spent doing standard C++ things like parsing headers, dominating startup time. Profiling there wouldn't hurt though.

",2025-08-27T21:31:03Z,155689
3166915297,boomanaiden154,,2025-08-28T23:38:47Z,155690
3161892041,hubert-reinterpretcast,,2025-08-27T22:12:18Z,155686
3161914368,hubert-reinterpretcast,LGTM with minor nit.,2025-08-27T22:21:43Z,155686
3161865108,Prince781,,2025-08-27T21:56:15Z,155685
3170909991,jpienaar,,2025-08-30T06:34:43Z,155684
3163720423,philnik777,,2025-08-28T08:08:11Z,155679
3163750733,AlexGuteniev,,2025-08-28T08:14:32Z,155679
3163785118,philnik777,,2025-08-28T08:22:58Z,155679
3163825115,AlexGuteniev,,2025-08-28T08:32:38Z,155679
3163849579,philnik777,,2025-08-28T08:39:36Z,155679
3163872977,philnik777,LGTM assuming the CI is happy.,2025-08-28T08:44:06Z,155679
3188498560,banach-space,,2025-09-05T08:38:56Z,155683
3188500474,banach-space,"Thanks, LG % nit",2025-09-05T08:39:32Z,155683
3189404886,amd-eochoalo,,2025-09-05T13:34:57Z,155683
3161620140,adam-yang,Thank you for the fix!!,2025-08-27T20:15:04Z,155678
3164289270,svenvh,,2025-08-28T10:40:11Z,155676
3164318232,Naghasan,"> The spec says it shouldn't be there

just FYI: the spec doesn't define the textual form, spirv-tools' format is derived from the example in the spec but it is non-normative.",2025-08-28T10:49:14Z,155676
3161436831,eugeneepshteyn,,2025-08-27T19:09:57Z,155675
3166494010,akuhlens,,2025-08-28T20:58:31Z,155675
3162814058,phoebewang,LGTM.,2025-08-28T02:14:07Z,155673
3161222332,fhahn,,2025-08-27T18:18:30Z,155672
3161905536,annamthomas,"Thanks for this! It handles more cases than what I had. 
Why the LoopGuards is a better option than the `isKnownPredicateAt`? One is compile-time, but looking at the SCEV code, both are really similar (handling assumes/guards and dominating conditions). 
",2025-08-27T22:28:05Z,155672
3165310357,fhahn,,2025-08-28T15:07:29Z,155672
3176653065,annamthomas,LGTM,2025-09-02T13:46:50Z,155672
3161242483,teresajohnson,"Right now this section itself requires both AllocSites and CallSites. Does it make sense to change that too? In practice we need not have both in a profile.

Should there be a test for this change to ensure it does something reasonable for an empty memprof yaml?",2025-08-27T18:20:21Z,155671
3161267964,mingmingl-llvm,"thanks for making the change!

It occurred to me when I trim down the test case input, fields like `AllocSites` and `CallSites` (and their subfields)  are currently required. I wonder if a subset of fields are optional based on the semantics.",2025-08-27T18:26:18Z,155671
3162063989,teresajohnson,lgtm,2025-08-27T23:05:35Z,155671
3162346358,efriedma-quic,,2025-08-28T00:12:33Z,155668
3165645882,andykaylor,,2025-08-28T16:32:46Z,155668
3198291035,efriedma-quic,LGTM,2025-09-08T21:45:19Z,155668
3165979265,Keenuts,,2025-08-28T18:14:59Z,155664
3170243769,shafik,,2025-08-29T21:04:54Z,155664
3161198735,razvanlupusoru,,2025-08-27T18:12:23Z,155666
3161381039,khaki3,,2025-08-27T18:54:50Z,155666
3162535973,razvanlupusoru,,2025-08-28T00:57:04Z,155666
3162539960,razvanlupusoru,Nice catch since I missed that I actually used zero for the lowerbound. Please fix the test and I can approve :) Thank you.,2025-08-28T00:58:11Z,155666
3162602542,khaki3,,2025-08-28T01:16:24Z,155666
3162823767,khaki3,,2025-08-28T02:18:03Z,155666
3163087310,razvanlupusoru,Nice work! Thank you!,2025-08-28T04:18:17Z,155666
3161127045,erichkeane,,2025-08-27T17:55:32Z,155663
3161227864,bcardosolopes,,2025-08-27T18:22:39Z,155663
3162029246,andykaylor,,2025-08-27T23:13:45Z,155663
3165044498,mmha,,2025-08-28T14:12:03Z,155663
3165064735,mmha,,2025-08-28T14:16:58Z,155663
3165073551,mmha,,2025-08-28T14:19:12Z,155663
3165464898,mmha,,2025-08-28T15:40:13Z,155663
3166639098,andykaylor,,2025-08-28T23:20:26Z,155663
3168009676,mmha,,2025-08-29T09:16:49Z,155663
3181459851,mmha,,2025-09-03T16:41:50Z,155663
3181475879,mmha,,2025-09-03T16:47:05Z,155663
3181623128,mmha,,2025-09-03T17:06:00Z,155663
3181630366,mmha,,2025-09-03T17:06:56Z,155663
3181839143,mmha,,2025-09-03T17:58:30Z,155663
3181856986,mmha,,2025-09-03T18:02:50Z,155663
3181873748,mmha,,2025-09-03T18:07:27Z,155663
3182916227,mmha,,2025-09-03T23:54:15Z,155663
3182922310,mmha,,2025-09-03T23:59:48Z,155663
3186964838,andykaylor,lgtm,2025-09-04T19:51:03Z,155663
3165952618,rnk,,2025-08-28T17:54:35Z,155662
3165957969,mizvekov,,2025-08-28T17:56:27Z,155662
3163085177,owenca,,2025-08-28T04:16:36Z,155660
3165099999,boomanaiden154,,2025-08-28T14:25:25Z,155660
3165145315,owenca,,2025-08-28T14:34:50Z,155660
3160964978,clementval,,2025-08-27T17:22:48Z,155659
3161022512,klausler,,2025-08-27T17:36:20Z,155659
3161877516,klausler,"Ship it, looks great.",2025-08-27T22:03:40Z,155659
3161059002,cmtice,,2025-08-27T17:40:22Z,155658
3161298895,shiltian,,2025-08-27T18:33:31Z,155655
3165601646,teresajohnson,"Couple comments/questions, but hopefully @pcc can review too since he's more familiar with this transformation.",2025-08-28T16:21:20Z,155657
3165667197,mtrofin,,2025-08-28T16:38:54Z,155657
3165688774,mtrofin,,2025-08-28T16:45:23Z,155657
3165693038,mtrofin,,2025-08-28T16:47:07Z,155657
3190863609,pcc,"Fair enough, I guess you could use this to decide whether it goes to `.text` or `.text.hot` or something like that but there's not much else you can do with these functions.",2025-09-06T01:44:10Z,155657
3191257392,mtrofin,,2025-09-06T01:56:14Z,155657
3198325694,pcc,,2025-09-08T22:03:57Z,155657
3198332450,mtrofin,,2025-09-08T22:08:43Z,155657
3198409637,pcc,,2025-09-08T22:42:13Z,155657
3198411410,pcc,,2025-09-08T22:43:33Z,155657
3164280934,RKSimon,,2025-08-28T10:37:13Z,155656
3164283976,RKSimon,,2025-08-28T10:38:19Z,155656
3164284606,RKSimon,,2025-08-28T10:38:32Z,155656
3164421403,RKSimon,Still a few signed char tests need converting,2025-08-28T11:16:13Z,155656
3164485547,RKSimon,almost there! Just don't clang-format lines of a file unless you're editing them - it makes the patch too noisy,2025-08-28T11:36:41Z,155656
3164689558,RKSimon,avx2intrin.h is very broken - you would probably be better off undoing all changes in that file and redoing it,2025-08-28T12:39:03Z,155656
3165304509,RKSimon,LGTM - cheers,2025-08-28T15:05:02Z,155656
3164671576,mjklemm,LGTM,2025-08-28T12:33:28Z,155653
3160882855,topperc,LGTM,2025-08-27T17:07:25Z,155654
3160922041,mshockwave,LGTM,2025-08-27T17:15:15Z,155654
3160766557,erichkeane,,2025-08-27T16:44:32Z,155652
3160802261,jhuber6,,2025-08-27T16:51:06Z,155652
3160906170,erichkeane,"1 nit, else this is fine for me.",2025-08-27T17:12:12Z,155652
3161295532,DanielCChen,This patch caused some regressions (segfault at the compile time) in our test buckets. I will provide a reducer soon.,2025-08-27T18:32:47Z,155649
3189528558,jeanPerier,"LGTM, thanks!",2025-09-05T14:07:29Z,155649
3164673767,mjklemm,LGTM,2025-08-28T12:34:10Z,155651
3161308001,vzakhari,,2025-08-27T18:35:58Z,155646
3160599975,klausler,,2025-08-28T17:16:40Z,155646
3166234150,d-parks,,2025-08-28T19:29:22Z,155646
3166240368,klausler,,2025-08-28T19:31:30Z,155646
3188538831,banach-space,"Thanks, just a minor suggestion.",2025-09-05T08:53:10Z,155648
3189429701,amd-eochoalo,,2025-09-05T13:41:42Z,155648
3160983961,topperc,LGTM,2025-08-27T17:26:04Z,155644
3161856413,jakeegan,LGTM,2025-08-27T21:51:57Z,155643
3161916575,hubert-reinterpretcast,LGTM with minor nit.,2025-08-27T22:25:11Z,155643
3160484239,dtcxzyw,LG,2025-08-27T15:49:41Z,155642
3160572282,topperc,LGTM,2025-08-27T16:05:13Z,155642
3171678787,simon-camp,,2025-08-31T15:10:59Z,155641
3172266904,jacquesguan,LGTM,2025-09-01T06:36:40Z,155641
3173166148,marbre,,2025-09-01T10:45:46Z,155641
3160688314,tblah,LGTM,2025-08-27T16:28:05Z,155640
3165097469,skatrak,"Thank you, LGTM!",2025-08-28T14:24:56Z,155640
3160422568,JDevlieghere,,2025-08-27T15:36:40Z,155637
3160217881,jhuber6,"Assuming this still prints both, because users definitely want to know what to pass to `--offload-arch`",2025-08-27T14:58:40Z,155632
3160229846,arsenm,This sounds counterproductive. The product name is not really actionable information,2025-08-27T15:00:52Z,155632
3160235888,arsenm,,2025-08-27T15:02:07Z,155632
3160346010,jhuber6,,2025-08-27T15:21:27Z,155632
3162553110,arsenm,,2025-08-28T01:01:38Z,155632
3161210827,bcardosolopes,"LGTM, one nit",2025-08-27T18:14:53Z,155635
3161222670,clementval,LGTM,2025-08-27T18:17:00Z,155635
3161250220,erichkeane,,2025-08-27T18:21:48Z,155635
3161910479,andykaylor,"lgtm, but some of the tests are going to fail after https://github.com/llvm/llvm-project/pull/155697 so we need to coordinate the merge order for these.",2025-08-27T22:19:15Z,155635
3162520875,razvanlupusoru,Impressively thorough testing! Thank you!,2025-08-28T00:53:01Z,155635
3160606151,topperc,LGTM,2025-08-27T16:10:48Z,155628
3160139248,tblah,LGTM,2025-08-27T14:45:10Z,155629
3160768276,boomanaiden154,"> Looks like something is broken with the reporting:

I can look into fixing that. That's something that shouldn't be happening either way.

Overall, I'm not sure how I feel about `-Werror`. On the one hand, the default enabled warnings on recent clang versions are reliable and quite helpful. And this does solve an actual problem with the buildbots that also enable `-Werror`. But this introduces large differences between the premerge CI and what someone is likely to be testing locally, which increases friction.

I'm not opposed, but would like feedback from more people in the community before turning this on. I'll try and bring this up at the infra area team meeting next Thursday. A quick RFC to try and solicit the broader community's feedback also probably wouldn't hurt.",2025-08-27T16:44:03Z,155627
3169558513,boomanaiden154,"I think we can just try this out and see what happens.

It should be a net positive and if there are any major issues, we can always just revert.",2025-08-29T17:43:36Z,155627
3161249966,maksfb,LGTM. Thanks!,2025-08-27T18:21:43Z,155623
3160003100,jhuber6,"I would rather this one replaces the old one, unless there's some feature it's missing.",2025-08-27T14:17:34Z,155626
3168587411,jhuber6,"Thanks, one fewer thing in offload tied to OpenMP.",2025-08-29T12:38:29Z,155626
3170742218,kevinsala,,2025-08-29T23:58:33Z,155626
3170744954,jhuber6,,2025-08-30T00:00:07Z,155626
3170763016,kevinsala,,2025-08-30T00:36:29Z,155626
3170764563,kevinsala,,2025-08-30T00:40:10Z,155626
3176245984,RossBrunton,,2025-09-02T12:07:38Z,155626
3176263815,jhuber6,,2025-09-02T12:11:42Z,155626
3159980151,nikic,LGTM,2025-08-27T14:11:47Z,155622
3160024383,kazutakahirata,Thank you for taking care of this!,2025-08-27T14:23:13Z,155622
3159856299,nikic,LGTM,2025-08-27T13:42:09Z,155621
3159858101,RKSimon,,2025-08-27T13:42:37Z,155621
3159942651,tbaederr,,2025-08-27T14:03:15Z,155620
3160050666,zwuis,,2025-08-27T14:30:07Z,155620
3162464885,Sirraide,This still needs a release note.,2025-08-28T00:50:24Z,155620
3164496494,ckoparkar,,2025-08-28T11:38:57Z,155620
3164501329,ckoparkar,,2025-08-28T11:40:31Z,155620
3164638310,tbaederr,,2025-08-28T12:25:38Z,155620
3167024679,shafik,,2025-08-29T01:13:42Z,155620
3167027619,Sirraide,,2025-08-29T01:16:07Z,155620
3168119840,ckoparkar,,2025-08-29T09:50:59Z,155620
3168148991,Sirraide,,2025-08-29T10:05:05Z,155620
3168172844,ckoparkar,,2025-08-29T10:09:05Z,155620
3168173493,Sirraide,,2025-08-29T10:09:18Z,155620
3159768543,chrisjbris,,2025-08-27T13:20:26Z,155615
3159823125,arsenm,,2025-08-27T13:34:00Z,155615
3161342014,Sisyph,,2025-08-27T18:44:51Z,155615
3160440183,jmorse,"LGTM; as with the other patch, do keep an eye on whether there's a compile time consequence (it seems very unlikely).",2025-08-27T15:40:21Z,155618
3159702327,joker-eph,,2025-08-27T13:03:49Z,155614
3159706996,joker-eph,,2025-08-27T13:05:17Z,155614
3159707276,joker-eph,,2025-08-27T13:05:22Z,155614
3165120405,erichkeane,"1 nit, else lgtm.

MIGHT be worth having a release note as well though, while this is just a builtin, I'm hopeful putting it here will mean that libstdc++ will see/use it too.",2025-08-28T14:30:13Z,155612
3160416848,ilinpv,"Looks good overall, thank you for adding tests. It would be great to expand the set of instructions covered. I have added comments for the ones that seem to be missing. Also worth considering the pointer authentication forms of branches and returns.",2025-08-27T16:18:13Z,155609
3163787447,bgergely0,,2025-08-28T08:23:32Z,155609
3164370800,ilinpv,"Thanks for extending tests, LGTM",2025-08-28T11:02:39Z,155609
3167221359,NewSigma,I'm trying to understand this pattern. Could you explain why do we add memory attributes to presplit coroutine?,2025-08-29T03:27:59Z,155611
3159683242,chrisjbris,,2025-08-27T13:00:23Z,155607
3159695317,arsenm,,2025-08-27T13:01:36Z,155607
3161334973,rampitec,,2025-08-27T18:43:08Z,155607
3165048958,LU-JOHN,,2025-08-28T14:13:02Z,155607
3165061698,LU-JOHN,,2025-08-28T14:16:09Z,155607
3165109511,arsenm,,2025-08-28T14:27:21Z,155607
3165109823,arsenm,,2025-08-28T14:27:25Z,155607
3159704672,chrisjbris,,2025-08-27T13:08:51Z,155603
3159725468,arsenm,,2025-08-27T13:09:57Z,155603
3160897827,shiltian,,2025-08-27T17:10:22Z,155603
3161360857,rampitec,,2025-08-27T18:50:51Z,155603
3162686345,arsenm,,2025-08-28T01:41:54Z,155603
3177381087,shiltian,,2025-09-02T16:45:52Z,155603
3164698690,nikic,,2025-08-28T13:02:05Z,155602
3173412530,nikic,LGTM,2025-09-01T12:16:48Z,155602
3159668833,phoebewang,LGTM.,2025-08-27T12:53:12Z,155600
3159772538,SamTebbs33,,2025-08-27T13:21:37Z,155601
3160137457,paulwalker-arm,,2025-08-27T14:44:58Z,155601
3160181493,SamTebbs33,LGTM,2025-08-27T14:52:26Z,155601
3160203652,paulwalker-arm,,2025-08-27T14:56:00Z,155601
3163734412,gbossu,,2025-08-28T08:09:51Z,155601
3163737117,gbossu,,2025-08-28T08:10:37Z,155601
3164436058,paulwalker-arm,,2025-08-28T11:20:09Z,155601
3173920582,gbossu,,2025-09-01T14:37:46Z,155601
3173945019,sdesmalen-arm,,2025-09-01T15:13:58Z,155601
3179915243,paulwalker-arm,,2025-09-03T10:04:11Z,155601
3159728825,chrisjbris,,2025-08-27T13:13:53Z,155595
3160000354,frederik-h,,2025-08-27T14:22:51Z,155595
3160027511,arsenm,,2025-08-27T14:23:55Z,155595
3160597980,frederik-h,,2025-08-27T16:09:14Z,155595
3163116647,arsenm,,2025-08-28T04:31:15Z,155595
3164062730,vpykhtin,LGTM.,2025-08-28T09:33:58Z,155595
3163646218,Fznamznon,,2025-08-28T07:46:41Z,155594
3162449355,shafik,Maybe I am misunderstanding the PR but shouldn't we have a test that shows this is rejected for `float8`?,2025-08-28T00:33:26Z,155597
3159567590,sdesmalen-arm,,2025-08-27T12:24:41Z,155588
3159203864,rengolin,,2025-08-27T10:19:47Z,155587
3159384873,KanRobert,,2025-08-27T11:24:04Z,155586
3159393121,RKSimon,,2025-08-27T11:27:28Z,155586
3159404855,KanRobert,,2025-08-27T11:31:53Z,155586
3159624669,phoebewang,,2025-08-27T12:40:42Z,155586
3159676819,RKSimon,,2025-08-27T12:55:48Z,155586
3159710128,RKSimon,,2025-08-27T13:06:16Z,155586
3159130376,aemerson,,2025-08-27T09:53:24Z,155583
3163672644,davemgreen,,2025-08-28T08:00:44Z,155583
3173787332,jyli0116,,2025-09-01T13:57:24Z,155583
3173788824,jyli0116,,2025-09-01T13:57:55Z,155583
3203097538,davemgreen,,2025-09-10T09:46:31Z,155583
3205472323,jyli0116,,2025-09-10T10:16:26Z,155583
3205820492,davemgreen,Thank you. LGTM,2025-09-10T12:00:16Z,155583
3159099349,jayfoad,"LGTM, thanks.",2025-08-27T09:44:58Z,155577
3159031413,s-barannikov,,2025-08-27T09:21:37Z,155580
3190480037,jurahul,,2025-09-05T19:01:31Z,155580
3162796037,arsenm,,2025-08-28T02:07:39Z,155578
3160913482,overmighty,,2025-08-27T17:13:24Z,155575
3165081640,krishna2803,,2025-08-28T14:21:14Z,155575
3171012695,overmighty,,2025-08-30T11:37:31Z,155575
3171100195,krishna2803,,2025-08-30T15:57:31Z,155575
3174240271,overmighty,,2025-09-01T17:05:42Z,155575
3174378986,krishna2803,,2025-09-01T18:58:39Z,155575
3175895012,jayfoad,,2025-09-02T10:24:43Z,155575
3176881966,krishna2803,,2025-09-02T14:40:10Z,155575
3181490823,overmighty,,2025-09-03T16:49:22Z,155575
3159604361,dtcxzyw,LG,2025-08-27T12:34:44Z,155574
3160892839,overmighty,,2025-08-27T17:11:09Z,155569
3160984719,krishna2803,,2025-08-27T17:26:14Z,155569
3160984849,krishna2803,,2025-08-27T17:26:17Z,155569
3161663947,overmighty,,2025-08-27T20:31:53Z,155569
3177692250,ldionne,LGTM with passing tests.,2025-09-02T18:34:07Z,155571
3160879655,overmighty,,2025-08-27T17:07:46Z,155568
3159436456,lntue,,2025-08-27T11:42:42Z,155567
3160846124,overmighty,,2025-08-27T17:00:03Z,155567
3158926166,joker-eph,,2025-08-27T08:49:39Z,155572
3158950862,Bertik23,,2025-08-27T08:57:58Z,155572
3159024429,joker-eph,,2025-08-27T09:19:06Z,155572
3159117670,rengolin,,2025-08-27T09:49:09Z,155572
3159237395,Bertik23,,2025-08-27T10:33:23Z,155572
3159404531,joker-eph,,2025-08-27T11:31:44Z,155572
3159419808,Bertik23,,2025-08-27T11:35:46Z,155572
3159488307,Bertik23,,2025-08-27T12:02:36Z,155572
3159508219,joker-eph,,2025-08-27T12:08:20Z,155572
3159519881,joker-eph,,2025-08-27T12:11:08Z,155572
3159521913,joker-eph,,2025-08-27T12:11:46Z,155572
3159529799,joker-eph,,2025-08-27T12:14:15Z,155572
3159532767,joker-eph,,2025-08-27T12:15:19Z,155572
3159534131,joker-eph,,2025-08-27T12:15:49Z,155572
3159535713,joker-eph,,2025-08-27T12:16:18Z,155572
3159536275,joker-eph,,2025-08-27T12:16:29Z,155572
3159537614,joker-eph,,2025-08-27T12:16:47Z,155572
3159541461,joker-eph,"This LGTM overall from an MLIR point of view (modulo the small inline comments I left, mostly about namespace management).",2025-08-27T12:17:58Z,155572
3160487863,Bertik23,,2025-08-27T15:50:20Z,155572
3160535315,joker-eph,,2025-08-27T15:57:57Z,155572
3160536797,joker-eph,,2025-08-27T15:58:17Z,155572
3160549664,Bertik23,,2025-08-27T16:00:52Z,155572
3160839070,Bertik23,,2025-08-27T16:58:40Z,155572
3160884331,joker-eph,,2025-08-27T17:07:47Z,155572
3160894177,joker-eph,,2025-08-27T17:09:44Z,155572
3160918266,kuhar,,2025-08-27T17:14:28Z,155572
3160955561,Bertik23,,2025-08-27T17:21:17Z,155572
3161008049,joker-eph,,2025-08-27T17:30:15Z,155572
3161059522,Bertik23,,2025-08-27T17:40:27Z,155572
3161128048,joker-eph,,2025-08-27T17:54:11Z,155572
3161180650,Bertik23,,2025-08-27T18:07:35Z,155572
3163710668,joker-eph,,2025-08-28T08:04:38Z,155572
3201983331,nikic,,2025-09-09T14:45:28Z,155572
3202250831,Bertik23,,2025-09-09T15:46:48Z,155572
3158525229,topperc,,2025-08-27T06:43:00Z,155564
3158911343,wangpc-pp,,2025-08-27T08:44:25Z,155564
3159897055,preames,,2025-08-27T13:55:25Z,155564
3160556361,topperc,,2025-08-27T16:02:09Z,155564
3159004490,Fznamznon,,2025-08-27T09:14:37Z,155563
3159050276,tbaederr,,2025-08-27T09:28:20Z,155563
3159136108,Fznamznon,,2025-08-27T09:55:31Z,155563
3159136523,Fznamznon,,2025-08-27T09:55:41Z,155563
3160882928,shafik,Thank you for the quick fix!,2025-08-27T17:07:26Z,155563
3161319696,rampitec,,2025-08-27T18:39:14Z,155559
3158500514,MythreyaK,,2025-08-27T06:35:45Z,155561
3163132429,HighCommander4,"Thanks for putting this together!

It's a bit unfortunate to have to do this much plumbing to accomplish a relatively simple goal though.

Poking around a bit, I see that `ASTUnit`'s constructor takes a [`CaptureDiagsKind`](https://searchfox.org/llvm/rev/00926a6db6b3379aac05bf6b180123d1e2b0d382/clang/include/clang/Frontend/ASTUnit.h#87) parameter which, if not `None`, makes the diagnostics available on the `ASTUnit` itself ([example access](https://searchfox.org/llvm/rev/00926a6db6b3379aac05bf6b180123d1e2b0d382/clang/tools/libclang/CIndex.cpp#99-100)).

However, `buildASTFromCodeWithArgs()` does not expose this parameter (it passes `None` unconditionally).

WDYT think about giving `buildASTFromCodeWithArgs()` an additional (optional) `CaptureDiagsKind` parameter, plumbing it through to the ASTUnit, and then passing `CaptureDiagsKind::All` here in the test file?",2025-08-28T04:42:04Z,155561
3164124781,MythreyaK,,2025-08-28T09:51:59Z,155561
3167305691,HighCommander4,,2025-08-29T04:30:32Z,155561
3170745029,MythreyaK,,2025-08-30T00:00:17Z,155561
3170745380,MythreyaK,,2025-08-30T00:01:00Z,155561
3170750674,MythreyaK,,2025-08-30T00:12:12Z,155561
3170754685,MythreyaK,,2025-08-30T00:20:57Z,155561
3171264252,HighCommander4,Starting to look pretty good!,2025-08-30T23:10:08Z,155561
3171271139,MythreyaK,,2025-08-30T23:27:32Z,155561
3171275340,HighCommander4,"LGTM, thanks!

Since the patch is making some minor changes to libTooling, I'm going to wait a couple of days before merging, in case anyone else has comments.",2025-08-30T23:57:00Z,155561
3160910337,shiltian,This is more like an NFCI.,2025-08-27T17:12:46Z,155560
3161183753,Sisyph,,2025-08-27T18:08:25Z,155560
3158354933,lenary,"LGTM. Go ahead and merge this, I'll deal with conflicts on my own patch.",2025-08-27T05:57:55Z,155555
3158299448,shiltian,,2025-08-27T05:24:04Z,155554
3158347670,arsenm,,2025-08-27T05:53:00Z,155553
3158301275,arsenm,,2025-08-27T05:25:30Z,155552
3158301895,arsenm,,2025-08-27T05:25:57Z,155551
3159765278,kuhar,,2025-08-27T13:19:27Z,155551
3158307249,shiltian,,2025-08-27T05:29:35Z,155550
3159069047,tgymnich,,2025-08-27T09:34:55Z,155549
3159783092,kuhar,,2025-08-27T13:24:32Z,155549
3160364211,kazutakahirata,,2025-08-27T15:25:08Z,155549
3162791347,topperc,,2025-08-28T02:06:16Z,155549
3162798443,kazutakahirata,,2025-08-28T02:08:24Z,155549
3162927051,topperc,,2025-08-28T03:05:51Z,155549
3164707977,WillFroom,,2025-08-28T12:44:37Z,155549
3161630525,rnk,,2025-08-27T20:19:48Z,155548
3163209413,HighCommander4,,2025-08-28T05:23:04Z,155548
3165711116,rnk,"PTAL, I edited the comment. The fact that the number of tests is small doesn't really relate to the costs of having a distinct test target, it has more to do with the size of the dependency graph.",2025-08-28T16:53:30Z,155548
3158776805,david-arm,,2025-08-27T07:57:24Z,155546
3162822854,hassnaaHamdi,,2025-08-28T02:17:43Z,155546
3163578136,fhahn,,2025-08-28T07:29:25Z,155546
3163693237,david-arm,,2025-08-28T08:57:48Z,155546
3176730257,hassnaaHamdi,,2025-09-02T14:04:12Z,155546
3176730496,hassnaaHamdi,,2025-09-02T14:04:15Z,155546
3176860832,david-arm,LGTM!,2025-09-02T14:35:19Z,155546
3178096937,fhahn,,2025-09-02T20:54:14Z,155546
3182107257,hassnaaHamdi,,2025-09-03T19:19:26Z,155546
3184277602,fhahn,"LGTM, thanks",2025-09-04T09:29:15Z,155546
3158131135,preames,LGTM,2025-08-27T03:07:11Z,155541
3158351867,lenary,LGTM.,2025-08-27T05:55:48Z,155541
3158132196,Arghnews,,2025-08-27T03:08:08Z,155542
3159102712,RKSimon,,2025-08-27T09:46:56Z,155542
3167749083,RKSimon,,2025-08-29T07:51:14Z,155542
3167753477,RKSimon,,2025-08-29T07:52:54Z,155542
3167780975,RKSimon,,2025-08-29T08:00:03Z,155542
3167785397,RKSimon,,2025-08-29T08:01:37Z,155542
3168346301,RKSimon,,2025-08-29T11:07:14Z,155542
3168376948,RKSimon,,2025-08-29T11:19:49Z,155542
3168747488,RKSimon,LGTM - but let @tbaederr comment on the bytecode ,2025-08-29T13:34:26Z,155542
3168801514,RKSimon,,2025-08-29T13:47:11Z,155542
3168915408,tbaederr,,2025-08-29T14:15:29Z,155542
3168993689,RKSimon,LGTM,2025-08-29T14:35:00Z,155542
3158852312,Michael137,LGTM,2025-08-27T08:24:02Z,155539
3158199127,razvanlupusoru,Thank you!,2025-08-27T04:07:42Z,155536
3159870281,erichkeane,"2 small comments, else this lgtm.",2025-08-27T13:47:13Z,155534
3160604008,andykaylor,,2025-08-27T16:18:41Z,155534
3160674537,erichkeane,,2025-08-27T16:25:25Z,155534
3160681028,AmrDeveloper,,2025-08-27T16:26:33Z,155534
3161136601,Andres-Salamanca,"LGTM, just one question:",2025-08-27T17:56:22Z,155534
3161195514,bcardosolopes,Nothing else to add - LGTM after comments from others are addressed,2025-08-27T18:11:36Z,155534
3161780006,andykaylor,,2025-08-27T21:17:14Z,155534
3161849573,andykaylor,,2025-08-27T21:48:38Z,155534
3161985874,andykaylor,,2025-08-27T22:40:21Z,155534
3158913931,joker-eph,"That's a lot of plumbing for this option, I'm not convinced this is pulling its weight right now.

Passes are supposed to diagnose before ""signalPassFailure()"", so this error is mostly redundant. 
I found some passes that were not emitting a diagnostic before failing, but if the goal is just to debug this, then ` --mlir-print-ir-after-failure  ` has always immediately provided the answer to me.",2025-08-27T08:45:21Z,155526
3158207332,maksfb,Thanks!,2025-08-27T04:15:05Z,155525
3158208289,maksfb,Thanks!,2025-08-27T04:16:03Z,155522
3158005790,preames,LGTM,2025-08-27T01:45:54Z,155524
3157797586,tex3d,,2025-08-27T00:40:04Z,155521
3158073124,joaosaffran,,2025-08-27T02:21:20Z,155521
3160678075,inbelic,,2025-08-27T16:25:59Z,155521
3160948922,joaosaffran,"Looking good, just some small nit and an additional error handling suggestion",2025-08-27T17:32:49Z,155521
3161129100,bogner,,2025-08-27T17:54:22Z,155521
3157629427,rampitec,LGTM since there are no test changes. Unless it fails testing.,2025-08-26T23:30:21Z,155518
3157711154,shiltian,,2025-08-27T00:07:37Z,155515
3158766855,nikic,,2025-08-27T07:54:00Z,155513
3159938277,mtrofin,,2025-08-27T14:01:05Z,155516
3159938641,mtrofin,,2025-08-27T14:01:11Z,155516
3166911407,boomanaiden154,,2025-08-28T23:36:44Z,155516
3157536443,ilovepi,"LGTM, but I thought we had a unit test for this? Am I misremembering?",2025-08-26T22:46:04Z,155511
3157538878,petrhosek,,2025-08-26T22:47:15Z,155511
3158377744,petrhosek,,2025-08-27T06:05:33Z,155511
3157496471,clementval,,2025-08-26T22:28:36Z,155508
3157840784,clementval,,2025-08-27T00:56:43Z,155508
3160170008,ceseo,,2025-08-27T14:50:15Z,155508
3160361634,vzakhari,,2025-08-27T15:24:36Z,155508
3162613152,ceseo,,2025-08-28T01:20:07Z,155508
3166122146,clementval,,2025-08-28T18:51:36Z,155508
3181348621,clementval,,2025-09-03T16:06:14Z,155508
3181350811,clementval,Overall it looks good. I'm just thinking if your case requires to keep the symbol table up to date with the other renaming happening in this pass. ,2025-09-03T16:06:56Z,155508
3181827076,clementval,,2025-09-03T17:55:44Z,155508
3161273271,erichkeane,,2025-08-27T18:27:35Z,155506
3165109539,erichkeane,,2025-08-28T14:27:21Z,155506
3157432937,fmayer,,2025-08-26T21:59:41Z,155503
3157413836,mtrofin,,2025-08-26T21:50:08Z,155502
3157350454,shiltian,,2025-08-26T21:21:25Z,155498
3157400907,razvanlupusoru,Thank you! Nice catch.,2025-08-26T21:44:25Z,155504
3158963380,labath,"Looks pretty good overall. I have a bunch of comments, but I don't feel particularly strongly about most of them, so feel free to push back if you disagree (in particular, fields like `Invalid` are a pet peeve of mine).

The hardcoding of register constants is somewhat unfortunate, not so much because it can change (it's an ABI constant), but because it looks bad. It should be possible to get the RA register number generically (MCRegisterInfo::getRARegister), but it looks like there's no way to get the FP value without depending on a particular backend, so I guess we can live with that.",2025-08-27T10:33:58Z,155496
3160959250,Sterling-Augustine,,2025-08-27T17:21:53Z,155496
3161321523,Sterling-Augustine,,2025-08-27T18:39:43Z,155496
3161321740,Sterling-Augustine,,2025-08-27T18:39:48Z,155496
3161321951,Sterling-Augustine,,2025-08-27T18:39:53Z,155496
3161322154,Sterling-Augustine,,2025-08-27T18:39:58Z,155496
3161322964,Sterling-Augustine,,2025-08-27T18:40:08Z,155496
3161323483,Sterling-Augustine,,2025-08-27T18:40:15Z,155496
3161323852,Sterling-Augustine,,2025-08-27T18:40:20Z,155496
3165747368,labath,,2025-08-28T17:16:38Z,155496
3165942070,Sterling-Augustine,,2025-08-28T17:52:02Z,155496
3179450300,jh7370,"This is definitely stretching my knowledge, so I'm going to leave it to others to review. One minor style comment from me only.",2025-09-03T08:08:49Z,155496
3157503013,vonosmas,,2025-08-26T22:29:14Z,155495
3157530391,lntue,,2025-08-26T22:44:21Z,155495
3157228410,shiltian,,2025-08-26T20:36:41Z,155493
3157248745,RKSimon,A few minors,2025-08-26T20:46:07Z,155494
3157946601,phoebewang,,2025-08-27T01:33:26Z,155494
3158714724,RKSimon,,2025-08-27T07:38:44Z,155494
3158740676,XChy,,2025-08-27T07:44:54Z,155494
3158761339,RKSimon,,2025-08-27T07:52:05Z,155494
3159226194,RKSimon,LGTM - cheers,2025-08-27T10:28:43Z,155494
3157211121,cor3ntin,,2025-08-26T20:29:39Z,155492
3157225966,nikic,,2025-08-26T20:36:19Z,155492
3157255663,ojhunt,,2025-08-26T20:45:20Z,155492
3157344898,nikic,,2025-08-26T21:18:56Z,155492
3157356386,ojhunt,,2025-08-26T21:24:23Z,155492
3157358839,ojhunt,,2025-08-26T21:25:37Z,155492
3157369367,nikic,,2025-08-26T21:29:20Z,155492
3159703379,grypp,mlir side is trivial and looks fine ,2025-08-27T13:04:09Z,155489
3162028167,Artem-B,Nice. LGTM.,2025-08-27T22:52:58Z,155489
3157907807,andykaylor,,2025-08-27T01:22:09Z,155486
3160764985,AmrDeveloper,,2025-08-27T16:43:18Z,155486
3161186189,bcardosolopes,,2025-08-27T18:09:01Z,155486
3169450983,andykaylor,lgtm,2025-08-29T17:02:10Z,155486
3197007810,adrian-prantl,,2025-09-08T15:17:53Z,155485
3157182809,adrian-prantl,,2025-08-26T20:18:32Z,155483
3157132410,shiltian,,2025-08-26T20:01:39Z,155478
3157085730,erichkeane,"1 suggestion, else LGTM.",2025-08-26T19:47:30Z,155480
3157108179,razvanlupusoru,,2025-08-26T19:53:32Z,155480
3157176166,clementval,LGTM. Thanks Razvan!,2025-08-26T20:15:55Z,155480
3157051724,var-const,,2025-08-26T19:35:48Z,155476
3157115616,var-const,,2025-08-26T19:56:08Z,155476
3157116056,var-const,,2025-08-26T19:56:11Z,155476
3157922438,frederick-vs-ja,,2025-08-27T01:27:49Z,155476
3158546067,philnik777,"I'm not a huge fan of this as-is. I've seen multiple people comment about us breaking UBsan for unsigned integers, but nobody seems to care to actually do the legwork and just enable it for all our tests. I'm not against adding an assertion in `__bit_log2`, but I don't think ""people don't want unsigned overflow"" is a good reason to do so. Someone should just do the actual work to allow using UBSan with unsigned overflow checking in libc++, since we will run into this again and again otherwise.
",2025-08-27T06:49:13Z,155476
3159752002,luporl,LGTM,2025-08-27T13:15:25Z,155477
3157063324,eugeneepshteyn,,2025-08-26T19:38:56Z,155473
3157203224,joker-eph,,2025-08-26T20:26:30Z,155474
3157206510,joker-eph,"Thanks, LGTM on principle. One question inline.

I tweaked the title: as far as I can tell this is orthogonal to any XXX_DYLIB cmake config flag: if we fail on a target here we should be able to reproduce independently.",2025-08-26T20:27:52Z,155474
3157219564,Technius,,2025-08-26T20:32:59Z,155474
3157232781,joker-eph,,2025-08-26T20:38:15Z,155474
3157653217,Technius,,2025-08-26T23:42:46Z,155474
3158899040,joker-eph,,2025-08-27T08:40:07Z,155474
3156974692,topperc,,2025-08-26T19:18:48Z,155471
3157148709,preames,,2025-08-26T20:07:02Z,155471
3158897426,wangpc-pp,LGTM.,2025-08-27T08:39:32Z,155471
3156874587,erichkeane,,2025-08-26T18:43:53Z,155469
3156876700,AmrDeveloper,LGTM,2025-08-26T18:44:43Z,155469
3161177221,bcardosolopes,,2025-08-27T18:06:42Z,155469
3158105731,owenca,,2025-08-27T02:48:32Z,155466
3156839879,mshockwave,,2025-08-26T18:31:53Z,155467
3156849348,mshockwave,,2025-08-26T18:35:05Z,155467
3172000626,lukel97,,2025-09-01T03:39:14Z,155467
3177783017,mshockwave,,2025-09-02T19:06:23Z,155467
3178275466,topperc,,2025-09-02T22:07:18Z,155467
3178287279,topperc,,2025-09-02T22:10:49Z,155467
3178419324,mshockwave,,2025-09-02T23:10:57Z,155467
3178673803,mshockwave,,2025-09-03T01:30:30Z,155467
3179102925,wangpc-pp,,2025-09-03T06:32:24Z,155467
3179299082,lukel97,,2025-09-03T07:29:19Z,155467
3181446000,mshockwave,,2025-09-03T16:36:57Z,155467
3181649031,mshockwave,,2025-09-03T17:09:18Z,155467
3181686523,mshockwave,,2025-09-03T17:13:56Z,155467
3183493124,lukel97,,2025-09-04T05:35:12Z,155467
3184463909,lukel97,,2025-09-04T10:26:31Z,155467
3184505341,lukel97,"Thanks I think this looks correct to me now, just have some minor comments",2025-09-04T10:58:18Z,155467
3186324088,mshockwave,,2025-09-04T17:21:52Z,155467
3186371753,topperc,,2025-09-04T17:34:24Z,155467
3186417453,mshockwave,,2025-09-04T17:44:29Z,155467
3186423640,mshockwave,,2025-09-04T17:46:06Z,155467
3186424148,mshockwave,,2025-09-04T17:46:17Z,155467
3186526935,lukel97,LGTM,2025-09-04T18:08:29Z,155467
3186560319,mshockwave,,2025-09-04T18:14:45Z,155467
3160453236,jmorse,LGTM,2025-08-27T15:43:15Z,155462
3156874632,JDevlieghere,,2025-08-26T18:44:49Z,155460
3156965980,ashgti,,2025-08-26T19:09:18Z,155460
3157220425,JDevlieghere,,2025-08-26T20:34:22Z,155460
3157389507,ashgti,,2025-08-26T21:39:53Z,155460
3156848701,vzakhari,Looks great! Thank you!,2025-08-26T18:52:58Z,155461
3157705190,valerydmit,,2025-08-27T00:03:50Z,155461
3160263759,tblah,"LGTM, thanks!",2025-08-27T15:07:24Z,155461
3156813300,vzakhari,Thank you! Looks great!,2025-08-26T18:26:37Z,155458
3157488635,luporl,,2025-08-26T22:24:03Z,155458
3160235360,tblah,"LGTM, thanks",2025-08-27T15:01:59Z,155458
3157090083,nigelp-xmos,LGTM. Matches the combined PR except for whitespace.,2025-08-26T19:48:19Z,155456
3170171784,davemgreen,"This looks fine. LGTM

I've lost track of why this was happening though. Can you remind me what was the end goal? We just lose the git blame coverage.",2025-08-29T20:46:09Z,155464
3156804590,vzakhari,LGTM,2025-08-26T18:20:33Z,155457
3157220946,luporl,,2025-08-26T20:33:32Z,155457
3159447233,tblah,LGTM with one nit,2025-08-27T11:47:29Z,155457
3160262703,valerydmit,,2025-08-27T15:07:14Z,155457
3160402912,vzakhari,,2025-08-27T15:32:56Z,155457
3160657032,tblah,,2025-08-27T16:22:13Z,155457
3160773442,valerydmit,,2025-08-27T16:45:14Z,155457
3157062017,topperc,LGTM,2025-08-26T19:38:34Z,155455
3157033456,teresajohnson,,2025-08-26T19:30:27Z,155454
3158300986,Shoreshen,,2025-08-27T05:25:17Z,155448
3156582819,fmayer,Maybe mention which warning in the commit message,2025-08-26T17:12:07Z,155447
3156679090,bogner,,2025-08-26T17:44:32Z,155441
3156689561,inbelic,"Thanks for catching this. Maybe you could update the commit message to include where it was found and the reason:

The `DirectX` backend incorrectly did not specify it's dependency on `BinaryFormat` as it was a header only dependency and so it did not cause any build failures.",2025-08-26T17:48:06Z,155441
3156698665,joaosaffran,,2025-08-26T17:51:09Z,155441
3156483216,cmtice,,2025-08-26T16:41:30Z,155444
3156526492,inbelic,,2025-08-26T16:53:33Z,155445
3158176310,dpalermo,,2025-08-27T03:47:00Z,155440
3158662679,jprotze,,2025-08-27T07:23:42Z,155440
3158809549,Meinersbur,,2025-08-27T08:08:57Z,155440
3158668304,fhahn,Hm I am not sure why we had this restriction in the first place. Not sure if adding profile info when there was none before can mess things up in some way?,2025-08-27T07:25:23Z,155437
3172488025,fhahn,"> You can see in BlockFrequencyInfoImpl::calculate that we seem to calculate most of the info even if the function does not have profile data. The only thing we miss out on is the iterative inference.

Sounds good!

LGTM, thanks!",2025-09-01T07:45:43Z,155437
3156322312,grypp,,2025-08-26T15:56:43Z,155435
3156324275,grypp,,2025-08-26T15:57:14Z,155435
3156700254,durga4github,,2025-08-26T17:51:32Z,155435
3163854042,grypp,,2025-08-28T08:40:41Z,155435
3156598671,vzakhari,Thanks!,2025-08-26T17:16:12Z,155429
3157834366,e-kud,"Failures look unrelated:
```
lldb-api :: lang/cpp/libcxx-internals-recognizer/TestLibcxxInternalsRecognizer.py
LLVM :: CodeGen/AMDGPU/llvm.amdgcn.rcp.bf16.ll
```
@JaydeepChauhan14 maybe update the branch?",2025-08-27T00:54:35Z,155434
3158681664,RKSimon,,2025-08-27T07:29:00Z,155434
3167446342,JaydeepChauhan14,,2025-08-29T05:47:32Z,155434
3167788305,RKSimon,please update the summary to account for the new filename,2025-08-29T08:02:41Z,155434
3169181892,e-kud,,2025-08-29T15:31:46Z,155434
3169207401,RKSimon,,2025-08-29T15:41:44Z,155434
3174006468,e-kud,LGTM,2025-09-01T15:11:30Z,155434
3156895462,rampitec,,2025-08-26T18:49:35Z,155428
3157587166,arsenm,,2025-08-26T23:11:18Z,155428
3157592395,rampitec,,2025-08-26T23:13:52Z,155428
3156168830,jprotze,,2025-08-26T15:20:47Z,155433
3156283596,mhalk,,2025-08-26T15:47:14Z,155433
3158568296,jplehr,"I think this looks good.
Let's wait for others to accept.",2025-08-27T06:56:05Z,155433
3158929588,nikic,LGTM,2025-08-27T08:50:50Z,155433
3158957371,jprotze,Lgtm,2025-08-27T08:59:39Z,155433
3156043275,RKSimon,LGTM - cheers,2025-08-26T14:54:38Z,155427
3156645506,topperc,LGTM,2025-08-26T17:32:30Z,155427
3156579698,charithaintc,,2025-08-26T17:21:00Z,155425
3158870106,adam-smnk,,2025-08-27T08:30:15Z,155425
3159013572,akroviakov,,2025-08-27T09:15:14Z,155425
3159045217,akroviakov,,2025-08-27T09:26:32Z,155425
3159046058,akroviakov,,2025-08-27T09:26:50Z,155425
3159053277,akroviakov,,2025-08-27T09:29:23Z,155425
3159076625,akroviakov,,2025-08-27T09:37:40Z,155425
3159122007,adam-smnk,,2025-08-27T09:50:33Z,155425
3159129347,adam-smnk,,2025-08-27T09:58:47Z,155425
3159843571,akroviakov,,2025-08-27T13:38:38Z,155425
3159890319,adam-smnk,,2025-08-27T13:49:41Z,155425
3159945726,akroviakov,,2025-08-27T14:03:05Z,155425
3160696184,charithaintc,LGTM. ,2025-08-27T16:33:18Z,155425
3163948056,akroviakov,,2025-08-28T09:04:36Z,155425
3163948761,akroviakov,,2025-08-28T09:04:48Z,155425
3163950902,akroviakov,,2025-08-28T09:05:30Z,155425
3164044633,adam-smnk,,2025-08-28T09:29:08Z,155425
3159053869,tblah,Nice work. I bet this will solve bugs we didn't even know we had :),2025-08-27T09:29:35Z,155424
3156157476,pawosm-arm,"looks like a reapply of something that already worked for us.
",2025-08-26T15:18:30Z,155422
3156588109,vzakhari,Thank you!,2025-08-26T17:13:42Z,155422
3159854245,ldionne,"This is a clear win, nice!",2025-08-27T13:41:33Z,155419
3169469964,dtcxzyw,LG,2025-08-29T17:09:31Z,155415
3156056828,jurahul,,2025-08-26T14:57:36Z,155414
3155786666,phoebewang,LGTM.,2025-08-26T13:59:56Z,155409
3158259108,arsenm,Can you precommit the test cases ,2025-08-27T04:58:32Z,155408
3163088756,arsenm,,2025-08-28T04:19:28Z,155408
3160035305,kazutakahirata,Thank you for taking care of this!,2025-08-27T14:25:58Z,155407
3171079639,dtcxzyw,LG,2025-08-30T15:19:47Z,155404
3167854967,adam-smnk,,2025-08-29T08:36:31Z,155403
3168047343,arun-thmn,,2025-08-29T09:27:41Z,155403
3168049008,arun-thmn,,2025-08-29T09:28:18Z,155403
3168049974,arun-thmn,,2025-08-29T09:28:39Z,155403
3168079741,adam-smnk,@rengolin Any more comments?,2025-08-29T09:39:30Z,155403
3168212119,arun-thmn,,2025-08-29T10:21:10Z,155403
3168214994,arun-thmn,,2025-08-29T10:21:55Z,155403
3168217270,adam-smnk,,2025-08-29T10:22:20Z,155403
3155670415,vgvassilev,LGTM!,2025-08-26T13:34:59Z,155400
3155055028,zero9178,,2025-08-26T10:48:22Z,155393
3155098534,lukel97,"LGTM. Btw the tag in the commit title should be `[RISCV]`, we don't really use `[RVV]`",2025-08-26T11:00:25Z,155389
3171095429,dtcxzyw,LG,2025-08-30T15:44:27Z,155379
3155023048,fhahn,,2025-08-26T10:38:27Z,155383
3155032075,lukel97,,2025-08-26T10:41:37Z,155383
3155175966,artagnon,,2025-08-26T11:31:20Z,155383
3160636057,lukel97,,2025-08-27T16:17:11Z,155383
3160649580,artagnon,,2025-08-27T16:20:32Z,155383
3173157043,lukel97,,2025-09-01T10:42:17Z,155383
3173829108,lukel97,,2025-09-01T14:08:08Z,155383
3173870235,lukel97,,2025-09-01T14:20:02Z,155383
3174093630,artagnon,,2025-09-01T15:47:11Z,155383
3174140598,artagnon,,2025-09-01T16:08:37Z,155383
3174156103,lukel97,,2025-09-01T16:16:36Z,155383
3174158147,fhahn,,2025-09-01T16:18:39Z,155383
3174173078,lukel97,,2025-09-01T16:28:07Z,155383
3174180840,artagnon,"I think this makes sense. With my logical-op simplifications, which should go after this, we might get even more simplifications.",2025-09-01T16:33:13Z,155383
3174375157,artagnon,"I think this LGTM, thanks. I will defer to @fhahn for any concerns.",2025-09-01T18:54:17Z,155383
3175166143,Mel-Chen,"Why we don't generate `logical_and(header_mask, logical_and(mask1, mask2))` directly from the beginning, instead of relying on ::optimize?",2025-09-02T07:09:07Z,155383
3176027138,fhahn,,2025-09-02T10:56:09Z,155383
3176038917,lukel97,,2025-09-02T10:58:54Z,155383
3176109621,lukel97,,2025-09-02T11:23:32Z,155383
3177592375,fhahn,"LGTM, thanks",2025-09-02T17:57:34Z,155383
3154926695,steakhal,LGTM. I only had a tiny remark inline.,2025-08-26T10:09:16Z,155375
3156845823,mizvekov,LGTM,2025-08-26T18:33:42Z,155375
3154708754,uweigand,,2025-08-26T09:16:23Z,155377
3154860621,folkertdev,,2025-08-26T09:47:31Z,155377
3154863696,folkertdev,,2025-08-26T09:48:00Z,155377
3155266681,uweigand,,2025-08-26T11:46:47Z,155377
3155281132,uweigand,,2025-08-26T11:48:56Z,155377
3155657820,uweigand,Looking pretty good now!   I'm wondering - should we handle PCKLS similarly?,2025-08-26T13:33:02Z,155377
3155748026,folkertdev,,2025-08-26T13:51:48Z,155377
3155781204,uweigand,"Looks all good to me.  Only remaining question is whether we can drop the `IntegerMinMaxVectorOps` patterns now - if the tests still all pass, we should just do it as part of this patch.",2025-08-26T13:58:46Z,155377
3155839888,uweigand,"Excellent, thanks!  I think this is ready to move out of draft status.",2025-08-26T14:11:27Z,155377
3155879242,folkertdev,,2025-08-26T14:19:40Z,155377
3155901773,uweigand,LGTM assuming CI passes.  Thanks for working on this!,2025-08-26T14:24:48Z,155377
3157480682,arichardson,,2025-08-26T22:21:10Z,155374
3157576880,arichardson,,2025-08-26T23:06:56Z,155374
3158279222,arichardson,,2025-08-27T05:12:25Z,155374
3168564278,resistor,,2025-08-29T12:30:01Z,155374
3169098225,arichardson,,2025-08-29T15:05:47Z,155374
3173424892,nikic,"This looks reasonable to me, but at least someone working on CHERI should approve.",2025-09-01T12:21:07Z,155374
3174746129,arichardson,,2025-09-02T02:52:47Z,155374
3157084493,pcc,,2025-08-26T19:46:04Z,155373
3157075409,pcc,,2025-08-26T19:42:40Z,155372
3155618843,SixWeining,The LoongArch bits LGTM.,2025-08-26T13:24:52Z,155371
3165576365,vitalybuka,,2025-08-28T16:14:04Z,155371
3167029956,zhaoqi5,,2025-08-29T01:17:53Z,155371
3154801744,Fznamznon,A release note probably makes sense.,2025-08-26T09:34:15Z,155368
3155614138,erichkeane,,2025-08-26T13:23:52Z,155368
3156340592,erichkeane,,2025-08-26T16:00:29Z,155368
3154549390,ssahasra,,2025-08-26T08:35:59Z,155370
3154980909,Pierre-vh,,2025-08-26T10:24:18Z,155370
3155009549,Pierre-vh,,2025-08-26T10:33:38Z,155370
3164970695,nhaehnle,Thanks!,2025-08-28T13:53:24Z,155370
3172636848,jayfoad,Thanks!,2025-09-01T08:26:47Z,155370
3154378289,Michael137,,2025-08-26T07:45:19Z,155366
3156409431,lenary,,2025-08-26T16:18:16Z,155367
3158147983,topperc,LGTM,2025-08-27T03:22:27Z,155367
3154290715,kasuga-fj,,2025-08-26T07:22:10Z,155362
3154971247,nikic,,2025-08-26T10:21:02Z,155361
3154128450,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR implements support for using prebuilt module files in clangd's C++20 modules system to avoid unnecessary rebuilds. The change allows clangd to detect and reuse existing module files specified through `-fmodule-file=` flags in the compilation database.

Key changes:
- Introduced `PrebuiltModuleFile` and `BuiltModuleFile` classes to distinguish between externally provided and internally built module files
- Added logic to check for and validate prebuilt module files before attempting to build them
- Refactored the module file ownership model with clear inheritance hierarchy

### Reviewed Changes

Copilot reviewed 2 out of 2 changed files in this pull request and generated 1 comment.

| File | Description |
| ---- | ----------- |
| clang-tools-extra/clangd/ModulesBuilder.cpp | Core implementation of prebuilt module detection, class refactoring, and module building logic |
| clang-tools-extra/clangd/unittests/PrerequisiteModulesTest.cpp | Added test case to verify prebuilt module file functionality |



",2025-08-26T06:34:18Z,155360
3154522855,RKSimon,,2025-08-26T08:22:23Z,155358
3154600763,tbaederr,,2025-08-26T08:44:15Z,155358
3154035150,thurstond,"Thanks for the patch!

Nit: the title is ambiguous. ""Protect against scalable vectors"" could be misinterpreted to mean that scalar vectors will have use-after-scope protection; this patch is actually deliberately not attempting instrumentation for scalable vectors.",2025-08-26T05:53:23Z,155357
3154423355,sdesmalen-arm,,2025-08-26T07:56:59Z,155357
3154966293,davemgreen,,2025-08-26T10:19:21Z,155357
3158785683,nikic,,2025-08-27T08:00:29Z,155357
3158785664,sdesmalen-arm,,2025-08-27T08:05:13Z,155357
3159324061,thurstond,,2025-08-27T11:00:26Z,155357
3159673185,sdesmalen-arm,,2025-08-27T12:54:38Z,155357
3153853738,aemerson,Sorry about the size of the tests. I did run these tests through a C test harness with test inputs and compared vs SelectionDAG.,2025-08-26T04:39:12Z,155353
3158350869,davemgreen,"In the long run would we want to shift via the stack, like DAG does?",2025-08-27T07:53:00Z,155353
3158917671,aemerson,,2025-08-27T08:46:42Z,155353
3158929059,aemerson,,2025-08-27T08:50:39Z,155353
3158930900,aemerson,,2025-08-27T08:51:16Z,155353
3158931657,aemerson,,2025-08-27T08:51:32Z,155353
3167851614,davemgreen,"Yeah constant shifts look much better, those ones are much easier.

Any other comments?",2025-08-29T13:10:53Z,155353
3155386187,mjklemm,LGTM,2025-08-26T12:21:06Z,155355
3156128717,vzakhari,,2025-08-26T15:12:48Z,155355
3158278509,ergawy,,2025-08-27T05:11:51Z,155355
3160217940,vzakhari,Thank you!,2025-08-27T14:58:40Z,155355
3156558855,JDevlieghere,"Looks good. Are there other places where this would be applicable? If so, maybe we can turn this into a little helper? If not then this is fine.",2025-08-26T17:03:15Z,155352
3156853857,JDevlieghere,"Thanks, this LGTM!",2025-08-26T18:36:46Z,155352
3155626812,erichkeane,"I might suggest updating the comment as well to match the new name, but else, lgtm.",2025-08-26T13:26:32Z,155351
3156341105,erichkeane,,2025-08-26T16:00:36Z,155351
3154378793,HazardyKnusperkeks,,2025-08-26T07:45:28Z,155346
3155794882,mydeveloperday,,2025-08-26T14:01:43Z,155346
3153663967,zyn0217,,2025-08-26T02:45:19Z,155342
3155859846,teresajohnson,lgtm,2025-08-26T14:15:13Z,155341
3156094926,teresajohnson,Can you commit all of the other changes besides the analysis manager changes in a separate commit then rebase this one? Those all lgtm and it will be easier to see and review the main changes related to the PR title.,2025-08-26T15:06:08Z,155338
3156952288,teresajohnson,"Description needs update to reflect the removal of the style fixes, but otherwise LGTM",2025-08-26T19:04:40Z,155338
3153439979,rampitec,"I do not like it too, and probably this is not the only place we have to check it. But that's right, this is the right thing to do.",2025-08-26T00:45:53Z,155336
3153451694,boomanaiden154,LGTM once the CI passes.,2025-08-26T00:52:01Z,155328
3157339683,boomanaiden154,Seems like a reasonable enough way to do it to me.,2025-08-26T21:17:15Z,155328
3153419771,bogner,,2025-08-26T00:33:55Z,155332
3155714982,s-perron,"You will have to update the spir-v backend. We use that bit determine which capabilities are required. See

https://github.com/llvm/llvm-project/blob/5d4aa87ca5176a54b8395141df565255e3fde9ed/llvm/lib/Target/SPIRV/SPIRVInstructionSelector.cpp#L4279

I would suggest setting IsNonUniform to false, with a TODO reference the issue for the uniformity analysis. Then get the name from operand 6 instead of 7.",2025-08-26T13:48:30Z,155332
3156009861,tblah,,2025-08-26T15:07:55Z,155325
3156481869,vzakhari,,2025-08-26T16:40:58Z,155325
3156613375,clementval,LGTM,2025-08-26T17:20:46Z,155325
3158975484,tblah,LGTM. Thanks!,2025-08-27T09:04:35Z,155325
3159002169,abidh,Thanks for working on this. LGTM.,2025-08-27T09:11:27Z,155325
3153294749,mtrofin,,2025-08-25T23:12:38Z,155323
3153297675,mtrofin,,2025-08-25T23:14:01Z,155323
3153299716,mtrofin,,2025-08-25T23:14:52Z,155323
3153301703,mtrofin,,2025-08-25T23:16:26Z,155323
3153302193,mtrofin,,2025-08-25T23:16:54Z,155323
3153303501,mtrofin,,2025-08-25T23:18:07Z,155323
3153542818,svkeerthy,,2025-08-26T01:39:35Z,155323
3153543520,svkeerthy,,2025-08-26T01:40:14Z,155323
3153545479,svkeerthy,,2025-08-26T01:41:17Z,155323
3157526349,boomanaiden154,,2025-08-26T22:42:34Z,155323
3157614187,svkeerthy,,2025-08-26T23:23:43Z,155323
3159874606,mtrofin,,2025-08-27T13:46:36Z,155323
3159895514,mtrofin,,2025-08-27T13:50:52Z,155323
3159931152,mtrofin,,2025-08-27T13:59:23Z,155323
3159932870,mtrofin,,2025-08-27T13:59:48Z,155323
3166909406,boomanaiden154,,2025-08-28T23:35:42Z,155323
3166909920,boomanaiden154,,2025-08-28T23:35:51Z,155323
3170017005,svkeerthy,,2025-08-29T20:10:02Z,155323
3170021089,svkeerthy,,2025-08-29T20:11:05Z,155323
3153260836,Jlalond,"LGTM, thanks for fixing the flakey test",2025-08-25T22:50:37Z,155322
3154027200,KanRobert,,2025-08-26T05:49:32Z,155321
3154433596,phoebewang,,2025-08-26T07:56:49Z,155321
3154461722,RKSimon,,2025-08-26T08:04:11Z,155321
3153150382,shiltian,,2025-08-25T21:56:56Z,155317
3153178731,ojhunt,,2025-08-25T22:08:55Z,155319
3153281137,rnk,LGTM with suggested comment,2025-08-25T23:04:50Z,155318
3154000401,MaskRay,,2025-08-26T05:36:36Z,155316
3158202360,MaskRay,,2025-08-27T04:10:17Z,155316
3158243627,MaskRay,,2025-08-27T04:45:59Z,155316
3158245719,MaskRay,,2025-08-27T04:48:58Z,155316
3158988521,aleks-tmb,,2025-08-27T09:08:04Z,155316
3158994687,aleks-tmb,,2025-08-27T09:09:30Z,155316
3159013057,aleks-tmb,,2025-08-27T09:15:04Z,155316
3163248825,MaskRay,,2025-08-28T05:45:06Z,155316
3163250476,MaskRay,,2025-08-28T05:46:05Z,155316
3153139465,shiltian,,2025-08-25T21:51:47Z,155314
3153123006,shiltian,,2025-08-25T21:45:34Z,155312
3153125332,shiltian,,2025-08-25T21:46:49Z,155310
3153126216,shiltian,,2025-08-25T21:47:17Z,155307
3153105815,shiltian,,2025-08-25T21:36:23Z,155305
3153126716,shiltian,,2025-08-25T21:47:35Z,155306
3154079565,davemgreen,,2025-08-26T07:00:58Z,155308
3154229270,davemgreen,If you want me to take this over I am happy to do so.,2025-08-26T07:03:51Z,155308
3155160422,shashforge,,2025-08-26T11:21:50Z,155308
3155161406,shashforge,,2025-08-26T11:22:12Z,155308
3155164457,shashforge,,2025-08-26T11:23:15Z,155308
3155167953,shashforge,,2025-08-26T11:24:30Z,155308
3155297644,davemgreen,Nice work. Any reason to not use update_llc_test_checks.py?,2025-08-26T11:53:26Z,155308
3155813492,davemgreen,"Thanks. @ozbenh does this do OK in your testing?

@efriedma-quic @DanielKristofKiss does this sound OK to you? I'm not an expert with pacbti and exception handling, but it seems OK to me.",2025-08-26T17:12:38Z,155308
3156925421,DanielKristofKiss,besides the NITs  LGTM.,2025-08-26T19:03:42Z,155308
3157040157,shashforge,,2025-08-26T19:32:30Z,155308
3157181370,efriedma-quic,,2025-08-26T21:05:05Z,155308
3159708002,shashforge,,2025-08-27T13:05:37Z,155308
3161717057,efriedma-quic,,2025-08-27T20:59:18Z,155308
3164608613,shashforge,,2025-08-28T12:15:50Z,155308
3164625424,shashforge,,2025-08-28T12:21:05Z,155308
3166042013,efriedma-quic,LGTM,2025-08-28T18:22:22Z,155308
3153090275,fmayer,IMO it would be less magic to explicitly build into %t.dir and then lass -L%t.dir manually as well. But this is OK as well.,2025-08-25T21:29:56Z,155302
3153091574,fmayer,,2025-08-25T21:30:20Z,155302
3153094496,boomanaiden154,,2025-08-25T21:31:55Z,155302
3153130259,fmayer,,2025-08-25T21:49:23Z,155302
3153147329,boomanaiden154,,2025-08-25T21:55:16Z,155298
3153063140,shiltian,,2025-08-25T21:17:52Z,155295
3154515990,nikic,LGTM assuming no significant compile-time impact.,2025-08-26T08:27:37Z,155300
3154898152,fhahn,Compile-time results look neutral overall http://llvm-compile-time-tracker.com/compare.php?from=bac8c8784c848f1dd7ddf44a9a463e6c15c6e594&to=89977e0dec139faae854c94fe932b7b768e60537&stat=instructions:u,2025-08-26T10:54:01Z,155300
3153006745,shiltian,,2025-08-25T20:56:20Z,155293
3153375578,rafaelauler,,2025-08-26T00:02:12Z,155291
3153006150,shiltian,,2025-08-25T20:56:03Z,155292
3152999972,lenary,LGTM. Thanks,2025-08-25T20:53:15Z,155289
3153797027,wangpc-pp,LGTM.,2025-08-26T04:01:54Z,155286
3156315757,preames,LGTM,2025-08-26T15:54:58Z,155286
3154704645,Xazax-hun,,2025-08-26T09:09:16Z,155284
3153328639,kasuga-fj,"LGTM, thank you very much.",2025-08-25T23:36:02Z,155279
3153264355,jasonmolenda,"This looks good to me.  I was looking at this exact section of ParseSymtab a few months ago and thought the same change was correct, but didn't do the finishing work to land the idea.  I also didn't clean up the now-unnecessary `symbol_byte_size`, good catch.",2025-08-25T22:57:21Z,155282
3162465114,kuhar,Looks good overall,2025-08-28T00:42:35Z,155278
3165020541,kuhar,LGTM,2025-08-28T14:06:11Z,155278
3165405289,kuhar,,2025-08-28T15:24:58Z,155278
3152503025,erichkeane,"1 nit, else lgtm.",2025-08-25T18:05:24Z,155275
3153005140,AmrDeveloper,"LGMT, just nits",2025-08-25T20:57:17Z,155275
3153303360,bcardosolopes,,2025-08-25T23:17:57Z,155275
3152123075,rengolin,"obvious negative tests, lg, thanks!",2025-08-25T16:06:54Z,155264
3152010968,kuhar,,2025-08-25T15:33:19Z,155259
3158798931,banach-space,"LGTM, thanks for the updates!",2025-08-27T08:05:09Z,155259
3152196690,Caslyn,,2025-08-25T16:28:03Z,155261
3152333586,joker-eph,,2025-08-25T17:05:04Z,155258
3155615424,tblah,,2025-08-26T13:24:16Z,155257
3155652333,kparzysz,,2025-08-26T13:30:59Z,155257
3156786013,kparzysz,,2025-08-26T18:14:29Z,155257
3159015170,tblah,Thanks for explaining,2025-08-27T09:15:46Z,155257
3152075971,ldionne,LGTM with rewording suggestion,2025-08-25T15:55:01Z,155252
3155969956,nikic,,2025-08-26T14:55:22Z,155253
3156186078,dtcxzyw,,2025-08-26T16:12:24Z,155253
3156407235,nikic,,2025-08-26T16:17:28Z,155253
3156546160,dtcxzyw,,2025-08-26T16:59:17Z,155253
3171104785,dtcxzyw,,2025-08-30T16:02:05Z,155253
3171215163,nikic,,2025-08-30T20:31:32Z,155253
3174408695,nikic,LGTM,2025-09-01T19:32:00Z,155253
3179549100,fhahn,"very nice, thanks!",2025-09-03T08:33:30Z,155253
3152011800,matthias-springer,,2025-08-25T15:33:34Z,155254
3151947167,ldionne,,2025-08-25T15:16:25Z,155251
3152156114,nikic,We need to also either backport a fix for lldb tests or disable the relevant tests. That needs to happen as part of this PR.,2025-08-25T16:14:21Z,155251
3151762565,boomanaiden154,Comment on the Asan tests in the commit message too?,2025-08-25T14:33:54Z,155250
3151831700,matthias-springer,,2025-08-25T14:50:37Z,155248
3152025170,amd-eochoalo,,2025-08-25T15:38:07Z,155248
3153790866,owenca,,2025-08-26T03:57:07Z,155247
3152093369,ldionne,,2025-08-25T16:46:13Z,155245
3165349316,ldionne,"I think this is an amazing idea.

As we discussed just now, this idea should also be applicable more widely to all of our algorithms that use strict-weak orderings, which is a lot of algorithms. I'd be curious to investigate the impact of some of those optimizations.",2025-08-28T15:52:22Z,155245
3168049382,philnik777,,2025-08-29T09:47:23Z,155245
3177546836,ldionne,LGTM with a few nitpicks. This is a great optimization!,2025-09-02T17:52:09Z,155245
3171130035,matthias-springer,,2025-08-30T17:17:44Z,155244
3171228580,tblah,Flang changes LGTM. Thank you for the fixes.,2025-08-30T20:57:51Z,155244
3171330060,j2kun,,2025-08-31T03:23:35Z,155244
3171589850,zero9178,LGTM % 1 public API comment,2025-08-31T11:54:14Z,155244
3160073054,arsenm,,2025-08-27T14:33:50Z,155246
3151598873,j2kun,,2025-08-25T13:57:22Z,155243
3151646928,joker-eph,,2025-08-25T14:08:32Z,155242
3154762909,zero9178,,2025-08-26T09:25:34Z,155242
3154804741,matthias-springer,,2025-08-26T09:34:26Z,155242
3154823188,matthias-springer,,2025-08-26T09:38:29Z,155242
3154838930,joker-eph,,2025-08-26T09:42:40Z,155242
3154839201,zero9178,,2025-08-26T09:43:09Z,155242
3154845845,zero9178,,2025-08-26T09:44:40Z,155242
3151747254,walter-erquinigo,thanks!,2025-08-25T14:29:42Z,155238
3152396130,ashgti,,2025-08-25T17:24:05Z,155238
3151576953,arsenm,"Not sure why there are so many end to end test changes. These are always deleted at the start of RA, unless they are live out of a block ",2025-08-25T13:52:30Z,155241
3153560542,arsenm,,2025-08-26T01:48:58Z,155241
3151162263,NagyDonat,,2025-08-25T12:12:29Z,155237
3151122424,arsenm,,2025-08-25T12:00:55Z,155235
3151338765,nikic,,2025-08-25T12:56:04Z,155236
3151565573,annamthomas,,2025-08-25T13:49:34Z,155236
3154700056,nikic,LGTM,2025-08-26T09:07:59Z,155236
3154885646,fhahn,,2025-08-26T09:54:35Z,155236
3155224876,annamthomas,,2025-08-26T11:35:49Z,155236
3155261589,annamthomas,,2025-08-26T11:44:07Z,155236
3161240682,fhahn,,2025-08-27T18:20:04Z,155236
3151000276,alexey-bataev,,2025-08-25T11:19:10Z,155233
3153357601,shafik,"Do you know which clause causes clang to choose to reject this, looks like we are the only one: https://godbolt.org/z/KhfeP5W6d

CC @hokein looks like came in w/ bd4662cd3f374",2025-08-25T23:52:29Z,155230
3151550202,lukel97,,2025-08-25T14:06:25Z,155231
3152285540,MitchBriles,,2025-08-25T16:49:44Z,155231
3152476152,topperc,,2025-08-25T17:53:45Z,155231
3178211734,topperc,,2025-09-02T21:40:46Z,155231
3178244120,MitchBriles,,2025-09-02T21:55:49Z,155231
3178307877,topperc,LGTM,2025-09-02T22:18:20Z,155231
3178570863,lukel97,,2025-09-03T00:39:08Z,155231
3151951737,jurahul,"LGTM. I left the OPC_Fail when I added the OrFail variants in case there was a path in the code that escaped this check (to generate OrFail variant), but yeah, looks like there is none. Thanks for cleaning this up.",2025-08-25T15:17:20Z,155229
3151685569,nikic,LGTM,2025-08-25T14:16:27Z,155228
3150659216,zero9178,LGTM,2025-08-25T09:39:23Z,155227
3164460216,simon-camp,,2025-08-28T11:27:56Z,155224
3164545046,marbre,,2025-08-28T11:55:09Z,155224
3155033217,DavidSpickett,,2025-08-26T10:42:03Z,155226
3155036383,DavidSpickett,,2025-08-26T10:43:05Z,155226
3155038478,DavidSpickett,"https://cmake.org/cmake/help/latest/command/configure_file.html if other reviewers are wondering whether configure_file is an llvm thing, it isn't.

I always have to `python3.exe .\bin\....` when reproducing test failures so I would appreciate this change.
",2025-08-26T10:43:45Z,155226
3155042957,DavidSpickett,,2025-08-26T10:45:09Z,155226
3159197312,omjavaid,,2025-08-27T10:17:05Z,155226
3159239590,DavidSpickett,,2025-08-27T10:34:19Z,155226
3159580205,omjavaid,,2025-08-27T12:28:07Z,155226
3159590119,omjavaid,,2025-08-27T12:29:58Z,155226
3159593553,DavidSpickett,LGTM,2025-08-27T12:30:50Z,155226
3153481830,phoebewang,,2025-08-26T01:07:33Z,155225
3153543166,LuoYuanke,,2025-08-26T01:39:55Z,155225
3153631173,LuoYuanke,,2025-08-26T02:24:32Z,155225
3153663067,phoebewang,,2025-08-26T02:44:50Z,155225
3153663750,phoebewang,LGTM with one nit.,2025-08-26T02:45:09Z,155225
3153769067,LuoYuanke,,2025-08-26T03:40:19Z,155225
3154038621,KanRobert,,2025-08-26T05:55:15Z,155225
3152092693,vzakhari,Thank you!,2025-08-25T15:58:39Z,155223
3155589702,tblah,LGTM thanks!,2025-08-26T13:17:33Z,155223
3155956201,yxsamliu,,2025-08-26T14:36:12Z,155222
3155960032,yxsamliu,,2025-08-26T14:37:01Z,155222
3156810809,rampitec,,2025-08-26T18:23:02Z,155222
3158022092,yxsamliu,,2025-08-27T01:51:48Z,155222
3150534045,nikic,"LGTM, thanks!",2025-08-25T09:04:29Z,155221
3152773561,jurahul,,2025-08-25T19:30:54Z,155220
3150302672,philnik777,Thanks!,2025-08-25T07:47:47Z,155217
3150136183,gysit,LGTM,2025-08-25T06:46:56Z,155214
3151937120,jurahul,,2025-08-25T15:13:32Z,155211
3150828179,Rajveer100,Implementation looks reasonable from my end. I will leave the rest up to the maintainers.,2025-08-25T10:30:29Z,155216
3151220996,XChy,,2025-08-25T12:28:12Z,155216
3155253683,RKSimon,,2025-08-26T11:42:14Z,155216
3158846905,RKSimon,SGTM although I'd prefer we start just with bitcast and then add trunc/sext/zext later patches in case there's a flaw in the FMF handling that I've missed.,2025-08-27T08:29:33Z,155216
3159213738,XChy,,2025-08-27T10:23:58Z,155216
3159955709,nikic,,2025-08-27T14:05:54Z,155216
3174038986,RKSimon,Still would prefer that this PR just handles bitcasts and use followup PRs to add trunc/ext handling,2025-09-01T15:22:55Z,155216
3175461070,RKSimon,LGTM - cheers,2025-09-02T08:32:30Z,155216
3150036496,arsenm,,2025-08-25T06:04:31Z,155207
3149880658,arsenm,,2025-08-25T04:35:58Z,155206
3150442267,tgymnich,,2025-08-25T08:35:18Z,155206
3150440685,tgymnich,,2025-08-25T08:34:48Z,155205
3151718167,kuhar,,2025-08-25T14:24:03Z,155205
3151751302,kazutakahirata,,2025-08-25T14:30:37Z,155205
3150168885,arsenm,,2025-08-25T06:59:58Z,155204
3151649576,kuhar,Nice cleanup!,2025-08-25T14:09:59Z,155204
3151694191,kazutakahirata,,2025-08-25T14:18:40Z,155204
3151695505,kazutakahirata,,2025-08-25T14:18:55Z,155204
3150034813,arsenm,,2025-08-25T06:03:57Z,155203
3151641448,kuhar,,2025-08-25T14:07:24Z,155203
3149927177,arsenm,,2025-08-25T05:12:26Z,155201
3155509692,phoebewang,LGTM.,2025-08-26T12:57:05Z,155199
3155606146,RKSimon,LGTM - cheers,2025-08-26T13:21:42Z,155199
3150488742,gonzalobg,,2025-08-25T08:50:42Z,155198
3152503190,AlexMaclean,,2025-08-25T18:04:17Z,155198
3157373013,dakersnar,LGTM with some small questions and nits,2025-08-26T22:46:45Z,155198
3158059099,AlexMaclean,,2025-08-27T02:09:47Z,155198
3158064043,AlexMaclean,,2025-08-27T02:14:13Z,155198
3160343726,dakersnar,,2025-08-27T15:20:58Z,155198
3160360053,AlexMaclean,,2025-08-27T15:24:18Z,155198
3160380555,dakersnar,,2025-08-27T15:28:29Z,155198
3161916874,Artem-B,"LGTM overall, with few nits.",2025-08-27T22:36:18Z,155198
3166169843,AlexMaclean,,2025-08-28T19:08:36Z,155198
3166174251,AlexMaclean,,2025-08-28T19:10:17Z,155198
3172788874,heiher,LGTM. Thanks!,2025-09-01T09:04:50Z,155196
3158265882,sjarus,"Looks good to me, thanks ! ",2025-08-27T05:04:18Z,155197
3160147594,lhutton1,,2025-08-27T15:29:41Z,155197
3162886949,ShivaChen,,2025-08-28T02:53:40Z,155197
3162900545,ShivaChen,,2025-08-28T02:57:44Z,155197
3164672485,lhutton1,Thanks @ShivaChen!,2025-08-28T12:33:46Z,155197
3154529882,RKSimon,Don't the vpdpwss intrinsics need fixing to use vXi16 types as well?,2025-08-26T08:28:24Z,155194
3164252594,RKSimon,vpdpwss intrinsics need to be updated as well,2025-08-28T10:28:02Z,155194
3164637720,phoebewang,,2025-08-28T12:24:50Z,155194
3167477849,BaiXilin,,2025-08-29T06:04:16Z,155194
3167539211,phoebewang,,2025-08-29T06:31:37Z,155194
3167618872,BaiXilin,,2025-08-29T07:06:46Z,155194
3167834679,RKSimon,,2025-08-29T08:19:33Z,155194
3169177875,RKSimon,we usually include basic upgrade tests in CodeGen/X86 as well - but there should be an entry for every intrinsics we've changed - nothing as complex as msan - and it looks like we're missing avx_vnni-intrinsics-upgrade.ll entirely,2025-08-29T15:30:17Z,155194
3204966661,phoebewang,,2025-09-10T08:06:53Z,155194
3204987359,phoebewang,,2025-09-10T08:12:14Z,155194
3205185007,phoebewang,LGTM.,2025-09-10T09:03:14Z,155194
3205783216,RKSimon,LGTM,2025-09-10T11:48:46Z,155194
3153075435,vbvictor,,2025-08-25T21:23:44Z,155193
3153088656,boomanaiden154,,2025-08-25T21:28:51Z,155193
3156914592,vbvictor,,2025-08-26T19:17:37Z,155193
3157495654,boomanaiden154,,2025-08-26T22:26:57Z,155193
3159345769,vbvictor,,2025-08-27T11:07:27Z,155193
3166735005,cmtice,,2025-08-28T22:25:50Z,155186
3166941126,boomanaiden154,,2025-08-29T00:00:49Z,155186
3168009569,Keenuts,,2025-08-29T09:19:43Z,155186
3169614784,boomanaiden154,,2025-08-29T18:04:31Z,155186
3169614954,boomanaiden154,,2025-08-29T18:04:36Z,155186
3170685911,cmtice,,2025-08-29T23:13:36Z,155186
3152384209,jhuber6,"Most of this is documentation, I'd prefer that go with the `libc` documentation somewhere. Maybe @lntue knows a good place for that to live. Building instructions should link to offload / libc. This should probably just be a description of how to run the tests.",2025-08-25T17:19:54Z,155190
3155666653,jhuber6,,2025-08-26T13:34:07Z,155190
3152322121,MaskRay,,2025-08-25T17:01:08Z,155181
3149447298,kuhar,Nice,2025-08-24T17:21:38Z,155182
3149443698,vbvictor,LGTM,2025-08-24T17:07:30Z,155180
3149445708,vonosmas,LGTM once the float16-less platforms are fixed.,2025-08-24T17:15:30Z,155177
3149509614,lntue,,2025-08-24T21:28:44Z,155177
3149554626,vonosmas,,2025-08-24T23:45:52Z,155177
3149445360,nikic,"LGTM. I believe handling the multi-use case is fine, because GVN will later replace the smaller load with an extract from the larger load anyway.",2025-08-24T17:13:40Z,155176
3149445672,nikic,,2025-08-24T17:15:05Z,155176
3151771628,lukel97,,2025-08-25T14:36:03Z,155174
3151811043,artagnon,,2025-08-25T14:44:47Z,155174
3151825706,lukel97,LGTM,2025-08-25T14:48:50Z,155174
3152939774,fhahn,,2025-08-25T20:32:38Z,155174
3152952722,artagnon,,2025-08-25T20:35:51Z,155174
3152961156,fhahn,,2025-08-25T20:38:14Z,155174
3153621883,lukel97,,2025-08-26T02:18:01Z,155174
3155142941,fhahn,"LGTM, thanks",2025-08-26T11:15:42Z,155174
3155159276,lukel97,,2025-08-26T11:21:26Z,155174
3149389350,simon-camp,Thanks! Looks good to me!,2025-08-24T15:14:28Z,155171
3153296131,bcardosolopes,LGTM with one change needed,2025-08-25T23:14:05Z,155168
3156985292,andykaylor,I have no additional comments beyond what @bcardosolopes has already said.,2025-08-26T19:15:02Z,155168
3160007026,Lancern,,2025-08-27T14:18:44Z,155168
3153290838,bcardosolopes,"Seems pretty much in line with all the other complex work, LGTM pending any comments from Andy ",2025-08-25T23:10:35Z,155167
3157055155,andykaylor,This looks good. I just have a couple of requests regarding documentation.,2025-08-26T20:26:25Z,155167
3166563220,andykaylor,lgtm,2025-08-28T21:13:45Z,155167
3149374703,tgymnich,,2025-08-24T14:54:20Z,155164
3149335050,fhahn,"This should probably say update test, not fixing the build

lgtm",2025-08-24T13:14:49Z,155165
3149511235,lenary,"I'm a bit worries that this is the sort of place where a) big-endian data vs little-endian instructions will be a problem, and b) if we're using LLVM to both read and write in the test, and it is getting endianness wrong, then we won't necessarily see the issue in tests.

Have you separately cross-verified the reading and writing of dwarf data against binutils?",2025-08-24T21:35:59Z,155166
3160980286,lenary,"LGTM.

I don't think we should extend LLVM's in-tree tests with testing against gcc etc, I am happy to trust your confirmation that things were working together.",2025-08-27T17:25:27Z,155166
3149286112,nikic,,2025-08-24T10:52:17Z,155154
3149291856,andjo403,,2025-08-24T11:09:28Z,155154
3174648390,frederick-vs-ja,,2025-09-02T01:12:52Z,155156
3179517024,frederick-vs-ja,LGTM. Looks like that CI will be green soon.,2025-09-03T08:25:29Z,155156
3152006216,adrian-prantl,,2025-08-25T15:31:42Z,155153
3152395851,shafik,Thank you for the quick fix.,2025-08-25T17:23:58Z,155150
3153360667,shafik,Thank you for the quick fix!,2025-08-25T23:54:21Z,155149
3149495436,jroelofs,,2025-08-24T20:26:24Z,155148
3149496294,jroelofs,,2025-08-24T20:30:24Z,155148
3149501112,hnrklssn,,2025-08-24T20:51:08Z,155148
3152156141,hnrklssn,,2025-08-25T16:14:21Z,155148
3152275866,jroelofs,,2025-08-25T16:46:55Z,155148
3149224952,nikic,Can you please separate out the SCEV changes into separate PRs?,2025-08-24T07:56:37Z,155145
3149290830,nikic,,2025-08-24T11:07:00Z,155145
3149215254,zwuis,,2025-08-24T07:33:40Z,155143
3149220861,MythreyaK,,2025-08-24T07:38:24Z,155143
3149225025,MythreyaK,,2025-08-24T07:45:58Z,155143
3149225395,MythreyaK,,2025-08-24T07:47:38Z,155143
3149225457,zwuis,,2025-08-24T07:47:53Z,155143
3149228433,MythreyaK,,2025-08-24T07:56:41Z,155143
3149222065,cor3ntin,,2025-08-24T07:58:31Z,155143
3149235915,zwuis,,2025-08-24T08:19:00Z,155143
3149246166,MythreyaK,,2025-08-24T08:53:52Z,155143
3149529557,MythreyaK,,2025-08-24T22:25:20Z,155143
3149535408,MythreyaK,,2025-08-24T22:47:24Z,155143
3149628089,HighCommander4,Thanks! This looks generally good to me.,2025-08-25T02:47:27Z,155143
3154571724,MythreyaK,,2025-08-26T08:36:16Z,155143
3157673974,HighCommander4,,2025-08-26T23:56:14Z,155143
3157723567,HighCommander4,,2025-08-27T00:13:22Z,155143
3157765986,HighCommander4,,2025-08-27T00:26:32Z,155143
3157853897,zwuis,,2025-08-27T01:01:21Z,155143
3157925915,mizvekov,,2025-08-27T01:28:58Z,155143
3158065427,MythreyaK,,2025-08-27T02:15:29Z,155143
3158066290,MythreyaK,,2025-08-27T02:16:09Z,155143
3158066649,MythreyaK,,2025-08-27T02:16:30Z,155143
3158067327,MythreyaK,,2025-08-27T02:17:05Z,155143
3158144065,HighCommander4,"Updates look good to me, just one outstanding issue.",2025-08-27T03:19:03Z,155143
3158148770,MythreyaK,,2025-08-27T03:23:14Z,155143
3158156719,HighCommander4,,2025-08-27T03:30:05Z,155143
3158181687,HighCommander4,"LGTM, thanks!",2025-08-27T03:52:27Z,155143
3149149158,shiltian,The title needs to be more specific.,2025-08-24T03:29:40Z,155138
3149150212,carlocab,,2025-08-24T03:34:25Z,155138
3150647759,vgvassilev,,2025-08-25T09:38:48Z,155140
3151919201,vgvassilev,,2025-08-25T15:08:34Z,155140
3152334185,vgvassilev,,2025-08-25T17:05:15Z,155140
3155623478,kr-2003,,2025-08-26T13:25:50Z,155140
3156099611,kr-2003,,2025-08-26T15:07:13Z,155140
3156110358,kr-2003,,2025-08-26T15:09:23Z,155140
3156652251,vgvassilev,,2025-08-26T17:35:06Z,155140
3163659580,vgvassilev,,2025-08-28T07:57:10Z,155140
3171729637,kr-2003,,2025-08-31T17:38:55Z,155140
3171734426,vgvassilev,,2025-08-31T17:58:15Z,155140
3171762928,kr-2003,,2025-08-31T19:06:26Z,155140
3175106640,vgvassilev,,2025-09-02T07:02:19Z,155140
3187943101,kr-2003,,2025-09-05T04:28:04Z,155140
3187943379,kr-2003,,2025-09-05T04:28:20Z,155140
3188105829,vgvassilev,,2025-09-05T06:04:00Z,155140
3188111699,kr-2003,,2025-09-05T06:07:11Z,155140
3188116711,vgvassilev,,2025-09-05T06:09:01Z,155140
3188117771,vgvassilev,,2025-09-05T06:09:36Z,155140
3188128358,vgvassilev,,2025-09-05T06:15:04Z,155140
3191631547,kr-2003,,2025-09-06T06:24:44Z,155140
3191631971,kr-2003,,2025-09-06T06:25:36Z,155140
3194251430,vgvassilev,,2025-09-07T06:14:27Z,155140
3194493151,vgvassilev,LGTM! Thank you for the patience.,2025-09-07T15:34:47Z,155140
3149266403,tgymnich,,2025-08-24T09:52:25Z,155137
3149149487,shiltian,,2025-08-24T03:31:46Z,155135
3149149593,shiltian,,2025-08-24T03:32:15Z,155134
3149266105,tgymnich,,2025-08-24T09:51:16Z,155133
3149366633,kuhar,,2025-08-24T14:28:53Z,155133
3149397365,kazutakahirata,,2025-08-24T15:18:38Z,155133
3150347344,cdevadas,,2025-08-25T08:03:45Z,155125
3149149232,shiltian,,2025-08-24T03:29:59Z,155136
3154585318,steakhal,I didn't look at the semantics of the PR. I only spotchecked it.,2025-08-26T08:42:34Z,155131
3155782772,vidur2,,2025-08-26T13:59:06Z,155131
3155851596,steakhal,,2025-08-26T14:13:26Z,155131
3159555353,NagyDonat,"> Im sorry about messing up the naming convention, I havent contributed too much to open source stuff.

No harm done, this is part of the plan :slightly_smiling_face: Every contributor must learn these sometime and this time it was your turn to do so.

-----

I read the suggested code changes and overall I like them, this seems to be a useful change and the code seems to be nice.

However, as I started the CI processes, it seems that several tests fail with the current revision of the commit. You can find the details of the failures e.g. by searching for the string ""FAIL: Clang"" in the (very long...) [raw command line output](https://productionresultssa19.blob.core.windows.net/actions-results/fc316f15-7917-4184-97b0-6a08fac47e2b/workflow-job-run-2dcc4368-b2ed-502a-9023-83976bbc2898/logs/job/job-logs.txt?rsct=text%2Fplain&se=2025-08-27T12%3A38%3A14Z&sig=AQ52BAVVkoiFPBdeWcN3blpDMidXGH4bXOPsZtIHvs0%3D&ske=2025-08-27T23%3A07%3A54Z&skoid=ca7593d4-ee42-46cd-af88-8b886a2f84eb&sks=b&skt=2025-08-27T11%3A07%3A54Z&sktid=398a6654-997b-47e9-b12b-9515b896b4de&skv=2025-05-05&sp=r&spr=https&sr=b&st=2025-08-27T12%3A28%3A09Z&sv=2025-05-05).

-----

By the way it seems that the pull request https://github.com/llvm/llvm-project/pull/152751 (which is also under review right now) proposes a very similar, but more constrained heuristic: it also extends the `checkPostCall` callback of MallocChecker, but it only marks pointers passed to a constructor as ""escaped"" if it is the constructor of either `unique_ptr` or `shared_ptr`. (That commit also introduces another heuristic which checks `unique_ptr` or `shared_ptr` fields of temporary objects to avoid a different sort of false positive.)

We'll need to pay attention to avoid introducing redundancies or conflicting heuristics.



",2025-08-27T12:52:34Z,155131
3154774353,RKSimon,Please can you update to latest to see if it clears the CI failures?,2025-08-26T09:28:36Z,155127
3156054023,RKSimon,LGTM,2025-08-26T14:57:01Z,155127
3160485484,davemgreen,"I think this sounds OK. We don't use these nodes very much, so they might be difficult to add tests for. Please make sure you have done a bootstrap or whatnot to make sure nothing goes wrong.",2025-08-27T15:49:57Z,155122
3154305345,joker-eph,,2025-08-26T07:25:30Z,155123
3154408284,arsenm,,2025-08-26T07:52:02Z,155118
3156137637,LU-JOHN,,2025-08-26T15:14:39Z,155118
3160203861,arsenm,,2025-08-27T14:57:50Z,155118
3160573457,LU-JOHN,,2025-08-27T16:05:24Z,155118
3160574704,LU-JOHN,,2025-08-27T16:05:39Z,155118
3160580924,LU-JOHN,,2025-08-27T16:06:40Z,155118
3185460303,shiltian,Seems like @arsenm 's concern have been resolved. LGTM.,2025-09-04T13:56:00Z,155118
3185488781,arsenm,,2025-09-04T14:01:24Z,155118
3149361068,lntue,,2025-08-24T14:11:06Z,155112
3148648303,kazutakahirata,LGTM.  Thank you for fixing this!,2025-08-23T18:52:31Z,155117
3148379205,ftynse,,2025-08-23T16:23:40Z,155108
3148632683,kuhar,,2025-08-23T18:22:00Z,155109
3148916258,antoniofrighetto,,2025-08-23T20:45:25Z,155115
3151829929,nikic,LGTM,2025-08-25T14:50:17Z,155115
3150506477,ingomueller-net,"It's been too long ago that I looked at that code, so I can't give meaningful input on the design. Just a small comment on the documentation which might help readers (see inline).",2025-08-25T09:00:37Z,155114
3151380982,makslevental,,2025-08-25T13:06:45Z,155114
3154227935,jpienaar,"Could we perhaps pull in more of the why of removal into PR description to make it easier for folks who read the change in git log?

I'd not be opposed to removing Module._CAPICreate (Module's special casing in Python here is a bit historical). But if this already addresses the race then SGTM.",2025-08-26T14:15:28Z,155114
3157005801,makslevental,,2025-08-26T19:22:11Z,155114
3157035732,makslevental,,2025-08-26T19:31:06Z,155114
3157037114,makslevental,,2025-08-26T19:31:32Z,155114
3157178620,makslevental,,2025-08-26T20:16:50Z,155114
3165790566,jpienaar,,2025-08-28T17:22:36Z,155114
3165927094,makslevental,,2025-08-28T17:46:54Z,155114
3165928673,makslevental,,2025-08-28T17:47:30Z,155114
3171557249,superbobry,,2025-08-31T10:26:45Z,155114
3171712077,makslevental,,2025-08-31T16:30:28Z,155114
3174724115,makslevental,,2025-09-02T02:30:03Z,155114
3174724187,makslevental,,2025-09-02T02:30:08Z,155114
3174724528,makslevental,,2025-09-02T02:30:14Z,155114
3174724753,makslevental,,2025-09-02T02:30:25Z,155114
3174724805,makslevental,,2025-09-02T02:30:28Z,155114
3163085699,HighCommander4,"Looks good to me, thanks!",2025-08-28T04:17:05Z,155105
3150348808,cdevadas,LGTM.,2025-08-25T08:04:18Z,155104
3155577726,tblah,Thanks,2025-08-26T13:14:20Z,155099
3151735517,walter-erquinigo,Thank you for the attention to details :) This is what makes this DA great!,2025-08-25T14:27:09Z,155097
3152145881,JDevlieghere,,2025-08-25T16:11:29Z,155097
3148151065,andjo403,"only a nit comment.
looks good to me otherwise",2025-08-23T14:00:55Z,155096
3148902471,nikic,"LGTM. The correctness of this code depends on trunc nuw on ConstantRange being exact, which ConstantRange APIs usually do not promise. It may make sense to document it as an API guarantee.",2025-08-23T20:33:24Z,155096
3149916987,jpienaar,,2025-08-25T05:04:58Z,155092
3151749279,joker-eph,,2025-08-25T14:30:07Z,155092
3152413668,joker-eph,,2025-08-25T17:30:36Z,155092
3158084012,jpienaar,"Nice, thanks",2025-08-27T02:29:28Z,155092
3149265010,dtcxzyw,LG,2025-08-24T09:47:12Z,155087
3149281204,nikic,,2025-08-24T10:36:40Z,155087
3149423476,andjo403,,2025-08-24T15:50:30Z,155087
3171486168,dtcxzyw,,2025-08-31T08:03:37Z,155087
3171488992,nikic,,2025-08-31T08:13:22Z,155087
3153629666,phoebewang,,2025-08-26T02:23:25Z,155089
3154431170,RKSimon,The mask/maskz tests shouldn't be a problem - __builtin_ia32_select* intrinsics are already constexpr - you just need to add tests similar to what we've done in files lie avx512vpopcntdq-builtins.c,2025-08-26T07:59:19Z,155089
3161145929,RKSimon,,2025-08-27T17:57:31Z,155089
3161343009,moorabbit,,2025-08-27T18:45:12Z,155089
3161381755,moorabbit,,2025-08-27T18:55:08Z,155089
3163920716,RKSimon,,2025-08-28T08:56:54Z,155089
3165247161,moorabbit,,2025-08-28T14:55:03Z,155089
3165342955,RKSimon,,2025-08-28T15:13:01Z,155089
3165533486,moorabbit,,2025-08-28T16:00:52Z,155089
3165613698,RKSimon,LGTM - cheers,2025-08-28T16:24:00Z,155089
3147641480,carlosgalvezp,LGTM,2025-08-23T10:27:20Z,155083
3147687960,5chmidti,,2025-08-23T10:50:49Z,155083
3147739338,HerrCai0907,,2025-08-23T11:10:32Z,155083
3147763303,vbvictor,I guess LGTM too:),2025-08-23T11:17:59Z,155083
3147425673,cor3ntin,,2025-08-23T09:07:36Z,155080
3159123262,Fznamznon,,2025-08-27T09:51:02Z,155080
3171787739,cor3ntin,This needs a changelog entry. LGTM otherwise. Thanks!,2025-08-31T20:57:33Z,155080
3177770730,Fznamznon,,2025-09-02T19:02:10Z,155080
3187613407,zygoloid,,2025-09-05T00:35:15Z,155080
3188604191,HerrCai0907,,2025-09-05T09:14:44Z,155080
3148143766,zwuis,,2025-08-23T13:40:50Z,155078
3148316584,bondhugula,Thanks for fixing this. LGTM.,2025-08-23T15:16:03Z,155077
3147775274,arsenm,"Generally I think using volatile is the best way to defeat the optimization for the tests intended to use the stack, but it's not that important ",2025-08-23T11:22:55Z,155076
3152298961,rampitec,,2025-08-25T16:53:03Z,155076
3146853695,kazutakahirata,LGTM.  Thank you for taking care of this!,2025-08-23T04:44:13Z,155075
3148163659,shiltian,,2025-08-23T14:15:19Z,155074
3147028571,tgymnich,,2025-08-23T06:00:21Z,155071
3147027266,tgymnich,,2025-08-23T05:59:54Z,155070
3147740473,arsenm,,2025-08-23T11:11:07Z,155068
3147019525,tgymnich,,2025-08-23T05:57:25Z,155069
3147018315,tgymnich,,2025-08-23T05:57:03Z,155067
3147395441,cor3ntin,LGTM!,2025-08-23T08:35:40Z,155064
3146797686,s-barannikov,,2025-08-23T03:22:24Z,155065
3146858204,topperc,LGTM,2025-08-23T04:50:30Z,155065
3146789947,jhuber6,"Seems fine, were you able to test the libc stuff locally?",2025-08-23T03:05:57Z,155063
3146793685,rupprecht,,2025-08-23T03:14:17Z,155063
3146785278,jhuber6,,2025-08-23T02:58:46Z,155060
3148296389,medismailben,Very cool! LGTM!,2025-08-23T15:02:28Z,155061
3152891303,nikic,,2025-08-25T20:22:53Z,155058
3152910494,mtrofin,,2025-08-25T20:25:31Z,155058
3152922333,mtrofin,,2025-08-25T20:28:14Z,155058
3153015468,nikic,,2025-08-25T21:00:15Z,155058
3153020490,mtrofin,,2025-08-25T21:02:25Z,155058
3153021857,nikic,,2025-08-25T21:03:00Z,155058
3154481314,nikic,"LGTM, thanks!",2025-08-26T08:10:16Z,155058
3158269888,maksfb,LGTM,2025-08-27T05:07:32Z,155055
3156270380,s-perron,,2025-08-26T15:43:58Z,155053
3156280920,s-perron,,2025-08-26T15:46:39Z,155053
3182228803,bogner,,2025-09-03T20:03:24Z,155053
3186452546,hekota,,2025-09-04T17:54:59Z,155053
3190455599,bogner,,2025-09-05T18:50:52Z,155053
3190955194,bob80905,"LGTM, just a question",2025-09-05T22:25:30Z,155053
3190977434,hekota,,2025-09-05T22:35:19Z,155053
3190990016,bob80905,,2025-09-05T22:46:59Z,155053
3146738828,zyn0217,,2025-08-23T02:36:24Z,155050
3151571148,erichkeane,"1 nit on the documentation, else looks ok to me.  Give folks a little time on this though.",2025-08-25T13:51:37Z,155048
3153283121,bcardosolopes,,2025-08-25T23:06:21Z,155048
3153287625,bcardosolopes,LGTM! ,2025-08-25T23:08:49Z,155048
3162606733,shafik,I don't like that this was merged without any feedback from downstreams which will be affected by this large amount of churn and then there will be more churn later on. #,2025-08-28T01:17:52Z,155049
3147392574,cor3ntin,,2025-08-23T08:33:50Z,155051
3147666676,Sirraide,,2025-08-23T10:42:33Z,155051
3148426318,mizvekov,,2025-08-23T16:59:58Z,155051
3148879000,Sirraide,,2025-08-23T20:13:56Z,155051
3148892324,mizvekov,,2025-08-23T20:24:16Z,155051
3148894639,Sirraide,,2025-08-23T20:26:12Z,155051
3148918425,Sirraide,,2025-08-23T20:46:57Z,155051
3151554073,erichkeane,,2025-08-25T13:46:59Z,155051
3152523696,mizvekov,,2025-08-25T18:08:58Z,155051
3152529436,erichkeane,,2025-08-25T18:10:09Z,155051
3146636851,arsenm,,2025-08-23T01:13:24Z,155043
3153684577,lukel97,LGTM,2025-08-26T02:58:58Z,155043
3148652458,boomanaiden154,,2025-08-23T19:02:05Z,155041
3146473300,jimingham,I don't think we should add this for all lldb users.,2025-08-22T23:00:49Z,155039
3146410882,Jlalond,"LGTM, But @ashgti should also sign off",2025-08-22T22:32:53Z,155034
3146567406,ashgti,LGTM!,2025-08-23T00:12:42Z,155034
3146295744,erichkeane,,2025-08-22T21:54:44Z,155031
3156655029,t-rasmud,LGTM!,2025-08-26T17:36:09Z,155033
3198707288,haoNoQ,,2025-09-09T01:29:49Z,155033
3198715974,rniwa,,2025-09-09T01:36:53Z,155033
3198721166,rniwa,,2025-09-09T01:41:11Z,155033
3198735664,haoNoQ,,2025-09-09T01:51:32Z,155033
3146298701,erichkeane,,2025-08-22T21:55:42Z,155029
3146294375,erichkeane,,2025-08-22T21:54:11Z,155027
3146419766,bcardosolopes,LGTM w/ minor suggestion,2025-08-22T22:36:22Z,155027
3146549483,andykaylor,,2025-08-23T00:00:23Z,155027
3149456803,Andres-Salamanca,,2025-08-24T17:51:59Z,155027
3149461698,Andres-Salamanca,,2025-08-24T18:10:47Z,155027
3151564902,erichkeane,,2025-08-25T13:49:23Z,155027
3152192039,andykaylor,,2025-08-25T16:26:20Z,155027
3156651495,t-rasmud,,2025-08-26T17:34:52Z,155025
3200068228,rniwa,,2025-09-09T08:29:03Z,155025
3202921124,t-rasmud,LGTM!,2025-09-09T19:09:24Z,155025
3146302260,erichkeane,"Whew this is a huge change... would be awesome if we could split this up into the 'rote/simple' changes that don't really need review, and the 'meat and potatoes' parts.  ",2025-08-22T21:56:48Z,155028
3146766761,zyn0217,"LGTM, but please wait for other reviewers as the change is really large.

> The user expectation is that getAs only removes top level sugar nodes, leaving all the type sugar on the returned node

So suppose there are really some users who wanted the previous behavior, what should they do? getAs + desugar?",2025-08-23T03:02:05Z,155028
3146793095,mizvekov,,2025-08-23T03:12:16Z,155028
3147349761,bolshakov-a,"Looks good, thanks! I didn't review the whole PR, just noticed a couple of issues.",2025-08-23T08:25:22Z,155028
3151543378,erichkeane,"""Meat and Potatoes"" patch looks fine to me.  Rest of it is too large to look at beyond scrolling through.  Would be nice to have a few other +1s on this, just because of the size.",2025-08-25T13:44:38Z,155028
3158663749,rjmccall,LGTM,2025-08-27T07:23:56Z,155028
3145783690,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR performs a partial revert of a previous optimization that enhanced mul.wide and mad.wide peepholes in the NVPTX backend. The change removes the mad.wide instruction definitions and reverts code generation to use separate mul.wide and add instructions instead of combined mad.wide instructions.

Key changes:
- Remove mad.wide instruction definitions for both signed and unsigned variants (16-bit and 32-bit)
- Update test expectations to reflect the change from mad.wide to mul.wide + add instruction sequences
- Increase register counts in tests to accommodate the additional temporary registers needed

### Reviewed Changes

Copilot reviewed 5 out of 5 changed files in this pull request and generated no comments.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| llvm/lib/Target/NVPTX/NVPTXInstrInfo.td | Remove mad.wide instruction definitions from the instruction set |
| llvm/test/CodeGen/NVPTX/combine-wide.ll | Update test expectations to use mul.wide + add instead of mad.wide |
| llvm/test/CodeGen/NVPTX/vector-loads.ll | Update test expectations for vector load operations |
| llvm/test/CodeGen/NVPTX/local-stack-frame.ll | Update test expectations for local stack frame operations |
| llvm/test/CodeGen/NVPTX/bug26185-2.ll | Update test expectations for the specific bug fix scenario |
</details>




",2025-08-22T20:08:10Z,155024
3145790723,justinfargnoli,,2025-08-22T20:13:11Z,155024
3152181731,AlexMaclean,Looks reasonable. Please add a commend in NVPTXInstrInfo.td explaining why we're not generating mul.wide.,2025-08-25T16:22:36Z,155024
3146521532,clayborg,,2025-08-22T23:39:08Z,155023
3152958461,zw3917,,2025-08-25T20:37:30Z,155023
3165971220,clayborg,One quick change suggested to re-use the new DWOStats struct instead of creating 3 local variables. ,2025-08-28T18:03:18Z,155023
3167397769,clayborg,"One more round of changes just removing any auto clang-format changes that are not part of this PR. When committing PRs to upstream, we want to make sure any noise that isn't related to the PR is not part of the PR itself like whitespace and re-indentation formatting fixes that are not on the lines that you have modified. You might need to disable the auto clang format stuff and then update this PR. This should be good to go after those non-related changes are removed.",2025-08-29T05:25:00Z,155023
3177993878,clayborg,,2025-09-02T20:22:44Z,155023
3145619710,jplehr,LGTM,2025-08-22T19:31:28Z,155020
3145613046,fmayer,,2025-08-22T19:29:36Z,155019
3146160107,topperc,LGTM,2025-08-22T21:32:03Z,155017
3145628594,shiltian,,2025-08-22T19:33:18Z,155016
3146881079,vbvictor,LGTM,2025-08-23T05:11:36Z,155015
3146903772,HerrCai0907,,2025-08-23T05:19:57Z,155015
3146505612,JDevlieghere,,2025-08-22T23:25:51Z,155021
3146084913,s-barannikov,LGTM,2025-08-22T21:15:35Z,155013
3149254660,benshi001,LGTM,2025-08-24T09:15:20Z,155013
3145904658,wangzpgi,,2025-08-22T20:33:34Z,155012
3145551758,rnk,,2025-08-22T19:07:30Z,155010
3146082945,s-barannikov,LGTM,2025-08-22T21:15:16Z,155011
3146114924,asl,,2025-08-22T21:22:54Z,155011
3146199813,s-barannikov,LGTM,2025-08-26T16:58:29Z,155009
3145455847,shiltian,clang-format is not happy,2025-08-22T18:30:07Z,155008
3145433918,boomanaiden154,,2025-08-22T18:19:46Z,155005
3145453577,boomanaiden154,,2025-08-22T18:29:01Z,155007
3146174048,jurahul,,2025-08-22T21:33:49Z,155004
3146177671,s-barannikov,LGTM,2025-08-22T21:34:12Z,155004
3146188842,jurahul,,2025-08-22T21:35:44Z,155004
3146399248,topperc,LGTM,2025-08-22T22:25:16Z,155004
3145457299,lntue,,2025-08-22T18:30:49Z,155003
3145421985,clementval,LGTM,2025-08-22T18:14:48Z,155002
3153045154,jsjodin,Thanks for fixing this. LGTM! ,2025-08-25T21:11:29Z,154999
3146411195,topperc,,2025-08-22T22:31:01Z,154996
3146473611,jurahul,,2025-08-22T23:01:07Z,154996
3146476778,jurahul,,2025-08-22T23:02:31Z,154996
3146865456,topperc,LGTM,2025-08-23T04:54:23Z,154996
3145424617,topperc,LGTM,2025-08-22T18:15:58Z,154998
3145461308,andykaylor,,2025-08-22T19:34:47Z,154994
3146351927,AmrDeveloper,,2025-08-22T22:13:03Z,154994
3146408780,bcardosolopes,,2025-08-22T22:32:33Z,154994
3147369615,AmrDeveloper,,2025-08-23T08:16:21Z,154994
3147370488,AmrDeveloper,,2025-08-23T08:16:54Z,154994
3148273187,xlauko,,2025-08-23T14:59:35Z,154994
3148315147,AmrDeveloper,,2025-08-23T15:13:50Z,154994
3153281716,bcardosolopes,LGTM once all existing comments are addressed (not clear if they all did),2025-08-25T23:05:19Z,154994
3166570502,andykaylor,"This looks good. I have a lot of suggestions for updating the op description, but feel free to merge after updating those.",2025-08-28T21:25:04Z,154994
3146153489,s-barannikov,LGTM,2025-08-22T21:42:43Z,154993
3158853316,ostannard,LGTM,2025-08-27T08:24:23Z,154990
3156595467,davemgreen,,2025-08-26T17:15:18Z,154988
3146400079,mshockwave,,2025-08-22T22:25:30Z,154989
3169063140,Meinersbur,LGTM,2025-08-29T14:58:34Z,154987
3152490387,DataCorrupted,,2025-08-25T17:59:20Z,154986
3145593790,durga4github,,2025-08-22T19:24:44Z,154984
3147347543,owenca,,2025-08-23T07:47:17Z,154978
3145358776,jplehr,LGTM ,2025-08-22T17:58:02Z,154977
3164270006,DavidSpickett,"Thanks, looks good to me.

Please address the email settings as instructed by the bot comment above. Then I can merge this.",2025-08-28T10:33:59Z,154974
3144979511,jayfoad,,2025-08-22T15:38:55Z,154970
3146691349,arsenm,,2025-08-23T01:51:31Z,154970
3146023053,s-barannikov,,2025-08-22T21:01:01Z,154973
3146025186,s-barannikov,LGTM,2025-08-22T21:01:20Z,154973
3146292100,jurahul,,2025-08-22T21:53:04Z,154973
3144905007,adrian-prantl,"I fit unbreaks the test suite, let's do this for now.",2025-08-22T15:15:41Z,154962
3145631142,cjappl,LGTM,2025-08-22T19:33:49Z,154959
3144682471,jhuber6,,2025-08-22T14:17:37Z,154958
3144736963,RossBrunton,,2025-08-22T14:32:30Z,154958
3144760581,jhuber6,,2025-08-22T14:38:47Z,154958
3144857110,RossBrunton,,2025-08-22T15:04:55Z,154958
3144866155,arsenm,,2025-08-22T15:07:44Z,154958
3144904576,RossBrunton,,2025-08-22T15:15:38Z,154958
3144938631,arsenm,,2025-08-22T15:25:40Z,154958
3145133811,jhuber6,,2025-08-22T16:35:40Z,154958
3150807030,RossBrunton,,2025-08-25T10:17:42Z,154958
3151217436,jhuber6,,2025-08-25T12:27:22Z,154958
3151222607,jhuber6,,2025-08-25T12:28:37Z,154958
3151352387,RossBrunton,,2025-08-25T12:59:30Z,154958
3152219471,vzakhari,,2025-08-25T16:33:02Z,154955
3144612741,kkwli,LG. Thanks,2025-08-22T13:56:23Z,154951
3146630550,arsenm,The high half should probably be using v_mov_b32 instead of s_mov_b32 but that's a separate change ,2025-08-23T01:06:49Z,154952
3149930845,philnik777,This is as green as it gets currently.,2025-08-25T05:14:57Z,154945
3145353498,Garra1980,,2025-08-22T17:56:51Z,154949
3145338384,charithaintc,"I did a first pass.

generally I don't agree with the code sequence extract[laneid] -> broadcast. 

Instead I think offsets and masks must be distributed. We should discuss this.

general comments:
1. No need of casts for typed values.
2. please pay attention to variable names. ",2025-08-22T18:31:44Z,154949
3147445378,akroviakov,,2025-08-23T09:34:41Z,154949
3152068659,charithaintc,,2025-08-25T15:52:35Z,154949
3154901031,akroviakov,,2025-08-26T09:58:38Z,154949
3154901111,akroviakov,,2025-08-26T09:58:40Z,154949
3154901324,akroviakov,,2025-08-26T09:58:43Z,154949
3154901409,akroviakov,,2025-08-26T09:58:45Z,154949
3154901525,akroviakov,,2025-08-26T09:58:47Z,154949
3154901591,akroviakov,,2025-08-26T09:58:48Z,154949
3154901697,akroviakov,,2025-08-26T09:58:50Z,154949
3154901769,akroviakov,,2025-08-26T09:58:51Z,154949
3154901836,akroviakov,,2025-08-26T09:58:53Z,154949
3154901922,akroviakov,,2025-08-26T09:58:54Z,154949
3154901979,akroviakov,,2025-08-26T09:58:55Z,154949
3154902090,akroviakov,,2025-08-26T09:58:57Z,154949
3154902227,akroviakov,,2025-08-26T09:58:59Z,154949
3154903815,akroviakov,,2025-08-26T09:59:25Z,154949
3154903980,akroviakov,,2025-08-26T09:59:28Z,154949
3160786305,charithaintc,LGTM. ,2025-08-27T17:00:50Z,154949
3164661326,akroviakov,,2025-08-28T12:30:27Z,154949
3165209836,akroviakov,,2025-08-28T14:47:23Z,154949
3165664469,charithaintc,generally looks good. better if you can address the comments. ,2025-08-28T18:39:23Z,154949
3168127093,akroviakov,,2025-08-29T09:53:39Z,154949
3168127392,akroviakov,,2025-08-29T09:53:46Z,154949
3168127574,akroviakov,,2025-08-29T09:53:51Z,154949
3168127723,akroviakov,,2025-08-29T09:53:54Z,154949
3168127997,akroviakov,,2025-08-29T09:54:01Z,154949
3168128191,akroviakov,,2025-08-29T09:54:05Z,154949
3168128391,akroviakov,,2025-08-29T09:54:10Z,154949
3168128675,akroviakov,,2025-08-29T09:54:17Z,154949
3174068091,akroviakov,,2025-09-01T15:35:47Z,154949
3181958450,charithaintc,LGTM. ,2025-09-03T18:34:25Z,154949
3158227692,shiltian,,2025-08-27T04:32:36Z,154942
3158229516,shiltian,,2025-08-27T04:34:07Z,154942
3163428247,chandraghale,,2025-08-28T06:39:27Z,154942
3145448986,shiltian,,2025-08-22T18:26:47Z,154944
3145578349,ro-i,,2025-08-22T19:19:22Z,154944
3145692385,jurahul,,2025-08-22T19:46:04Z,154944
3145712051,jurahul,,2025-08-22T19:49:47Z,154944
3145722947,jurahul,,2025-08-22T19:52:01Z,154944
3145780139,jurahul,,2025-08-22T20:07:03Z,154944
3145784074,jurahul,,2025-08-22T20:08:21Z,154944
3145789125,jurahul,,2025-08-22T20:09:46Z,154944
3145796938,jurahul,,2025-08-22T20:12:22Z,154944
3145816292,jurahul,,2025-08-22T20:16:24Z,154944
3144596571,arsenm,,2025-08-23T02:03:42Z,154944
3147427602,ro-i,,2025-08-23T09:11:39Z,154944
3147427699,ro-i,,2025-08-23T09:12:02Z,154944
3147427778,ro-i,,2025-08-23T09:12:25Z,154944
3147427887,ro-i,,2025-08-23T09:12:56Z,154944
3147784847,arsenm,,2025-08-23T11:27:39Z,154944
3147987011,ro-i,,2025-08-23T12:30:42Z,154944
3148624398,shiltian,,2025-08-23T18:13:32Z,154944
3148919347,ro-i,,2025-08-23T20:47:48Z,154944
3151234017,mikaelholmen,,2025-08-25T12:31:23Z,154944
3151237188,ro-i,,2025-08-25T12:32:24Z,154944
3144456528,abhinavgaba,,2025-08-22T13:13:17Z,154939
3148080620,joker-eph,,2025-08-23T12:56:35Z,154938
3148081162,joker-eph,,2025-08-23T12:59:39Z,154938
3148142571,rolfmorel,,2025-08-23T13:36:13Z,154938
3148142611,rolfmorel,,2025-08-23T13:36:21Z,154938
3148142633,rolfmorel,,2025-08-23T13:36:29Z,154938
3148247350,joker-eph,,2025-08-23T14:45:30Z,154938
3148255815,joker-eph,,2025-08-23T14:47:15Z,154938
3148265718,joker-eph,,2025-08-23T14:53:01Z,154938
3148266326,joker-eph,,2025-08-23T14:53:30Z,154938
3148358067,fabianmcg,,2025-08-23T15:52:10Z,154938
3148359992,rolfmorel,,2025-08-23T15:53:47Z,154938
3148361333,rolfmorel,,2025-08-23T15:54:34Z,154938
3148363154,rolfmorel,,2025-08-23T15:57:40Z,154938
3148727701,joker-eph,,2025-08-23T19:22:44Z,154938
3149261163,gysit,Looks good from my end. Dropped some style nits.,2025-08-24T10:02:42Z,154938
3149532954,rolfmorel,,2025-08-24T22:38:21Z,154938
3149533003,rolfmorel,,2025-08-24T22:38:31Z,154938
3149533102,rolfmorel,,2025-08-24T22:38:52Z,154938
3150078657,gysit,LGTM from my end.,2025-08-25T06:24:18Z,154938
3144424235,zmodem,lgtm,2025-08-22T13:02:32Z,154937
3144319532,artagnon,,2025-08-22T12:28:19Z,154935
3144644961,ckoparkar,,2025-08-22T14:05:59Z,154941
3144835848,tbaederr,,2025-08-22T14:58:06Z,154941
3145034035,RKSimon,LGTM - cheers,2025-08-22T15:57:46Z,154941
3144624794,krzysz00,"Approved, thank you",2025-08-22T14:00:04Z,154933
3145377542,kuhar,,2025-08-22T18:02:51Z,154933
3144302570,s-barannikov,,2025-08-22T12:23:16Z,154934
3144311347,jurahul,,2025-08-22T12:26:04Z,154934
3144328810,s-barannikov,,2025-08-22T12:31:01Z,154934
3144605046,jurahul,,2025-08-22T13:54:29Z,154934
3144605440,jurahul,,2025-08-22T13:54:36Z,154934
3146123458,s-barannikov,"LGTM, thanks",2025-08-22T21:24:58Z,154934
3144207874,arsenm,,2025-08-22T11:51:33Z,154932
3144198658,joker-eph,,2025-08-22T11:47:45Z,154931
3145709286,rnk,"This seems like a net improvement, and I think the tests should be comprehensive enough to cover the risk of unintented functionality change. If you want to build confidence, you could pick a stack protector test, and fill in the matrix of affected architectures and operating systems to cover all gaps.",2025-08-22T19:49:14Z,154930
3144110909,mstorsjo,LGTM,2025-08-22T11:16:22Z,154928
3144467766,sjoerdmeijer,,2025-08-22T14:53:42Z,154929
3145045672,yafet-a,,2025-08-22T16:02:06Z,154929
3145046124,yafet-a,,2025-08-22T16:02:17Z,154929
3145046740,yafet-a,,2025-08-22T16:02:31Z,154929
3157150199,sjoerdmeijer,,2025-08-26T20:23:24Z,154929
3159370622,yafet-a,,2025-08-27T11:18:06Z,154929
3159478496,yafet-a,,2025-08-27T11:58:37Z,154929
3159479000,yafet-a,,2025-08-27T11:58:50Z,154929
3159901284,yafet-a,,2025-08-27T13:52:09Z,154929
3159902389,yafet-a,,2025-08-27T13:52:26Z,154929
3164255239,sjoerdmeijer,,2025-08-28T11:09:13Z,154929
3164649182,sjoerdmeijer,,2025-08-28T12:27:08Z,154929
3164773737,yafet-a,,2025-08-28T13:03:07Z,154929
3164935521,yafet-a,,2025-08-28T13:44:25Z,154929
3164935934,yafet-a,,2025-08-28T13:44:31Z,154929
3164936897,yafet-a,,2025-08-28T13:44:45Z,154929
3165159972,sjoerdmeijer,,2025-08-28T14:53:04Z,154929
3165765985,yafet-a,,2025-08-28T17:12:11Z,154929
3165766874,yafet-a,,2025-08-28T17:12:25Z,154929
3184738003,paschalis-mpeis,"Hi @yafet-a,

Thanks for working to support memcpy! Nice patch and report. :)
Please see some comments below.",2025-09-04T12:49:00Z,154929
3186327435,yafet-a,,2025-09-04T17:22:36Z,154929
3186327631,yafet-a,,2025-09-04T17:22:40Z,154929
3186327797,yafet-a,,2025-09-04T17:22:43Z,154929
3186328336,yafet-a,,2025-09-04T17:22:49Z,154929
3186329169,yafet-a,,2025-09-04T17:22:58Z,154929
3186334950,yafet-a,,2025-09-04T17:24:37Z,154929
3186335635,yafet-a,,2025-09-04T17:24:47Z,154929
3186339343,yafet-a,,2025-09-04T17:25:41Z,154929
3186365233,yafet-a,,2025-09-04T17:32:30Z,154929
3188720137,paschalis-mpeis,"Thanks for addressing the comments, @yafet-a.

Looks good. Tentative accept, pending the verification ask from @sjoerdmeijer and also give it a few days for the rest of the reviewers to react.

Also I added a couple of nits.",2025-09-05T10:16:53Z,154929
3189993170,yafet-a,,2025-09-05T16:19:47Z,154929
3189999898,yafet-a,,2025-09-05T16:22:27Z,154929
3196283607,sjoerdmeijer,"Thanks for the testing, LGTM.

Let's wait a day with merging this in case someone else has more comments.",2025-09-08T12:24:02Z,154929
3144476504,uweigand,"LGTM, thanks for taking care of this!",2025-08-22T13:17:30Z,154919
3144288660,SLTozer,"Can't speak to the MLIR logic, but the DIBuilder usage LGTM (also looks like we missed a spot, leaving the debug value creation function as `insertDbgValueIntrinsic`!) - thanks for updating this!",2025-08-22T12:25:44Z,154926
3149251588,gysit,"The change makes sense!

Let's try to factor out some helpers to reduce the code duplication.

The casts are probably unavoidable. If there a place where the cast could fail we may want to use dyn_cast and return failure to have a better error handling. However, it sounds like refactoring the inheritance to match LLVM will fix the critical case?",2025-08-24T09:17:14Z,154926
3152875296,andykaylor,Can you add a test for the new behavior?,2025-08-25T20:25:35Z,154926
3155100655,abidh,,2025-08-26T11:01:09Z,154926
3155101122,abidh,,2025-08-26T11:01:19Z,154926
3155109639,abidh,,2025-08-26T11:04:12Z,154926
3155128291,abidh,,2025-08-26T11:10:46Z,154926
3155137519,gysit,,2025-08-26T11:13:50Z,154926
3155150636,gysit,"Thanks for addressing the comments.

LGTM from my end modulo last nit.
",2025-08-26T11:19:54Z,154926
3157831071,andykaylor,,2025-08-27T00:52:55Z,154926
3157867430,andykaylor,,2025-08-27T01:07:56Z,154926
3158412374,gysit,,2025-08-27T06:13:20Z,154926
3161974604,andykaylor,,2025-08-27T22:37:43Z,154926
3163323003,gysit,,2025-08-28T06:18:01Z,154926
3176175590,abidh,,2025-09-02T11:45:38Z,154926
3144136884,jurahul,,2025-08-22T11:25:21Z,154916
3144144700,jurahul,,2025-08-22T11:28:18Z,154916
3144205170,s-barannikov,,2025-08-22T11:50:20Z,154916
3144211586,s-barannikov,,2025-08-22T11:53:08Z,154916
3144277426,jurahul,,2025-08-22T12:16:53Z,154916
3144362791,s-barannikov,,2025-08-22T12:42:52Z,154916
3144958054,jurahul,,2025-08-22T15:31:18Z,154916
3144976902,jurahul,,2025-08-22T15:38:03Z,154916
3146015079,s-barannikov,,2025-08-22T20:59:37Z,154916
3146041231,jurahul,,2025-08-22T21:04:34Z,154916
3146042312,jurahul,,2025-08-22T21:04:46Z,154916
3152025085,dwblaikie,,2025-08-25T15:38:05Z,154912
3145055672,topperc,,2025-08-22T16:17:31Z,154915
3145100326,topperc,,2025-08-22T16:22:03Z,154915
3145104205,topperc,,2025-08-22T16:25:14Z,154915
3149692454,4vtomat,,2025-08-25T02:22:10Z,154915
3149696768,4vtomat,,2025-08-25T02:24:34Z,154915
3149935002,tclin914,,2025-08-25T05:31:32Z,154915
3152987279,topperc,,2025-08-25T20:48:17Z,154915
3171638652,4vtomat,,2025-08-31T14:03:12Z,154915
3171638714,4vtomat,,2025-08-31T14:03:23Z,154915
3171655909,4vtomat,,2025-08-31T14:24:47Z,154915
3171754246,topperc,LGTM,2025-08-31T18:42:46Z,154915
3171867981,tclin914,LGTM,2025-09-01T00:39:53Z,154915
3146865981,topperc,,2025-08-23T04:56:08Z,154906
3146866103,topperc,,2025-08-23T05:02:21Z,154906
3152754169,topperc,LGTM,2025-08-25T19:24:00Z,154906
3143792551,cdevadas,,2025-08-22T09:29:15Z,154909
3143449646,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR adds support for packed registers with vectors in MLIR's NVVM `inline_ptx` operations, enabling vector types to be lowered to appropriate PTX register types.

- Extends register type deduction to handle vector types through packed register mapping
- Updates error handling to use proper MLIR error reporting instead of assertions
- Adds comprehensive test coverage for various vector packing scenarios

### Reviewed Changes

Copilot reviewed 2 out of 2 changed files in this pull request and generated 3 comments.

| File | Description |
| ---- | ----------- |
| mlir/test/Conversion/NVVMToLLVM/nvvm-to-llvm.mlir | Adds test cases for packed register scenarios including 4xi8, 2xbf16, and conversion operations |
| mlir/lib/Dialect/LLVMIR/IR/BasicPtxBuilderInterface.cpp | Implements packed register support by extending getRegisterType function with vector handling logic |



",2025-08-22T07:32:48Z,154904
3143607763,schwarzschild-radius,,2025-08-22T08:27:52Z,154904
3143771761,schwarzschild-radius,,2025-08-22T09:22:38Z,154904
3150545189,durga4github,,2025-08-25T09:07:18Z,154904
3150551516,durga4github,LGTM. (except for an error-handling fix mentioned by Co-pilot and Pradeep).,2025-08-25T09:09:16Z,154904
3176225780,grypp,,2025-09-02T12:02:32Z,154904
3145520874,lenary,LGTM,2025-08-22T18:56:52Z,154903
3165951899,fmayer,,2025-08-28T20:40:55Z,154902
3167110102,yingcong-wu,,2025-08-29T02:10:51Z,154902
3167114815,fmayer,,2025-08-29T02:13:36Z,154902
3167122545,yingcong-wu,,2025-08-29T02:18:23Z,154902
3167130082,yingcong-wu,,2025-08-29T02:21:45Z,154902
3167140169,fmayer,,2025-08-29T02:26:53Z,154902
3167374905,yingcong-wu,,2025-08-29T05:05:26Z,154902
3167510926,fmayer,,2025-08-29T06:18:44Z,154902
3144112475,joker-eph,,2025-08-22T11:16:48Z,154924
3144117185,joker-eph,,2025-08-22T11:18:30Z,154924
3144123562,wsmoses,,2025-08-22T11:20:09Z,154924
3144129563,wsmoses,,2025-08-22T11:22:15Z,154924
3144132810,joker-eph,,2025-08-22T11:23:37Z,154924
3144139038,joker-eph,,2025-08-22T11:26:18Z,154924
3144141430,wsmoses,,2025-08-22T11:27:16Z,154924
3144143991,joker-eph,,2025-08-22T11:28:08Z,154924
3144147889,joker-eph,,2025-08-22T11:29:27Z,154924
3144148831,wsmoses,,2025-08-22T11:29:53Z,154924
3144153632,joker-eph,,2025-08-22T11:31:25Z,154924
3144155017,wsmoses,,2025-08-22T11:31:54Z,154924
3144157014,wsmoses,,2025-08-22T11:32:34Z,154924
3144162334,joker-eph,,2025-08-22T11:33:56Z,154924
3144171747,joker-eph,,2025-08-22T11:37:51Z,154924
3144196725,wsmoses,,2025-08-22T11:46:55Z,154924
3144212105,joker-eph,,2025-08-22T11:53:19Z,154924
3144214284,wsmoses,,2025-08-22T11:54:10Z,154924
3144231240,wsmoses,,2025-08-22T12:00:28Z,154924
3144369804,joker-eph,,2025-08-22T12:45:02Z,154924
3169391114,andykaylor,This looks good to me.,2025-08-29T16:52:48Z,154899
3172587269,s-watanabe314,,2025-09-01T08:14:17Z,154899
3176307912,zahiraam,,2025-09-02T12:24:03Z,154899
3184149453,s-watanabe314,,2025-09-04T09:03:45Z,154899
3185082114,zahiraam,,2025-09-04T12:46:26Z,154899
3188535653,s-watanabe314,,2025-09-05T08:51:29Z,154899
3150051613,SixWeining,,2025-08-25T06:11:36Z,154898
3150061080,SixWeining,Worth mentioning in the release notes?,2025-08-25T06:15:37Z,154898
3143277386,devnexen,,2025-08-22T06:39:32Z,154897
3145847587,rnk,,2025-08-22T20:23:23Z,154894
3143135506,arsenm,,2025-08-22T05:28:25Z,154893
3143652772,fhahn,"LGTM, thanks",2025-08-22T08:42:57Z,154893
3145333996,kuhar,,2025-08-22T17:51:12Z,154891
3145762714,kazutakahirata,,2025-08-22T20:02:40Z,154891
3146541587,kuhar,,2025-08-22T23:51:49Z,154891
3146768044,kazutakahirata,,2025-08-23T02:44:41Z,154891
3143138899,arsenm,,2025-08-22T05:29:40Z,154892
3143138171,arsenm,,2025-08-22T05:29:10Z,154890
3143192860,devnexen,,2025-08-22T05:59:36Z,154886
3143147099,frederick-vs-ja,,2025-08-22T05:35:14Z,154887
3143907201,joker-eph,,2025-08-22T10:07:15Z,154887
3143908461,joker-eph,"Thanks for the fix.
@frederick-vs-ja suggestion LG as well.",2025-08-22T10:07:39Z,154887
3144748690,rupprecht,,2025-08-22T14:35:22Z,154887
3143146769,arsenm,,2025-08-22T05:34:58Z,154889
3146061604,wlei-llvm,LGTM.,2025-08-22T21:09:34Z,154885
3143083039,arsenm,,2025-08-22T04:58:37Z,154884
3152225583,vzakhari,,2025-08-25T16:34:28Z,154884
3143658580,heiher,,2025-08-22T08:44:39Z,154879
3142933866,ronlieb,,2025-08-22T02:53:50Z,154877
3145333561,fmayer,,2025-08-22T17:51:14Z,154878
3146638012,thurstond,,2025-08-23T01:14:10Z,154878
3152636364,fmayer,,2025-08-25T18:47:01Z,154878
3142997760,topperc,LGTM,2025-08-22T03:56:48Z,154876
3197818007,Sisyph,,2025-09-08T19:13:48Z,154875
3198072618,broxigarchen,,2025-09-08T20:31:15Z,154875
3198136750,broxigarchen,,2025-09-08T20:50:07Z,154875
3198169598,Sisyph,,2025-09-08T21:00:26Z,154875
3199886926,dstutt,,2025-09-09T07:53:17Z,154875
3201906703,broxigarchen,,2025-09-09T14:27:10Z,154875
3145125936,adam-smnk,,2025-08-22T16:32:30Z,154872
3145138120,snarang181,,2025-08-22T16:37:30Z,154872
3145184000,adam-smnk,,2025-08-22T16:56:45Z,154872
3150653846,adam-smnk,,2025-08-25T10:12:11Z,154872
3152299690,adam-smnk,LGTM,2025-08-25T16:53:19Z,154872
3151927780,jurahul,nice find! LGTM,2025-08-25T15:10:42Z,154871
3143496370,rampitec,Looks reasonable.,2025-08-22T07:49:17Z,154870
3144553923,erichkeane,"Probably still worth a release note, else lgtm.",2025-08-22T13:39:13Z,154863
3142711459,arsenm,,2025-08-22T01:13:02Z,154862
3143088566,arsenm,,2025-08-22T05:02:44Z,154862
3144172218,arsenm,,2025-08-22T11:38:04Z,154862
3143674498,fhahn,"LGTM, thanks",2025-08-22T08:50:13Z,154861
3144221552,AaronBallman,LGTM! Do you need someone to land this on your behalf?,2025-08-22T11:57:00Z,154861
3157467140,efriedma-quic,"LGTM

The change only affects CFI, and it should be a safe fix.",2025-08-26T22:14:51Z,154859
3153650698,s-barannikov,,2025-08-26T02:48:00Z,154865
3153677821,s-barannikov,,2025-08-26T02:54:43Z,154865
3153739263,s-barannikov,,2025-08-26T03:25:39Z,154865
3153984331,jurahul,,2025-08-26T05:25:10Z,154865
3153992811,jurahul,,2025-08-26T05:30:19Z,154865
3153998809,jurahul,,2025-08-26T05:33:57Z,154865
3153999974,jurahul,,2025-08-26T05:34:36Z,154865
3154061230,jurahul,,2025-08-26T06:06:14Z,154865
3154096148,s-barannikov,,2025-08-26T06:21:38Z,154865
3154104428,s-barannikov,,2025-08-26T06:25:12Z,154865
3156062686,jurahul,,2025-08-26T14:58:56Z,154865
3156068447,jurahul,,2025-08-26T15:00:06Z,154865
3156432198,jurahul,,2025-08-26T16:25:58Z,154865
3156432548,jurahul,,2025-08-26T16:26:05Z,154865
3156435618,jurahul,,2025-08-26T16:27:08Z,154865
3156619737,s-barannikov,,2025-08-26T17:23:12Z,154865
3156620518,s-barannikov,,2025-08-26T17:23:31Z,154865
3156838885,jurahul,,2025-08-26T18:31:30Z,154865
3156853093,jurahul,,2025-08-26T18:36:28Z,154865
3156853351,jurahul,,2025-08-26T18:36:34Z,154865
3158137190,s-barannikov,,2025-08-27T03:13:08Z,154865
3158150600,jurahul,,2025-08-27T03:24:08Z,154865
3158156595,s-barannikov,,2025-08-27T03:29:59Z,154865
3158255581,s-barannikov,,2025-08-27T04:55:26Z,154865
3158257612,s-barannikov,,2025-08-27T04:57:14Z,154865
3158258571,jurahul,,2025-08-27T04:58:04Z,154865
3158259361,jurahul,,2025-08-27T04:58:45Z,154865
3158277794,jurahul,,2025-08-27T05:11:16Z,154865
3158307912,s-barannikov,,2025-08-27T05:30:04Z,154865
3158310915,s-barannikov,"LGTM, but please for @topperc review

Meanwhile, a couple of tests wouldn't hurt.
",2025-08-27T05:32:14Z,154865
3161020671,jurahul,,2025-08-27T17:32:42Z,154865
3169394191,s-barannikov,,2025-08-29T16:41:31Z,154865
3169592282,jurahul,,2025-08-29T17:56:46Z,154865
3169746250,topperc,,2025-08-29T18:58:49Z,154865
3169769714,jrtc27,,2025-08-29T19:06:50Z,154865
3169779252,jurahul,,2025-08-29T19:11:29Z,154865
3169785210,jurahul,,2025-08-29T19:13:16Z,154865
3169791631,jurahul,,2025-08-29T19:14:35Z,154865
3169802303,jurahul,,2025-08-29T19:17:01Z,154865
3169802632,jurahul,,2025-08-29T19:17:08Z,154865
3169833558,jrtc27,,2025-08-29T19:23:49Z,154865
3170205613,jurahul,,2025-08-29T20:51:55Z,154865
3170259769,topperc,,2025-08-29T21:09:57Z,154865
3170267152,jurahul,,2025-08-29T21:12:10Z,154865
3170375503,topperc,LGTM. I guess we'll find out if there are any out of tree RISC-V vendors with 64 bit instructions.,2025-08-29T21:48:03Z,154865
3170864758,s-barannikov,,2025-08-30T04:28:02Z,154865
3171626011,jurahul,,2025-08-31T13:28:11Z,154865
3142538825,jhuber6,,2025-08-21T23:25:06Z,154857
3142556649,lntue,,2025-08-21T23:32:11Z,154857
3142664449,ojhunt,"LGTM, will probably need to be cherry-picked to llvm21 or have a release note.",2025-08-22T00:31:36Z,154858
3142666545,ojhunt,,2025-08-22T00:32:52Z,154858
3142667114,ojhunt,,2025-08-22T00:33:28Z,154858
3142702899,efriedma-quic,,2025-08-22T01:09:23Z,154858
3147473867,ojhunt,,2025-08-23T09:44:47Z,154858
3142534904,boomanaiden154,Disabling the android libcxx builder in CI is disabled (https://github.com/llvm/llvm-project/blob/f961b61f8841c8488ab2194ac7a82e557736a949/.github/workflows/libcxx-build-containers.yml#L43). You should reenable it in this patch if you want it get uploaded to GHCR and not break in the future.,2025-08-21T23:23:10Z,154856
3142680714,boomanaiden154,"To fix the CI container build you'll need to configure docker daemon to use the space in `/mnt` rather than the default location.

https://evodify.com/change-docker-storage-location/ should have info.

Not sure why GHA hosted runners have disk space bifurcated between the main drive and `/mnt`, but it is the way it is.",2025-08-22T00:47:58Z,154856
3153324065,boomanaiden154,LGTM. Please wait for one of the libc++ maintainers to review before merging this though.,2025-08-25T23:32:37Z,154856
3161699394,pirama-arumuga-nainar,,2025-08-27T20:47:35Z,154856
3166690076,ldionne,Thanks for fixing this!,2025-08-28T22:03:13Z,154856
3145545717,petrhosek,,2025-08-22T19:04:51Z,154854
3145546327,petrhosek,,2025-08-22T19:05:09Z,154854
3142496224,JDevlieghere,Nice 📚,2025-08-21T22:54:36Z,154853
3142513303,jimingham,LGMT,2025-08-21T23:04:55Z,154853
3142402411,JDevlieghere,,2025-08-21T22:01:50Z,154849
3143520507,rampitec,,2025-08-22T07:56:48Z,154850
3153814374,yxsamliu,,2025-08-26T04:16:26Z,154850
3154322139,rampitec,,2025-08-26T07:28:35Z,154850
3154327430,rampitec,,2025-08-26T07:29:51Z,154850
3142515212,Artem-B,,2025-08-21T23:11:43Z,154852
3142647618,akshayrdeodhar,,2025-08-22T00:32:26Z,154852
3142869391,AlexMaclean,,2025-08-22T02:03:42Z,154852
3142904476,AlexMaclean,,2025-08-22T02:27:14Z,154852
3142914696,AlexMaclean,,2025-08-22T02:36:53Z,154852
3142914796,AlexMaclean,,2025-08-22T02:36:58Z,154852
3142914929,AlexMaclean,,2025-08-22T02:37:05Z,154852
3142915186,AlexMaclean,,2025-08-22T02:37:19Z,154852
3144859046,schwarzschild-radius,"LGTM, thanks!",2025-08-22T15:05:35Z,154852
3145495807,gonzalobg,,2025-08-22T18:47:23Z,154852
3145501540,gonzalobg,,2025-08-22T18:49:53Z,154852
3145509823,gonzalobg,,2025-08-22T18:53:45Z,154852
3145519426,AlexMaclean,,2025-08-22T18:56:35Z,154852
3152683707,AlexMaclean,,2025-08-25T19:05:18Z,154852
3152687300,AlexMaclean,,2025-08-25T19:06:32Z,154852
3152713297,AlexMaclean,,2025-08-25T19:15:23Z,154852
3161905433,Artem-B,LGTM,2025-08-27T22:16:36Z,154852
3142382864,efriedma-quic,"(For reference, see af1b48bfdcc4cf1602dca45fe2511a426f48879e .)

Please also fix isCheapToSpeculateCttz.",2025-08-21T21:53:00Z,154848
3149724758,efriedma-quic,"LGTM

(You could maybe make an argument that we shouldn't speculate ctz without rbit... but it close enough that it probably doesn't matter much either way.)",2025-08-25T02:54:49Z,154848
3142335797,wangzpgi,,2025-08-21T21:33:01Z,154844
3142336500,wangzpgi,,2025-08-21T21:33:23Z,154844
3143028894,lenary,"LGTM. Please add a comment, but I don't think this will need re-reviewing.

I've really only reviewed the second commit here, the other looks like it's from a different PR and is stacked.",2025-08-22T04:25:44Z,154845
3156523753,preames,,2025-08-26T16:52:46Z,154842
3157276971,fhahn,,2025-08-26T20:51:12Z,154842
3159120191,david-arm,,2025-08-27T09:56:20Z,154842
3163735578,fhahn,,2025-08-28T08:10:14Z,154842
3164198539,david-arm,LGTM!,2025-08-28T10:13:57Z,154842
3164224602,david-arm,,2025-08-28T10:20:10Z,154842
3171771598,fhahn,,2025-08-31T19:44:56Z,154842
3174880073,lukel97,,2025-09-02T05:09:29Z,154847
3177495806,mshockwave,,2025-09-02T17:23:21Z,154847
3177526839,mshockwave,,2025-09-02T17:33:25Z,154847
3179188814,lukel97,,2025-09-03T07:04:33Z,154847
3181781731,mshockwave,,2025-09-03T17:41:22Z,154847
3181865972,mshockwave,,2025-09-03T18:05:16Z,154847
3181887802,mshockwave,,2025-09-03T18:11:23Z,154847
3182831044,preames,LGTM,2025-09-03T23:02:27Z,154847
3182831355,preames,,2025-09-03T23:02:42Z,154847
3183346618,lukel97,LGTM,2025-09-04T04:08:33Z,154847
3142746755,lenary,LGTM,2025-08-22T01:23:41Z,154838
3143894960,joker-eph,,2025-08-22T10:03:10Z,154839
3145312549,joker-eph,,2025-08-22T17:44:01Z,154839
3142231694,mstorsjo,LGTM,2025-08-21T20:47:30Z,154837
3142155930,lenary,LGTM,2025-08-21T20:17:11Z,154835
3142380666,JDevlieghere,,2025-08-21T21:52:35Z,154832
3142498788,efriedma-quic,"As discussed in #98673, I think we should come up with a better way of specifying appropriate target features for compiler/linker-generated functions, as opposed to making every translation unit define a function named __cfi_check with the right target features attached, but fixing the bug in the existing approach seems fine for now.

I'm not an expert on ThinLTO linking, but the code looks right, and the fix seems to work for my testcases as far as I can tell.

LGTM",2025-08-21T22:56:47Z,154833
3142360078,efriedma-quic,,2025-08-21T21:44:51Z,154834
3157354098,efriedma-quic,,2025-08-26T21:23:19Z,154834
3166655729,dpaoliello,,2025-08-28T21:52:26Z,154834
3166774873,efriedma-quic,LGTM,2025-08-28T22:55:41Z,154834
3142725323,arsenm,I guess we need those no-subregister subclasses? ,2025-08-22T01:17:09Z,154828
3144550232,koachan,,2025-08-22T13:38:01Z,154823
3142176197,Prince781,LGTM,2025-08-21T20:25:17Z,154824
3142757288,lenary,"LGTM.

I don't know whether it's worth updating the comments on the classes to be e.g. `T @llvm.riscv.<name>.....`. ",2025-08-22T01:26:13Z,154821
3144822573,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR refactors XeGPU utilities to distinguish between two types of layout attributes introduced with recent changes: `DistributeLayoutAttr` (including `LayoutAttr` and `SliceAttr`) for layout distribution, and `MemLayoutAttr` for memory layout description. The refactor renames functions and variables to clearly indicate their focus on `DistributeLayoutAttr` while adding support for `SliceAttr`.

Key changes:
- Renamed utility functions from `getLayoutAttr` to `getDistributeLayoutAttr` to clarify purpose
- Updated function signatures to use `DistributeLayoutAttr` instead of `LayoutAttr` where appropriate
- Added template functions for type-specific layout attribute retrieval
- Modified transform passes to use the updated utility functions

### Reviewed Changes

Copilot reviewed 10 out of 10 changed files in this pull request and generated 2 comments.

<details>
<summary>Show a summary per file</summary>

| File | Description |
| ---- | ----------- |
| mlir/lib/Dialect/XeGPU/Utils/XeGPUUtils.cpp | Renamed core utility functions and updated function signatures to use DistributeLayoutAttr |
| mlir/lib/Dialect/XeGPU/Transforms/XeGPUWgToSgDistribute.cpp | Updated workgroup-to-subgroup distribution pass to use new utility function names |
| mlir/lib/Dialect/XeGPU/Transforms/XeGPUSubgroupDistribute.cpp | Updated subgroup distribution pass with new utility functions and added template usage |
| mlir/lib/Dialect/XeGPU/Transforms/XeGPUPropagateLayout.cpp | Updated layout propagation pass to use renamed utility functions |
| mlir/lib/Dialect/XeGPU/Transforms/XeGPUBlocking.cpp | Updated blocking pass to use DistributeLayoutAttr and new utility functions |
| mlir/lib/Dialect/XeGPU/IR/XeGPUDialect.cpp | Updated dialect functions to use DistributeLayoutAttr and new method calls |
| mlir/include/mlir/Dialect/XeGPU/Utils/XeGPUUtils.h | Updated header with new function signatures and template functions |
| mlir/include/mlir/Dialect/XeGPU/IR/XeGPUOps.td | Updated ConvertLayoutOp to use DistributeLayoutAttr |
| mlir/include/mlir/Dialect/XeGPU/IR/XeGPUDialect.td | Updated dialect declaration to use DistributeLayoutAttr |
| mlir/include/mlir/Dialect/XeGPU/IR/XeGPUAttrs.td | Added new interface methods for accessing layout data as integers |
</details>




",2025-08-22T14:53:56Z,154819
3156528190,charithaintc,LGTM. thanks for this change. ,2025-08-26T17:05:55Z,154819
3156621389,silee2,,2025-08-26T17:23:51Z,154819
3156635937,silee2,"Other than a general question I left,
all changes look straightforward and looks good to me.",2025-08-26T17:28:55Z,154819
3160680492,chencha3,,2025-08-27T16:26:25Z,154819
3160807715,chencha3,,2025-08-27T16:52:17Z,154819
3160811513,chencha3,,2025-08-27T16:52:57Z,154819
3160839660,chencha3,,2025-08-27T16:58:45Z,154819
3142764757,lenary,"LGTM.

Looks like you stacked this, I'm only reviewing the changes to `llvm/include/llvm/IR/IntrinsicsRISCV.td` - I presume the atomic i64 changes are in another PR in my backlog.",2025-08-22T01:27:56Z,154816
3141942741,davemgreen,,2025-08-21T19:00:43Z,154822
3141966443,mrkajetanp,,2025-08-21T19:09:30Z,154822
3142099360,efriedma-quic,,2025-08-21T19:54:45Z,154822
3157450581,efriedma-quic,,2025-08-26T22:08:55Z,154822
3159527255,mrkajetanp,,2025-08-27T12:13:27Z,154822
3161804704,efriedma-quic,,2025-08-27T21:28:46Z,154822
3161857820,mrkajetanp,,2025-08-27T21:52:51Z,154822
3161883868,efriedma-quic,,2025-08-27T22:06:38Z,154822
3162104513,mrkajetanp,,2025-08-27T23:16:02Z,154822
3162187606,efriedma-quic,LGTM,2025-08-27T23:44:26Z,154822
3163271365,davemgreen,,2025-08-28T06:03:55Z,154822
3164280242,mrkajetanp,,2025-08-28T10:36:57Z,154822
3164329318,davemgreen,,2025-08-28T10:52:44Z,154822
3164685940,mrkajetanp,,2025-08-28T12:37:56Z,154822
3164898063,davemgreen,Thanks. LGTM,2025-08-28T13:35:02Z,154822
3142124034,efriedma-quic,"I expect this doesn't have much effect in most cases; we have a bunch of implicit conversions between vector types, so probably in most cases the vector gets converted to the right type before anyone actually tries to use it.

LGTM",2025-08-21T20:04:36Z,154817
3142187537,kazutakahirata,LGTM.  Thanks!,2025-08-21T20:30:12Z,154815
3142444905,satyajanga,,2025-08-21T22:26:36Z,154809
3146305901,Jlalond,,2025-08-22T22:00:21Z,154809
3156473608,dmpots,,2025-08-26T16:58:57Z,154809
3156865728,barsolo2000,,2025-08-26T18:40:39Z,154809
3157135272,dmpots,LGTM,2025-08-26T20:02:46Z,154809
3160925100,clayborg,,2025-08-27T17:16:41Z,154809
3145216226,Andres-Salamanca,,2025-08-22T17:12:07Z,154808
3145270688,erichkeane,"Few nits, else LGTM.",2025-08-22T17:32:57Z,154808
3145415071,andykaylor,,2025-08-22T18:15:39Z,154808
3145426237,erichkeane,,2025-08-22T18:16:40Z,154808
3145783256,andykaylor,,2025-08-22T20:08:00Z,154808
3141791856,vbvictor,"Thank you, LGTM",2025-08-21T18:09:14Z,154806
3141735456,vitalybuka,,2025-08-21T17:49:02Z,154803
3142856113,lenary,,2025-08-22T01:55:28Z,154805
3142897231,topperc,,2025-08-22T02:20:08Z,154805
3142902257,lenary,,2025-08-22T02:24:58Z,154805
3142902397,lenary,LGTM,2025-08-22T02:25:06Z,154805
3143002836,topperc,,2025-08-22T04:01:46Z,154805
3143832554,jh7370,"Please update the docs with the new option.

Please note that I am off for much of next week and may not have time to review this further for a week or two.",2025-08-22T09:44:18Z,154804
3174511229,inbelic,,2025-09-01T21:44:28Z,154804
3184136564,jh7370,"Please don't force push to branches under active review as it impairs the reviewing experience (and consequenetly is against LLVM policy). If rebasing is needed, do a merge from the branch you want to update to. The merge commit will disappear when you Squash & Merge).",2025-09-04T09:13:59Z,154804
3186550639,inbelic,,2025-09-04T18:12:37Z,154804
3187274754,bogner,LGTM - I'll leave it to @jh7370 to give the approval though.,2025-09-04T21:19:54Z,154804
3188394448,jh7370,Please don't resolve comment threads I've started - I use the resolution status to determine whether I've decided I'm happy with the resolution.,2025-09-05T08:11:49Z,154804
3195466608,jh7370,"LGTM, thanks!",2025-09-08T08:22:19Z,154804
3144387642,AaronBallman,LGTM aside from a formatting nit,2025-08-22T12:51:21Z,154801
3141717475,fhahn,"LGTM, thanks",2025-08-21T17:41:38Z,154794
3141673972,jurahul,,2025-08-21T17:25:33Z,154800
3141675213,jurahul,,2025-08-21T17:26:02Z,154800
3142238385,s-barannikov,LGTM,2025-08-21T20:50:31Z,154800
3141586870,michaelrj-google,"LGTM as an MVP.

If possible, please add TODOs on the parts that are incomplete",2025-08-21T17:06:09Z,154789
3141749277,RossComputerGuy,LGTM,2025-08-21T17:54:20Z,154789
3141715341,topperc,,2025-08-21T17:41:34Z,154802
3141724418,jurahul,,2025-08-21T17:44:28Z,154802
3142209700,topperc,LGTM,2025-08-21T20:39:52Z,154802
3142240842,s-barannikov,LGTM,2025-08-21T20:53:39Z,154802
3142321454,jurahul,,2025-08-21T21:25:42Z,154802
3142473039,s-barannikov,,2025-08-21T22:36:46Z,154802
3142522883,jurahul,,2025-08-21T23:11:47Z,154802
3141854171,HazardyKnusperkeks,,2025-08-21T18:31:03Z,154787
3145928515,HazardyKnusperkeks,,2025-08-22T20:38:26Z,154787
3141188917,jayfoad,,2025-08-21T15:19:16Z,154784
3141446694,shiltian,,2025-08-21T16:30:41Z,154784
3141756993,dwblaikie,,2025-08-21T17:56:57Z,154781
3141263202,mjklemm,LGTM.,2025-08-21T15:39:34Z,154786
3141649016,jprotze,"Lgtm

With the additional dependencies a fresh libc++-first build succeeds.",2025-08-21T17:19:27Z,154786
3150413868,nikic,,2025-08-25T08:28:27Z,154786
3142302486,fhahn,"LGTM, thanks",2025-08-21T21:17:17Z,154793
3142606577,lukel97,,2025-08-22T00:00:45Z,154793
3144847946,localspook,,2025-08-22T15:02:06Z,154782
3144943178,flovent,,2025-08-22T15:26:57Z,154782
3147778671,vbvictor,,2025-08-23T11:22:51Z,154782
3147909519,flovent,,2025-08-23T12:05:05Z,154782
3147930875,vbvictor,,2025-08-23T12:13:37Z,154782
3147952156,flovent,,2025-08-23T12:20:45Z,154782
3148092050,vbvictor,,2025-08-23T13:06:52Z,154782
3148149005,flovent,,2025-08-23T13:43:35Z,154782
3148160162,vbvictor,"LGTM
I think we should make follow up patch (not high priority) with either making an option to disable ""empty by comparing to default-constructed object"" or making a regex-option to filter such containers",2025-08-23T14:09:25Z,154782
3141197137,nikic,,2025-08-21T15:23:26Z,154785
3141203176,david-arm,,2025-08-21T15:39:12Z,154785
3154774914,MDevereau,,2025-08-26T09:28:46Z,154785
3159127030,MDevereau,,2025-08-27T09:52:23Z,154785
3159132726,MDevereau,,2025-08-27T09:54:19Z,154785
3159135210,MDevereau,,2025-08-27T09:55:12Z,154785
3159140422,MDevereau,,2025-08-27T09:56:45Z,154785
3165457519,david-arm,Thanks for addressing all the comments so far @MDevereau! I have a few more ...,2025-08-28T17:01:15Z,154785
3173914481,MDevereau,,2025-09-01T15:20:09Z,154785
3176263832,david-arm,LGTM!,2025-09-02T12:54:25Z,154785
3142965089,phoebewang,LGTM.,2025-08-22T03:24:44Z,154780
3144294657,mjklemm,LGTM,2025-08-22T12:22:37Z,154779
3144440372,kparzysz,,2025-08-22T13:07:13Z,154779
3141156270,jayfoad,,2025-08-21T15:10:15Z,154778
3141306243,jurahul,,2025-08-21T15:50:59Z,154778
3149878923,shafik,,2025-08-25T04:34:29Z,154777
3150027421,tbaederr,,2025-08-25T06:00:09Z,154777
3141055469,arsenm,,2025-08-21T14:52:09Z,154776
3141359984,dcaballe,,2025-08-21T16:06:01Z,154774
3142113208,grypp,,2025-08-21T20:00:24Z,154774
3140908725,lukel97,,2025-08-21T14:19:58Z,154771
3140934468,artagnon,,2025-08-21T14:23:30Z,154771
3141007584,artagnon,,2025-08-21T14:41:39Z,154771
3141184918,lukel97,LGTM,2025-08-21T15:21:48Z,154771
3141209701,artagnon,,2025-08-21T15:25:19Z,154771
3141232299,fhahn,,2025-08-21T15:34:19Z,154771
3141326914,fhahn,,2025-08-21T15:56:24Z,154771
3141336439,artagnon,,2025-08-21T15:58:51Z,154771
3142307158,fhahn,,2025-08-21T21:18:29Z,154771
3149315977,fhahn,"LGTM, thanks",2025-08-24T12:17:24Z,154771
3141518247,bonachea,"Thanks @JDPailleux for this PR!

The code seems well-structured, and the tests provide good coverage to exercise the valid use cases.

I've added a few suggestions for minor improvements.",2025-08-21T19:04:37Z,154770
3142599927,clementval,,2025-08-21T23:54:29Z,154770
3144347631,JDPailleux,,2025-08-22T12:38:02Z,154770
3144352722,eugeneepshteyn,,2025-08-22T12:39:53Z,154770
3144362273,JDPailleux,,2025-08-22T12:42:43Z,154770
3144980461,bonachea,,2025-08-22T15:39:16Z,154770
3144980731,bonachea,,2025-08-22T15:39:22Z,154770
3145035400,bonachea,,2025-08-22T15:58:17Z,154770
3145089568,eugeneepshteyn,,2025-08-22T16:17:26Z,154770
3145698410,bonachea,,2025-08-22T19:47:24Z,154770
3149882576,ktras,,2025-08-25T04:37:57Z,154770
3151997532,clementval,,2025-08-25T15:29:00Z,154770
3195393858,JDPailleux,,2025-09-08T08:00:21Z,154770
3198727820,ktras,Thanks for the updates. LGTM.,2025-09-09T01:45:08Z,154770
3142954523,arsenm,,2025-08-22T03:14:04Z,154769
3141492790,dtcxzyw,"Using `contract` makes sense to me. It is inline with the proposal https://discourse.llvm.org/t/rfc-fast-math-flags-semantics-contract/84478 and a similar fold in DAGCombiner: https://github.com/llvm/llvm-project/blob/b5fc4fd0098c18a4ffcc106396e08dfefa45cd65/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp#L19040-L19047.
",2025-08-21T16:40:32Z,154768
3142190890,jcranmer-intel,,2025-08-21T20:31:43Z,154768
3142320046,andykaylor,,2025-08-21T21:24:57Z,154768
3142737200,arsenm,,2025-08-22T01:20:36Z,154768
3143479241,arsenm,"LGTM. I wish the ""N0IsTrunc"" operand was a real fast math flag we could directly test against ",2025-08-22T07:42:57Z,154768
3140841036,boomanaiden154,LGTM. Thanks for the fast response.,2025-08-21T14:02:57Z,154767
3140652265,ckoparkar,,2025-08-21T13:20:24Z,154758
3149868252,shafik,,2025-08-25T04:27:33Z,154758
3213226994,brandonxin,,2025-09-11T18:50:04Z,154758
3214658310,tbaederr,,2025-09-12T05:09:20Z,154758
3140772375,RKSimon,,2025-08-21T13:45:20Z,154759
3140774148,RKSimon,,2025-08-21T13:45:48Z,154759
3142102406,fhahn,"LGTM, thanks!",2025-08-21T19:55:46Z,154759
3143734354,RKSimon,LGTM - cheers,2025-08-22T09:09:22Z,154759
3154619254,igogo-x86,,2025-08-26T08:49:34Z,154754
3140605447,preames,LGTM,2025-08-21T13:08:51Z,154753
3140837953,boomanaiden154,LGTM module one nit and code formatting fixes.,2025-08-21T14:10:29Z,154751
3141928507,davemgreen,,2025-08-21T18:56:49Z,154751
3141931183,davemgreen,Other than my comment about which inst it can use this LGTM. ,2025-08-21T18:57:25Z,154751
3190293566,shiltian,,2025-09-05T17:44:02Z,154757
3140413143,Sirraide,,2025-08-21T12:20:51Z,154744
3150325783,durga4github,,2025-08-25T07:56:02Z,154748
3150387668,linuxlonelyeagle,,2025-08-25T08:17:36Z,154748
3150396553,linuxlonelyeagle,,2025-08-25T08:20:42Z,154748
3150506241,durga4github,LGTM.,2025-08-25T08:56:01Z,154748
3140367685,mhalk,Let's revert for now and fix the reported issues.,2025-08-21T12:08:55Z,154742
3140349990,steakhal,,2025-08-21T12:03:46Z,154741
3140738152,kparzysz,,2025-08-21T13:40:52Z,154740
3151596946,kparzysz,LGTM,2025-08-25T13:56:48Z,154740
3140794210,kparzysz,,2025-08-21T13:52:59Z,154739
3141300823,tblah,,2025-08-21T15:49:45Z,154739
3151587294,kparzysz,LGTM.  Sorry I missed the update.,2025-08-25T13:55:31Z,154739
3159173357,Xazax-hun,"LG, this is also low risk and high value. Good candidate to backport. Thanks a lot for cherry picking!",2025-08-27T10:09:05Z,154738
3140567108,phoebewang,LGTM.,2025-08-21T13:00:28Z,154737
3140491482,jhuber6,,2025-08-21T12:39:54Z,154736
3140584128,callumfare,,2025-08-21T13:03:52Z,154736
3147804061,vbvictor,,2025-08-23T11:36:36Z,154732
3171815392,5chmidti,,2025-08-31T22:10:36Z,154732
3140135057,david-arm,LGTM!,2025-08-21T10:59:11Z,154730
3140137942,artagnon,"LGTM, thanks!",2025-08-21T11:00:13Z,154730
3140150598,fhahn,"LGTM, thanks!",2025-08-21T11:04:53Z,154730
3140302782,arsenm,We should be removing all uses of LivePhysRegs ,2025-08-21T11:50:06Z,154728
3141857165,charithaintc,"LGTM. very useful change. 

Existing code uses `cast<gpu::YieldOp>(warpOp.getBodyRegion().getBlocks().begin()->getTerminator());` to get the terminator. But this approach uses `cast<gpu::YieldOp>(getBody()->getTerminator())`. Wondering if they are the same or could be different in come cases?",2025-08-21T18:37:00Z,154729
3144094104,adam-smnk,,2025-08-22T11:10:15Z,154729
3144194829,joker-eph,,2025-08-22T11:46:09Z,154729
3157419290,adrian-prantl,,2025-08-26T21:52:28Z,154727
3140386616,arsenm,,2025-08-21T12:14:21Z,154726
3141441736,cdevadas,,2025-08-21T16:29:04Z,154726
3141449594,cdevadas,,2025-08-21T16:33:13Z,154726
3142921761,arsenm,,2025-08-22T02:42:45Z,154726
3143547906,Pierre-vh,,2025-08-22T08:06:48Z,154726
3143567620,Pierre-vh,,2025-08-22T08:13:19Z,154726
3150387446,cdevadas,,2025-08-25T08:17:30Z,154726
3150404744,cdevadas,,2025-08-25T08:23:16Z,154726
3202460027,rampitec,,2025-09-09T16:49:01Z,154726
3140354856,arsenm,,2025-08-21T12:04:57Z,154725
3140006587,fhahn,"LGTM, thanks",2025-08-21T10:15:21Z,154716
3140038829,charles-zablit,,2025-08-21T10:25:29Z,154716
3140047624,Michael137,,2025-08-21T10:28:30Z,154716
3140054119,charles-zablit,,2025-08-21T10:30:47Z,154716
3140054890,Michael137,,2025-08-21T10:31:03Z,154716
3140073039,Michael137,,2025-08-21T10:37:46Z,154716
3157269852,RolandF77,LGTM. I don't think preserving the old test is necessary.,2025-08-26T20:49:05Z,154712
3140142707,kadircet,"thanks, for the future, feel free to land reverts (espeically of your own commits) without review",2025-08-21T11:01:59Z,154711
3141844026,rampitec,Basically these tests do not render in the github web and I do not understand which branch is it targeted to. I guess you can commit changes to your private branch w/o review.,2025-08-21T18:27:20Z,154709
3143542674,rampitec,,2025-08-22T08:04:59Z,154709
3142049372,rampitec,Why does it target private branch?,2025-08-21T19:43:09Z,154710
3142052680,rampitec,LGTM in principle.,2025-08-21T19:44:35Z,154710
3158232809,shiltian,Does it mean that the scratch memory can be accessed by not only its own thread?,2025-08-27T04:36:46Z,154710
3160113803,arsenm,,2025-08-27T14:41:48Z,154710
3163848142,Pierre-vh,,2025-08-28T08:39:18Z,154710
3163858641,Pierre-vh,,2025-08-28T08:41:27Z,154710
3165443226,rampitec,,2025-08-28T15:33:58Z,154710
3143155325,arsenm,,2025-08-22T05:41:25Z,154708
3143541594,Pierre-vh,,2025-08-22T08:04:35Z,154708
3143805482,arsenm,,2025-08-22T09:33:24Z,154708
3144031769,Pierre-vh,,2025-08-22T10:45:22Z,154708
3158234732,shiltian,,2025-08-27T04:38:30Z,154708
3160105658,arsenm,"The naming is a bit of a mess, but maybe can fix that as part of consolidating all the atomic control hooks ",2025-08-27T14:39:36Z,154708
3139777017,artagnon,"LGTM, thanks! Perhaps worth investigating if m_Add is also worth adding?",2025-08-21T09:08:31Z,154705
3139807834,fhahn,"LGTM, thanks",2025-08-21T09:18:11Z,154705
3139849693,Dinistro,,2025-08-21T10:34:31Z,154706
3143703869,gysit,"Nice work! 
",2025-08-22T09:23:52Z,154706
3143879516,joker-eph,,2025-08-22T09:58:19Z,154706
3143885708,joker-eph,,2025-08-22T10:00:20Z,154706
3144574166,VadimCurca,,2025-08-22T13:45:10Z,154706
3144599498,VadimCurca,,2025-08-22T13:52:54Z,154706
3144675073,gysit,"Thanks for the changes.

LGTM from my end.

Please wait with landing until the other reviewers had a chance to take a second look.",2025-08-22T14:14:12Z,154706
3144691037,joker-eph,,2025-08-22T14:19:13Z,154706
3144742505,VadimCurca,,2025-08-22T14:34:07Z,154706
3146077626,joker-eph,,2025-08-22T21:14:00Z,154706
3149905902,Dinistro,LGTM!,2025-08-25T04:56:36Z,154706
3164459907,VadimCurca,,2025-08-28T11:27:50Z,154706
3164500782,gysit,"Thanks!

LGTM including the latest change.",2025-08-28T11:40:19Z,154706
3141556222,thurstond,,2025-08-21T16:54:20Z,154701
3141605518,thurstond,Please enlarge the meta region,2025-08-21T17:09:56Z,154701
3141718863,thurstond,,2025-08-21T17:42:09Z,154701
3141788130,thurstond,,2025-08-21T18:08:02Z,154701
3141822001,thurstond,,2025-08-21T18:19:12Z,154701
3141828177,fmayer,,2025-08-21T18:21:39Z,154701
3148295411,4a6f656c,,2025-08-23T15:02:16Z,154701
3149465746,thurstond,"New mapping looks good to me. Thanks for the patch!

Please fix the clang-format, as @fmayer has noted.",2025-08-24T18:26:24Z,154701
3152478668,thurstond,,2025-08-25T17:54:45Z,154701
3159918026,ldionne,,2025-08-27T13:56:00Z,154703
3159966867,philnik777,,2025-08-27T14:08:48Z,154703
3165237214,ldionne,,2025-08-28T14:54:00Z,154703
3177537105,ldionne,,2025-09-02T17:37:20Z,154703
3141597876,thurstond,"Drive-by comment, not necessary to fix in this patch: the shadow and metainfo regions are unnecessarily large relative to the app region (they only need to be 2x and 0.5x in size respectively).",2025-08-21T17:08:15Z,154700
3141746127,wangpc-pp,LGTM.,2025-08-21T17:53:03Z,154700
3139908823,tblah,Looks good to me. Thanks for the fixes.,2025-08-21T09:46:25Z,154698
3141157205,vzakhari,Thank you for the changes!,2025-08-21T15:10:25Z,154698
3139716047,copilot-pull-request-reviewer[bot],"## Pull Request Overview

This PR adds support for the NVVM nanosleep instruction in MLIR's NVVM dialect. This operation allows threads to suspend execution for a specified duration in nanoseconds.

- Adds a new `nvvm.nanosleep` operation with constrained duration parameter (1-1,000,000 nanoseconds)
- Includes test coverage for both valid usage and invalid parameter validation
- Implements the operation to map to the corresponding LLVM intrinsic

### Reviewed Changes

Copilot reviewed 3 out of 3 changed files in this pull request and generated 2 comments.

| File | Description |
| ---- | ----------- |
| mlir/include/mlir/Dialect/LLVMIR/NVVMOps.td | Defines the new NVVM_NanosleepOp with parameter constraints and LLVM intrinsic mapping |
| mlir/test/Target/LLVMIR/nvvmir.mlir | Adds positive test case for nanosleep operation |
| mlir/test/Target/LLVMIR/nvvmir-invalid.mlir | Adds negative test case for invalid duration parameter |



",2025-08-21T08:51:00Z,154697
3139848891,durga4github,"Clean, LGTM!",2025-08-21T09:30:06Z,154697
3139879851,schwarzschild-radius,,2025-08-21T09:39:53Z,154697
3142116538,grypp,,2025-08-21T20:01:53Z,154697
3141763788,shafik,LGTM,2025-08-21T17:59:34Z,154695
3141772047,shafik,,2025-08-21T18:02:49Z,154695
3141361361,thurstond,,2025-08-21T16:06:29Z,154694
3141747832,shafik,,2025-08-21T17:54:46Z,154689
3139725120,s-barannikov,,2025-08-21T08:53:11Z,154691
3141317120,jurahul,,2025-08-21T15:54:11Z,154691
3141340282,jurahul,,2025-08-21T15:59:52Z,154691
3142197671,s-barannikov,,2025-08-21T20:34:44Z,154691
3142212744,jurahul,,2025-08-21T20:41:12Z,154691
3142215335,jurahul,,2025-08-21T20:42:13Z,154691
3142228559,s-barannikov,,2025-08-21T20:46:10Z,154691
3139470067,arsenm,,2025-08-21T07:50:47Z,154688
3139700034,RKSimon,Please improve the summary before you commit - its far too vague,2025-08-21T08:48:18Z,154688
3139605840,wangpc-pp,LGTM.,2025-08-21T08:21:47Z,154685
3140834911,ldionne,,2025-08-21T15:14:13Z,154686
3144564183,ldionne,,2025-08-22T13:46:50Z,154686
3144585873,ldionne,,2025-08-22T14:29:21Z,154686
3144864989,philnik777,,2025-08-22T15:07:28Z,154686
3145050096,ldionne,"Thanks a lot for fixing this. LGTM once CI is green. Once this is landed, we'll also cherry-pick it to the LLVM 21 release.",2025-08-22T16:03:52Z,154686
3147059260,h-vetinari,,2025-08-23T06:17:25Z,154686
3147401618,philnik777,,2025-08-23T08:38:47Z,154686
3147406958,h-vetinari,,2025-08-23T08:46:56Z,154686
3139390979,arsenm,,2025-08-21T07:24:45Z,154681
3139608528,ChuanqiXu9,,2025-08-21T08:22:17Z,154681
3140785410,Sisyph,,2025-08-21T13:48:43Z,154682
3141061508,arsenm,,2025-08-21T14:53:22Z,154682
3141219016,Sisyph,LGTM,2025-08-21T15:30:58Z,154682
3142829853,arsenm,,2025-08-22T01:45:35Z,154682
3142842871,arsenm,,2025-08-22T01:50:28Z,154682
3139361950,snehasish,Lgtm,2025-08-21T07:15:20Z,154684
3139621711,tgymnich,,2025-08-21T08:25:42Z,154679
3140843128,kuhar,,2025-08-21T14:04:29Z,154680
3139619087,tgymnich,,2025-08-21T08:24:52Z,154678
3139783197,arsenm,,2025-08-21T09:10:32Z,154678
3139206821,grypp,,2025-08-21T06:34:53Z,154672
3140037590,DharuniRAcharya,,2025-08-21T10:24:54Z,154672
3140087587,durga4github,,2025-08-21T10:42:50Z,154672
3140177110,gonzalobg,,2025-08-21T11:13:33Z,154672
3141478330,gonzalobg,"I think this is fine as long as eventually: 

```
%0 = call i64 nvvm.read.ptx.sreg.globaltimer()
%1 = trunc i64 %0 to i32
```
eventually lowers to `%globaltimer_lo` in PTX (e.g. by being transformed to `nvvm.read.ptx.sreg.globaltimer_lo()`), but that can be done later.

",2025-08-21T16:37:44Z,154672
3143546922,grypp,,2025-08-22T08:06:26Z,154672
3143547102,grypp,,2025-08-22T08:06:30Z,154672
3141937727,lenary,,2025-08-21T18:58:51Z,154667
3140193320,AaronBallman,LGTM,2025-08-21T11:19:24Z,154671
3141362101,thurstond,,2025-08-21T16:06:37Z,154671
3163811609,Michael137,,2025-08-28T08:28:38Z,154665
3148316328,antoniofrighetto,"LLVM IR module before BBs pruning in SCCP:
```llvm
define i32 @caller() {
entry:
  %call1 = call i32 @callee.specialized.1(i32 1)
  %call2 = call i32 @callee.specialized.2(i32 0)
  %cond = icmp eq i32 undef, 0
  br i1 %cond, label %common.ret, label %if.then

common.ret:                                       ; preds = %entry
  ret i32 0

if.then:                                          ; preds = %entry
  %unreachable_call = call i32 @callee(i32 2)
  ret i32 0
}

define internal i32 @callee(i32 %ac) {
entry:
  br label %ai

ai:                                               ; preds = %entry
  unreachable

aj:                                               ; No predecessors!
  unreachable
}

define internal i32 @callee.specialized.1(i32 %ac) {
entry:
  br label %ai

ai:                                               ; preds = %ai, %entry
  %add = or i32 0, 0
  %cond = icmp eq i32 %ac, 1
  br i1 %cond, label %aj, label %ai

aj:                                               ; preds = %ai
  ret i32 0
}

define internal i32 @callee.specialized.2(i32 %ac) {
entry:
  br label %ai

ai:                                               ; preds = %ai, %entry
  %add = or i32 0, 0
  %cond = icmp eq i32 %ac, 1
  br i1 %cond, label %aj, label %ai

aj:                                               ; preds = %ai
  ret i32 0
}
```
As you correctly noted, FunctionSpecialization happens to look only at executable call-sites. Since the last call-site is not marked as executable, it is ignored by specialization. IIUC the fix correctly, you're suggesting to introduce specialization to those call-sites that live in basic blocks which were determined by the solver to be never executable.

The current code in updateCallSites seems correct to me, as `callee` is eventually marked as unreachable, as being fully specialized along all its executable-proven paths:

https://github.com/llvm/llvm-project/blob/cbf5af9668931bbc843a80817e0385629e03c5e4/llvm/lib/Transforms/IPO/FunctionSpecialization.cpp#L1207-L1212

Isn't the discrepancy here stemming from the fact that we are attempting to remove basic blocks of a fully specialized function, where it should be up to FunctionSpecializer's destructor to remove such functions (in which case, unreachable call-sites should be removed as well)?",2025-08-23T15:15:04Z,154668
3150299823,antoniofrighetto,"LGTM, thanks! Could you please update PR title as well?",2025-08-25T07:46:40Z,154668
3150301886,antoniofrighetto,,2025-08-25T07:48:17Z,154668
3155822626,labrinea,"> However, the unexecutable call sites can become executable again after solving specialized calls. In this testcase, `call2` is considered Overdefined after specialization, making `cond` also Overdefined. Thus, `unreachable_call` becomes executable.

What is the LatticeValue of `call2` after specialization? Is it `undef`? I am puzzled why the solver considers `unreachable_call` non executable in the first place. Surely `call2` falls into an infinite loop not returning zero.",2025-08-26T14:56:16Z,154668
3156530019,XChy,,2025-08-26T16:54:48Z,154668
3156695802,XChy,,2025-08-26T17:50:17Z,154668
3156736658,XChy,,2025-08-26T18:01:28Z,154668
3159053734,labrinea,,2025-08-27T09:29:33Z,154668
3159672693,labrinea,"Thanks for adding a test for addressTaken. One remark about the first test, otherwise the patch looks ok I think. I am wondering if we need another test to demonstrate the poisoning of users, and why does it now show in the first example.",2025-08-27T12:56:10Z,154668
3160464623,XChy,,2025-08-27T15:45:41Z,154668
3160625264,labrinea,I think I am satisfied with the patch in its current form. If I am missing something I hope that a bootstrap build will catch it for us.,2025-08-27T16:14:33Z,154668
3142696201,shiltian,,2025-08-22T01:03:49Z,154666
3142697097,shiltian,,2025-08-22T01:04:42Z,154666
3143162202,arsenm,,2025-08-22T05:47:37Z,154666
3153786195,arsenm,,2025-08-26T03:54:01Z,154666
3153797834,arsenm,,2025-08-26T04:02:36Z,154666
3157881752,shiltian,,2025-08-27T01:11:47Z,154666
3142903564,newling,LGTM. FYI we've been discussing converting these patterns to greedy patterns https://github.com/llvm/llvm-project/issues/146030,2025-08-22T02:33:29Z,154664
3142912067,newling,,2025-08-22T02:34:36Z,154664
3143499537,yangtetris,,2025-08-22T07:49:59Z,154664
3145054363,dcaballe,"Awesome, thanks!",2025-08-22T16:05:36Z,154664
3158778406,banach-space,"LGTM, thanks!",2025-08-27T07:57:59Z,154664
3162647283,shafik,"This should have a release note, right?",2025-08-28T01:31:14Z,154662
3163880493,RKSimon,LGTM - cheers (I've updated the patch to trunk to bump the CI to try and get it green),2025-08-28T08:45:40Z,154662
3138965952,lntue,,2025-08-21T04:15:13Z,154663
3141352826,jhuber6,,2025-08-21T16:03:28Z,154663
3138702414,mtrofin,,2025-08-21T01:05:00Z,154655
3148624053,amy-kwan,LGTM.,2025-08-23T18:12:28Z,154654
3138808563,arsenm,,2025-08-21T02:11:24Z,154659
3139748899,adam-smnk,"Great cleanup 👍
One design question ",2025-08-21T09:09:01Z,154653
3139844592,akroviakov,"LGTM, makes https://github.com/llvm/llvm-project/pull/154556 less confusing",2025-08-21T09:39:46Z,154653
3141535227,silee2,,2025-08-21T16:48:07Z,154653
3141611774,silee2,,2025-08-21T17:11:14Z,154653
3141715035,silee2,,2025-08-21T17:40:49Z,154653
3141745172,silee2,,2025-08-21T17:52:39Z,154653
3142177832,charithaintc,"LGTM.

But I am not sure about the need for scalar offsets. Maybe you can clarify that a bit. ",2025-08-21T20:34:18Z,154653
3142680248,silee2,,2025-08-22T00:47:29Z,154653
3142685713,silee2,,2025-08-22T00:53:10Z,154653
3142691576,silee2,,2025-08-22T00:59:08Z,154653
3144935387,chencha3,,2025-08-22T15:24:50Z,154653
3144958773,chencha3,,2025-08-22T15:31:34Z,154653
3145011775,silee2,,2025-08-22T15:49:42Z,154653
3145014570,silee2,,2025-08-22T15:50:39Z,154653
3144969805,chencha3,,2025-08-22T16:13:09Z,154653
3145093188,chencha3,,2025-08-22T16:18:58Z,154653
3145094334,chencha3,LGTM,2025-08-22T16:19:26Z,154653
3145165107,adam-smnk,,2025-08-22T16:48:54Z,154653
3145203786,adam-smnk,,2025-08-22T17:05:28Z,154653
3145446802,silee2,,2025-08-22T18:25:44Z,154653
3145454833,silee2,,2025-08-22T18:29:37Z,154653
3145456718,silee2,,2025-08-22T18:30:32Z,154653
3145476847,silee2,,2025-08-22T18:38:31Z,154653
3142779854,JDevlieghere,Nice cleanup!,2025-08-22T01:30:26Z,154651
3141303273,jurahul,"LGTM, but can you wait for someone from M68k side to approve as well?",2025-08-21T15:50:12Z,154649
3142363167,mshockwave,"LGTM, thanks. I can add a disassembler test in another follow-up commit.",2025-08-21T21:46:06Z,154649
3138533465,arsenm,,2025-08-20T23:29:05Z,154648
3139751067,jayfoad,,2025-08-21T09:00:17Z,154648
3139759925,jayfoad,,2025-08-21T09:03:30Z,154648
3142568766,nhaehnle,,2025-08-21T23:35:54Z,154648
3156959494,rampitec,LGTM,2025-08-26T19:07:18Z,154648
3156429687,preames,LGTM,2025-08-26T16:25:08Z,154647
3149498946,overmighty,,2025-08-24T20:45:30Z,154652
3157287357,overmighty,,2025-08-26T20:56:01Z,154652
3158372840,overmighty,,2025-08-27T06:04:14Z,154652
3138510039,arsenm,,2025-08-20T23:12:13Z,154645
3138471208,clementval,LGTM,2025-08-20T22:44:12Z,154643
3141288568,jurahul,,2025-08-21T15:46:07Z,154644
3138973141,lntue,,2025-08-21T04:20:02Z,154640
3139663330,mjklemm,LGTM,2025-08-21T08:37:37Z,154638
3141574647,tarunprabhu,LGTM. Thanks,2025-08-21T17:01:26Z,154638
3138606285,llvm-beanz,,2025-08-21T00:06:29Z,154639
3141972796,inbelic,,2025-08-21T19:11:49Z,154639
3141973094,inbelic,,2025-08-21T19:11:57Z,154639
3145098677,llvm-beanz,,2025-08-22T16:21:19Z,154639
3145214494,llvm-beanz,,2025-08-22T17:08:42Z,154639
3153145407,Icohedron,Looks good,2025-08-25T21:54:04Z,154639
3153147752,Icohedron,,2025-08-25T21:55:33Z,154639
3156718100,adam-smnk,,2025-08-26T17:59:17Z,154637
3161277210,chencha3,,2025-08-27T18:28:28Z,154637
3177613081,Jianhui-Li,,2025-09-02T18:05:18Z,154637
3177692875,chencha3,,2025-09-02T18:34:20Z,154637
3178015377,Jianhui-Li,,2025-09-02T20:31:01Z,154637
3179723572,adam-smnk,,2025-09-03T09:26:01Z,154637
3181134976,chencha3,,2025-09-03T15:10:06Z,154637
3181136508,chencha3,,2025-09-03T15:10:16Z,154637
3181145493,chencha3,,2025-09-03T15:12:36Z,154637
3181148909,chencha3,,2025-09-03T15:13:29Z,154637
3181150602,chencha3,,2025-09-03T15:13:57Z,154637
3181227304,adam-smnk,,2025-09-03T15:34:51Z,154637
3181244170,adam-smnk,,2025-09-03T15:38:47Z,154637
3181391078,Jianhui-Li,LGTM,2025-09-03T16:18:46Z,154637
3182033000,chencha3,,2025-09-03T18:58:57Z,154637
3160411011,jmorse,"This makes sense / I think I understand it, we can end up committing to creating a DIE in `getOrCreateSubprogramDIE`, but then create ourselves between committing and actually creating the DIE. I've seen these random-nameless-entryless DW_TAG_subprograms in many files, fixing this is most welcome.

IMO the comment added to DwarfUnit.cpp should signal that it's a workaround, to encourage someone in the future to either fix it, or not get in their way if they're fixing it. Ideally the test would be more focused, but it's pre-existing, after all.",2025-08-27T15:34:17Z,154636
3141262197,walter-erquinigo,,2025-08-21T15:39:15Z,154632
3140698089,yxsamliu,,2025-08-21T13:29:57Z,154630
3142298091,mysterymath,,2025-08-21T21:20:47Z,154633
3142313268,mysterymath,,2025-08-21T21:21:16Z,154633
3143049931,markram1729,,2025-08-22T04:37:46Z,154633
3143051801,markram1729,,2025-08-22T04:39:04Z,154633
3143053835,markram1729,,2025-08-22T04:40:10Z,154633
3145544526,mysterymath,,2025-08-25T18:55:56Z,154633
3153991691,markram1729,,2025-08-26T05:29:41Z,154633
3153991974,markram1729,,2025-08-26T05:29:51Z,154633
3153992122,markram1729,,2025-08-26T05:29:57Z,154633
3153992416,markram1729,,2025-08-26T05:30:08Z,154633
3156779123,mysterymath,,2025-08-26T18:12:53Z,154633
3157243951,mysterymath,,2025-08-26T20:41:33Z,154633
3169654864,mysterymath,,2025-08-29T18:18:38Z,154633
3138414004,erichkeane,,2025-08-20T22:09:40Z,154628
3138419331,erichkeane,,2025-08-20T22:11:30Z,154628
3138873653,Sirraide,,2025-08-21T02:54:35Z,154628
3141693710,delcypher,,2025-08-21T17:40:56Z,154628
3141748281,erichkeane,"Yep, LGTM.",2025-08-21T17:53:55Z,154628
3166074859,bogner,,2025-08-28T19:53:30Z,154629
3170180823,damyanp,,2025-08-29T20:52:18Z,154629
3170338393,joaosaffran,,2025-08-29T21:34:49Z,154629
3170772773,joaosaffran,,2025-08-30T00:58:08Z,154629
3170791047,joaosaffran,,2025-08-30T01:10:47Z,154629
3170804727,joaosaffran,,2025-08-30T01:27:57Z,154629
3170805536,joaosaffran,,2025-08-30T01:30:08Z,154629
3170806383,joaosaffran,,2025-08-30T01:32:54Z,154629
3170808157,joaosaffran,,2025-08-30T01:36:01Z,154629
3170809623,joaosaffran,,2025-08-30T01:38:28Z,154629
3177310426,damyanp,,2025-09-02T16:52:36Z,154629
3190191232,inbelic,,2025-09-05T23:08:23Z,154629
3197861515,joaosaffran,,2025-09-08T19:28:26Z,154629
3197866277,joaosaffran,,2025-09-08T19:29:56Z,154629
3197899259,joaosaffran,,2025-09-08T19:42:10Z,154629
3197900692,joaosaffran,,2025-09-08T19:42:44Z,154629
3197906580,joaosaffran,,2025-09-08T19:45:09Z,154629
3197929792,joaosaffran,,2025-09-08T19:54:01Z,154629
3198621827,damyanp,,2025-09-09T00:48:28Z,154629
3198622640,damyanp,LGTM,2025-09-09T00:49:15Z,154629
3206944136,bogner,,2025-09-10T16:35:43Z,154629
3206980141,damyanp,,2025-09-10T16:46:51Z,154629
3206981712,bogner,Looks good other than my comment about `isValidRangeType`,2025-09-10T16:49:37Z,154629
3207221391,joaosaffran,,2025-09-10T17:46:59Z,154629
3207361278,bogner,,2025-09-10T18:29:40Z,154629
3138922464,Sirraide,,2025-08-21T03:37:24Z,154627
3138923929,Sirraide,,2025-08-21T03:38:32Z,154627
3140185773,AaronBallman,,2025-08-21T11:18:41Z,154627
3141866986,Mr-Anyone,,2025-08-21T19:53:06Z,154627
3144379426,AaronBallman,LGTM!,2025-08-22T12:48:53Z,154627
3144939769,yronglin,,2025-08-22T15:25:56Z,154627
3144940745,yronglin,,2025-08-22T15:26:14Z,154627
3138338354,efriedma-quic,,2025-08-20T21:37:04Z,154623
3138661374,shafik,,2025-08-21T00:33:18Z,154623
3140180663,AaronBallman,LGTM,2025-08-21T11:14:48Z,154623
3138321332,philnik777,,2025-08-20T21:32:48Z,154622
3138812056,frederick-vs-ja,,2025-08-21T02:13:11Z,154622
3138648015,ElvisWang123,"LGTM, thanks!",2025-08-21T00:23:54Z,154617
3141251216,farzonl,,2025-08-21T15:36:08Z,154620
3141285338,bogner,,2025-08-21T15:45:14Z,154620
3153462338,hekota,Just a few comments. I did not review the algorithm in detail yet.,2025-08-26T04:13:00Z,154620
3156022152,farzonl,,2025-08-26T14:50:05Z,154620
3156030437,farzonl,,2025-08-26T14:51:48Z,154620
3156802468,hekota,,2025-08-26T18:19:44Z,154620
3156809461,hekota,,2025-08-26T18:22:14Z,154620
3161211847,bogner,It'd be nice to also include a small handwritten test that shows the Phi transformation - it's a bit hard to see what it does in the simple case with a test case derived from HLSL like this.,2025-08-27T18:39:34Z,154620
3161342786,farzonl,,2025-08-27T18:45:07Z,154620
3161364243,nikic,,2025-08-27T18:50:55Z,154620
3161493381,farzonl,,2025-08-27T19:28:03Z,154620
3161550824,farzonl,,2025-08-27T19:50:38Z,154620
3161624709,farzonl,,2025-08-27T20:17:04Z,154620
3162848111,farzonl,,2025-08-28T02:29:00Z,154620
3165616513,farzonl,,2025-08-28T16:24:51Z,154620
3166027111,bogner,This looks good to me. Please wait to hear back from @nikic on whether we should do the `isTokenLikeTy()` refactoring before or after this change.,2025-08-28T18:18:36Z,154620
3166090554,bogner,,2025-08-28T18:48:38Z,154620
3166142128,farzonl,,2025-08-28T18:57:30Z,154620
3166144268,nikic,"> This looks good to me. Please wait to hear back from @nikic on whether we should do the isTokenLikeTy() refactoring before or after this change.

I'd like the usages in the IR verifier to be adjusted, and an IR verifier test added that errors when using such a type in a phi node.

I don't think we need to replace other uses at this time.",2025-08-28T19:03:06Z,154620
3166177704,farzonl,,2025-08-28T19:11:23Z,154620
3166286505,bogner,,2025-08-28T19:48:33Z,154620
3166387648,farzonl,,2025-08-28T20:25:37Z,154620
3166447045,nikic,,2025-08-28T20:40:59Z,154620
3166458613,farzonl,,2025-08-28T20:45:20Z,154620
3166578133,farzonl,,2025-08-28T21:19:44Z,154620
3169707572,bogner,,2025-08-29T18:41:41Z,154620
3138877979,Sirraide,Reusing the existing diagnostics machinery for this sgtm.,2025-08-21T03:22:21Z,154618
3138912469,Sirraide,,2025-08-21T03:27:16Z,154618
3141764155,delcypher,,2025-08-21T17:59:43Z,154618
3141770510,delcypher,,2025-08-21T18:02:08Z,154618
3141948394,Sirraide,,2025-08-21T19:03:00Z,154618
3142336156,delcypher,,2025-08-21T21:33:13Z,154618
3142345837,delcypher,,2025-08-21T21:38:48Z,154618
3142346609,delcypher,,2025-08-21T21:39:14Z,154618
3142358889,delcypher,,2025-08-21T21:44:12Z,154618
3141825850,ilovepi,,2025-08-21T22:11:23Z,154618
3142426926,delcypher,,2025-08-21T22:16:01Z,154618
3142432495,delcypher,,2025-08-21T22:18:33Z,154618
3142433108,delcypher,,2025-08-21T22:18:57Z,154618
3142526464,delcypher,,2025-08-21T23:15:10Z,154618
3142526630,delcypher,,2025-08-21T23:15:19Z,154618
3142526985,delcypher,,2025-08-21T23:15:40Z,154618
3142528183,delcypher,,2025-08-21T23:16:51Z,154618
3142528350,delcypher,,2025-08-21T23:17:00Z,154618
3142528813,delcypher,,2025-08-21T23:17:27Z,154618
3142528965,delcypher,,2025-08-21T23:17:37Z,154618
3142572820,delcypher,,2025-08-21T23:37:03Z,154618
3142597506,ilovepi,,2025-08-21T23:52:14Z,154618
3142599977,delcypher,,2025-08-21T23:54:32Z,154618
3143951627,Sirraide,,2025-08-22T10:18:39Z,154618
3146226105,delcypher,,2025-08-22T21:40:46Z,154618
3146253009,delcypher,,2025-08-22T21:44:03Z,154618
3146315256,Sirraide,,2025-08-22T22:01:55Z,154618
3147683418,Sirraide,Just some minor comments; the overall approach looks fine to me.,2025-08-23T11:35:20Z,154618
3152771855,delcypher,,2025-08-25T19:30:10Z,154618
3152773271,delcypher,,2025-08-25T19:30:46Z,154618
3152776139,Sirraide,,2025-08-25T19:32:01Z,154618
3152777241,delcypher,,2025-08-25T19:32:32Z,154618
3152782578,delcypher,,2025-08-25T19:34:49Z,154618
3152784042,delcypher,,2025-08-25T19:35:30Z,154618
3152788938,Sirraide,,2025-08-25T19:37:40Z,154618
3152883039,ilovepi,,2025-08-25T20:14:45Z,154618
3153314992,delcypher,,2025-08-25T23:26:37Z,154618
3153315845,delcypher,,2025-08-25T23:27:19Z,154618
3153318983,delcypher,,2025-08-25T23:29:47Z,154618
3153319647,delcypher,,2025-08-25T23:30:03Z,154618
3153408033,Sirraide,,2025-08-26T00:25:25Z,154618
3153411277,fmayer,,2025-08-26T00:29:12Z,154618
3153408713,Sirraide,"Some very minor things, but other than this it lgtm; I’ll leave it to someone more familiar w/ UBSan to approve this though.",2025-08-26T00:30:58Z,154618
3156648365,delcypher,,2025-08-26T17:33:36Z,154618
3156721299,delcypher,,2025-08-26T17:56:34Z,154618
3157523101,ilovepi,LGTM from my perspective. Its worth noting that I'm not one of the normal maintainers of UBSan though. My team is just eager for this feature for our embedded/kernel users. I'll defer to @vitalybuka and @thurstond since they deal with this part of the codebase much more frequently than me.,2025-08-26T22:42:35Z,154618
3157593653,delcypher,,2025-08-26T23:14:27Z,154618
3158557820,vitalybuka,"LGTM, but please address others comments",2025-08-27T06:52:46Z,154618
3161094476,thurstond,,2025-08-27T17:47:17Z,154618
3161111168,thurstond,,2025-08-27T17:50:34Z,154618
3161129096,thurstond,,2025-08-27T17:54:22Z,154618
3161439859,delcypher,,2025-08-27T19:10:51Z,154618
3161516454,thurstond,,2025-08-27T19:37:36Z,154618
3138225093,maksfb,,2025-08-20T20:58:58Z,154611
3140245210,AaronBallman,"LGTM, thank you for checking the performance characteristics of the change! I think we need a release note, though.",2025-08-21T11:38:08Z,154610
3149648038,shafik,,2025-08-25T02:01:53Z,154610
3149754965,efriedma-quic,,2025-08-25T03:25:09Z,154610
3153337814,shafik,,2025-08-25T23:41:08Z,154610
3138152520,kastiglione,,2025-08-20T20:34:14Z,154607
3138313405,Michael137,,2025-08-20T21:31:01Z,154607
3138320231,Michael137,,2025-08-20T21:32:28Z,154607
3141351690,kastiglione,,2025-08-21T16:03:05Z,154607
3141437585,kastiglione,,2025-08-21T16:27:42Z,154607
3141449540,charles-zablit,"LGTM, thanks!",2025-08-21T16:31:40Z,154607
3142170762,kastiglione,,2025-08-21T20:22:56Z,154607
3138307533,Michael137,,2025-08-20T21:29:38Z,154606
3138252086,ojhunt,,2025-08-20T21:10:23Z,154608
3139376709,steakhal,"The `A new flag --static-libclosure...` paragraph is still mentioned in the Static Analyzer New Features section.
I think the conflict resolution was wrong here.
I'll have a look later today.",2025-08-21T07:20:38Z,154608
3140273681,steakhal,Resolved; LGTM now,2025-08-21T11:43:46Z,154608
3138116166,steakhal,What a swift response. Thank you!,2025-08-20T20:19:03Z,154605
3138196363,fhahn,"I'm not sure if we need those assertions; each valid basic block must have a terminator I think and I think we must check that there's a loop predecessor somewhere previously.

Is there any particular issue you are trying to fix/guard against? I think there are quite a number of places where we have a similar pattern",2025-08-20T20:50:38Z,154603
3138370465,rampitec,,2025-08-20T21:51:56Z,154604
3138131406,michaelrj-google,LGTM,2025-08-20T20:25:27Z,154602
3138074805,eugeneepshteyn,,2025-08-20T20:05:05Z,154601
3138081979,klausler,,2025-08-20T20:07:45Z,154601
3138086497,eugeneepshteyn,,2025-08-20T20:09:13Z,154601
3138094130,eugeneepshteyn,,2025-08-20T20:11:32Z,154601
3138243295,akuhlens,,2025-08-20T21:06:48Z,154601
3138490728,vzakhari,"Thank you, Peter!",2025-08-20T23:00:12Z,154601
